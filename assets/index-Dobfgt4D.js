function vM(t,e){for(var n=0;n<e.length;n++){const s=e[n];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in t)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(t,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=n(r);fetch(r.href,i)}})();var Li=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function jv(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function SM(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}),n}var VT={exports:{}},Uy={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var CM=Symbol.for("react.transitional.element"),kM=Symbol.for("react.fragment");function UT(t,e,n){var s=null;if(n!==void 0&&(s=""+n),e.key!==void 0&&(s=""+e.key),"key"in e){n={};for(var r in e)r!=="key"&&(n[r]=e[r])}else n=e;return e=n.ref,{$$typeof:CM,type:t,key:s,ref:e!==void 0?e:null,props:n}}Uy.Fragment=kM;Uy.jsx=UT;Uy.jsxs=UT;VT.exports=Uy;var Oe=VT.exports,WT={exports:{}},et={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qv=Symbol.for("react.transitional.element"),$M=Symbol.for("react.portal"),NM=Symbol.for("react.fragment"),IM=Symbol.for("react.strict_mode"),TM=Symbol.for("react.profiler"),EM=Symbol.for("react.consumer"),RM=Symbol.for("react.context"),AM=Symbol.for("react.forward_ref"),DM=Symbol.for("react.suspense"),_M=Symbol.for("react.memo"),GT=Symbol.for("react.lazy"),zk=Symbol.iterator;function OM(t){return t===null||typeof t!="object"?null:(t=zk&&t[zk]||t["@@iterator"],typeof t=="function"?t:null)}var HT={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},jT=Object.assign,qT={};function Ec(t,e,n){this.props=t,this.context=e,this.refs=qT,this.updater=n||HT}Ec.prototype.isReactComponent={};Ec.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};Ec.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function XT(){}XT.prototype=Ec.prototype;function Xv(t,e,n){this.props=t,this.context=e,this.refs=qT,this.updater=n||HT}var Kv=Xv.prototype=new XT;Kv.constructor=Xv;jT(Kv,Ec.prototype);Kv.isPureReactComponent=!0;var Lk=Array.isArray,nn={H:null,A:null,T:null,S:null},KT=Object.prototype.hasOwnProperty;function Yv(t,e,n,s,r,i){return n=i.ref,{$$typeof:qv,type:t,key:e,ref:n!==void 0?n:null,props:i}}function FM(t,e){return Yv(t.type,e,void 0,void 0,void 0,t.props)}function Qv(t){return typeof t=="object"&&t!==null&&t.$$typeof===qv}function zM(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var Pk=/\/+/g;function L0(t,e){return typeof t=="object"&&t!==null&&t.key!=null?zM(""+t.key):e.toString(36)}function Mk(){}function LM(t){switch(t.status){case"fulfilled":return t.value;case"rejected":throw t.reason;default:switch(typeof t.status=="string"?t.then(Mk,Mk):(t.status="pending",t.then(function(e){t.status==="pending"&&(t.status="fulfilled",t.value=e)},function(e){t.status==="pending"&&(t.status="rejected",t.reason=e)})),t.status){case"fulfilled":return t.value;case"rejected":throw t.reason}}throw t}function Nu(t,e,n,s,r){var i=typeof t;(i==="undefined"||i==="boolean")&&(t=null);var a=!1;if(t===null)a=!0;else switch(i){case"bigint":case"string":case"number":a=!0;break;case"object":switch(t.$$typeof){case qv:case $M:a=!0;break;case GT:return a=t._init,Nu(a(t._payload),e,n,s,r)}}if(a)return r=r(t),a=s===""?"."+L0(t,0):s,Lk(r)?(n="",a!=null&&(n=a.replace(Pk,"$&/")+"/"),Nu(r,e,n,"",function(u){return u})):r!=null&&(Qv(r)&&(r=FM(r,n+(r.key==null||t&&t.key===r.key?"":(""+r.key).replace(Pk,"$&/")+"/")+a)),e.push(r)),1;a=0;var o=s===""?".":s+":";if(Lk(t))for(var l=0;l<t.length;l++)s=t[l],i=o+L0(s,l),a+=Nu(s,e,n,i,r);else if(l=OM(t),typeof l=="function")for(t=l.call(t),l=0;!(s=t.next()).done;)s=s.value,i=o+L0(s,l++),a+=Nu(s,e,n,i,r);else if(i==="object"){if(typeof t.then=="function")return Nu(LM(t),e,n,s,r);throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.")}return a}function Dm(t,e,n){if(t==null)return t;var s=[],r=0;return Nu(t,s,"","",function(i){return e.call(n,i,r++)}),s}function PM(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var Bk=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function MM(){}et.Children={map:Dm,forEach:function(t,e,n){Dm(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return Dm(t,function(){e++}),e},toArray:function(t){return Dm(t,function(e){return e})||[]},only:function(t){if(!Qv(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};et.Component=Ec;et.Fragment=NM;et.Profiler=TM;et.PureComponent=Xv;et.StrictMode=IM;et.Suspense=DM;et.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=nn;et.act=function(){throw Error("act(...) is not supported in production builds of React.")};et.cache=function(t){return function(){return t.apply(null,arguments)}};et.cloneElement=function(t,e,n){if(t==null)throw Error("The argument must be a React element, but you passed "+t+".");var s=jT({},t.props),r=t.key,i=void 0;if(e!=null)for(a in e.ref!==void 0&&(i=void 0),e.key!==void 0&&(r=""+e.key),e)!KT.call(e,a)||a==="key"||a==="__self"||a==="__source"||a==="ref"&&e.ref===void 0||(s[a]=e[a]);var a=arguments.length-2;if(a===1)s.children=n;else if(1<a){for(var o=Array(a),l=0;l<a;l++)o[l]=arguments[l+2];s.children=o}return Yv(t.type,r,void 0,void 0,i,s)};et.createContext=function(t){return t={$$typeof:RM,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null},t.Provider=t,t.Consumer={$$typeof:EM,_context:t},t};et.createElement=function(t,e,n){var s,r={},i=null;if(e!=null)for(s in e.key!==void 0&&(i=""+e.key),e)KT.call(e,s)&&s!=="key"&&s!=="__self"&&s!=="__source"&&(r[s]=e[s]);var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){for(var o=Array(a),l=0;l<a;l++)o[l]=arguments[l+2];r.children=o}if(t&&t.defaultProps)for(s in a=t.defaultProps,a)r[s]===void 0&&(r[s]=a[s]);return Yv(t,i,void 0,void 0,null,r)};et.createRef=function(){return{current:null}};et.forwardRef=function(t){return{$$typeof:AM,render:t}};et.isValidElement=Qv;et.lazy=function(t){return{$$typeof:GT,_payload:{_status:-1,_result:t},_init:PM}};et.memo=function(t,e){return{$$typeof:_M,type:t,compare:e===void 0?null:e}};et.startTransition=function(t){var e=nn.T,n={};nn.T=n;try{var s=t(),r=nn.S;r!==null&&r(n,s),typeof s=="object"&&s!==null&&typeof s.then=="function"&&s.then(MM,Bk)}catch(i){Bk(i)}finally{nn.T=e}};et.unstable_useCacheRefresh=function(){return nn.H.useCacheRefresh()};et.use=function(t){return nn.H.use(t)};et.useActionState=function(t,e,n){return nn.H.useActionState(t,e,n)};et.useCallback=function(t,e){return nn.H.useCallback(t,e)};et.useContext=function(t){return nn.H.useContext(t)};et.useDebugValue=function(){};et.useDeferredValue=function(t,e){return nn.H.useDeferredValue(t,e)};et.useEffect=function(t,e){return nn.H.useEffect(t,e)};et.useId=function(){return nn.H.useId()};et.useImperativeHandle=function(t,e,n){return nn.H.useImperativeHandle(t,e,n)};et.useInsertionEffect=function(t,e){return nn.H.useInsertionEffect(t,e)};et.useLayoutEffect=function(t,e){return nn.H.useLayoutEffect(t,e)};et.useMemo=function(t,e){return nn.H.useMemo(t,e)};et.useOptimistic=function(t,e){return nn.H.useOptimistic(t,e)};et.useReducer=function(t,e,n){return nn.H.useReducer(t,e,n)};et.useRef=function(t){return nn.H.useRef(t)};et.useState=function(t){return nn.H.useState(t)};et.useSyncExternalStore=function(t,e,n){return nn.H.useSyncExternalStore(t,e,n)};et.useTransition=function(){return nn.H.useTransition()};et.version="19.0.0";WT.exports=et;var Je=WT.exports;const hl=jv(Je);var YT={exports:{}},Wy={},QT={exports:{}},ZT={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(L,Z){var K=L.length;L.push(Z);e:for(;0<K;){var ee=K-1>>>1,se=L[ee];if(0<r(se,Z))L[ee]=Z,L[K]=se,K=ee;else break e}}function n(L){return L.length===0?null:L[0]}function s(L){if(L.length===0)return null;var Z=L[0],K=L.pop();if(K!==Z){L[0]=K;e:for(var ee=0,se=L.length,ie=se>>>1;ee<ie;){var ue=2*(ee+1)-1,le=L[ue],de=ue+1,he=L[de];if(0>r(le,K))de<se&&0>r(he,le)?(L[ee]=he,L[de]=K,ee=de):(L[ee]=le,L[ue]=K,ee=ue);else if(de<se&&0>r(he,K))L[ee]=he,L[de]=K,ee=de;else break e}}return Z}function r(L,Z){var K=L.sortIndex-Z.sortIndex;return K!==0?K:L.id-Z.id}if(t.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var i=performance;t.unstable_now=function(){return i.now()}}else{var a=Date,o=a.now();t.unstable_now=function(){return a.now()-o}}var l=[],u=[],c=1,h=null,d=3,f=!1,p=!1,m=!1,g=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;function w(L){for(var Z=n(u);Z!==null;){if(Z.callback===null)s(u);else if(Z.startTime<=L)s(u),Z.sortIndex=Z.expirationTime,e(l,Z);else break;Z=n(u)}}function v(L){if(m=!1,w(L),!p)if(n(l)!==null)p=!0,q();else{var Z=n(u);Z!==null&&H(v,Z.startTime-L)}}var S=!1,N=-1,I=5,T=-1;function A(){return!(t.unstable_now()-T<I)}function D(){if(S){var L=t.unstable_now();T=L;var Z=!0;try{e:{p=!1,m&&(m=!1,y(N),N=-1),f=!0;var K=d;try{t:{for(w(L),h=n(l);h!==null&&!(h.expirationTime>L&&A());){var ee=h.callback;if(typeof ee=="function"){h.callback=null,d=h.priorityLevel;var se=ee(h.expirationTime<=L);if(L=t.unstable_now(),typeof se=="function"){h.callback=se,w(L),Z=!0;break t}h===n(l)&&s(l),w(L)}else s(l);h=n(l)}if(h!==null)Z=!0;else{var ie=n(u);ie!==null&&H(v,ie.startTime-L),Z=!1}}break e}finally{h=null,d=K,f=!1}Z=void 0}}finally{Z?O():S=!1}}}var O;if(typeof x=="function")O=function(){x(D)};else if(typeof MessageChannel<"u"){var U=new MessageChannel,B=U.port2;U.port1.onmessage=D,O=function(){B.postMessage(null)}}else O=function(){g(D,0)};function q(){S||(S=!0,O())}function H(L,Z){N=g(function(){L(t.unstable_now())},Z)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(L){L.callback=null},t.unstable_continueExecution=function(){p||f||(p=!0,q())},t.unstable_forceFrameRate=function(L){0>L||125<L?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<L?Math.floor(1e3/L):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(L){switch(d){case 1:case 2:case 3:var Z=3;break;default:Z=d}var K=d;d=Z;try{return L()}finally{d=K}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(L,Z){switch(L){case 1:case 2:case 3:case 4:case 5:break;default:L=3}var K=d;d=L;try{return Z()}finally{d=K}},t.unstable_scheduleCallback=function(L,Z,K){var ee=t.unstable_now();switch(typeof K=="object"&&K!==null?(K=K.delay,K=typeof K=="number"&&0<K?ee+K:ee):K=ee,L){case 1:var se=-1;break;case 2:se=250;break;case 5:se=1073741823;break;case 4:se=1e4;break;default:se=5e3}return se=K+se,L={id:c++,callback:Z,priorityLevel:L,startTime:K,expirationTime:se,sortIndex:-1},K>ee?(L.sortIndex=K,e(u,L),n(l)===null&&L===n(u)&&(m?(y(N),N=-1):m=!0,H(v,K-ee))):(L.sortIndex=se,e(l,L),p||f||(p=!0,q())),L},t.unstable_shouldYield=A,t.unstable_wrapCallback=function(L){var Z=d;return function(){var K=d;d=Z;try{return L.apply(this,arguments)}finally{d=K}}}})(ZT);QT.exports=ZT;var BM=QT.exports,JT={exports:{}},Ds={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var VM=Je;function eE(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function Ma(){}var $s={d:{f:Ma,r:function(){throw Error(eE(522))},D:Ma,C:Ma,L:Ma,m:Ma,X:Ma,S:Ma,M:Ma},p:0,findDOMNode:null},UM=Symbol.for("react.portal");function WM(t,e,n){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:UM,key:s==null?null:""+s,children:t,containerInfo:e,implementation:n}}var Dd=VM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function Gy(t,e){if(t==="font")return"";if(typeof e=="string")return e==="use-credentials"?e:""}Ds.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=$s;Ds.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)throw Error(eE(299));return WM(t,e,null,n)};Ds.flushSync=function(t){var e=Dd.T,n=$s.p;try{if(Dd.T=null,$s.p=2,t)return t()}finally{Dd.T=e,$s.p=n,$s.d.f()}};Ds.preconnect=function(t,e){typeof t=="string"&&(e?(e=e.crossOrigin,e=typeof e=="string"?e==="use-credentials"?e:"":void 0):e=null,$s.d.C(t,e))};Ds.prefetchDNS=function(t){typeof t=="string"&&$s.d.D(t)};Ds.preinit=function(t,e){if(typeof t=="string"&&e&&typeof e.as=="string"){var n=e.as,s=Gy(n,e.crossOrigin),r=typeof e.integrity=="string"?e.integrity:void 0,i=typeof e.fetchPriority=="string"?e.fetchPriority:void 0;n==="style"?$s.d.S(t,typeof e.precedence=="string"?e.precedence:void 0,{crossOrigin:s,integrity:r,fetchPriority:i}):n==="script"&&$s.d.X(t,{crossOrigin:s,integrity:r,fetchPriority:i,nonce:typeof e.nonce=="string"?e.nonce:void 0})}};Ds.preinitModule=function(t,e){if(typeof t=="string")if(typeof e=="object"&&e!==null){if(e.as==null||e.as==="script"){var n=Gy(e.as,e.crossOrigin);$s.d.M(t,{crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0})}}else e==null&&$s.d.M(t)};Ds.preload=function(t,e){if(typeof t=="string"&&typeof e=="object"&&e!==null&&typeof e.as=="string"){var n=e.as,s=Gy(n,e.crossOrigin);$s.d.L(t,n,{crossOrigin:s,integrity:typeof e.integrity=="string"?e.integrity:void 0,nonce:typeof e.nonce=="string"?e.nonce:void 0,type:typeof e.type=="string"?e.type:void 0,fetchPriority:typeof e.fetchPriority=="string"?e.fetchPriority:void 0,referrerPolicy:typeof e.referrerPolicy=="string"?e.referrerPolicy:void 0,imageSrcSet:typeof e.imageSrcSet=="string"?e.imageSrcSet:void 0,imageSizes:typeof e.imageSizes=="string"?e.imageSizes:void 0,media:typeof e.media=="string"?e.media:void 0})}};Ds.preloadModule=function(t,e){if(typeof t=="string")if(e){var n=Gy(e.as,e.crossOrigin);$s.d.m(t,{as:typeof e.as=="string"&&e.as!=="script"?e.as:void 0,crossOrigin:n,integrity:typeof e.integrity=="string"?e.integrity:void 0})}else $s.d.m(t)};Ds.requestFormReset=function(t){$s.d.r(t)};Ds.unstable_batchedUpdates=function(t,e){return t(e)};Ds.useFormState=function(t,e,n){return Dd.H.useFormState(t,e,n)};Ds.useFormStatus=function(){return Dd.H.useHostTransitionStatus()};Ds.version="19.0.0";function tE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(tE)}catch(t){console.error(t)}}tE(),JT.exports=Ds;var GM=JT.exports;/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Bn=BM,nE=Je,HM=GM;function ae(t){var e="https://react.dev/errors/"+t;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function sE(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}var jM=Symbol.for("react.element"),_m=Symbol.for("react.transitional.element"),wd=Symbol.for("react.portal"),Ou=Symbol.for("react.fragment"),rE=Symbol.for("react.strict_mode"),X1=Symbol.for("react.profiler"),qM=Symbol.for("react.provider"),iE=Symbol.for("react.consumer"),ma=Symbol.for("react.context"),Zv=Symbol.for("react.forward_ref"),K1=Symbol.for("react.suspense"),Y1=Symbol.for("react.suspense_list"),Jv=Symbol.for("react.memo"),Ua=Symbol.for("react.lazy"),aE=Symbol.for("react.offscreen"),XM=Symbol.for("react.memo_cache_sentinel"),Vk=Symbol.iterator;function ad(t){return t===null||typeof t!="object"?null:(t=Vk&&t[Vk]||t["@@iterator"],typeof t=="function"?t:null)}var KM=Symbol.for("react.client.reference");function Q1(t){if(t==null)return null;if(typeof t=="function")return t.$$typeof===KM?null:t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case Ou:return"Fragment";case wd:return"Portal";case X1:return"Profiler";case rE:return"StrictMode";case K1:return"Suspense";case Y1:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case ma:return(t.displayName||"Context")+".Provider";case iE:return(t._context.displayName||"Context")+".Consumer";case Zv:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case Jv:return e=t.displayName||null,e!==null?e:Q1(t.type)||"Memo";case Ua:e=t._payload,t=t._init;try{return Q1(t(e))}catch{}}return null}var Ze=nE.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Kt=Object.assign,P0,Uk;function vd(t){if(P0===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);P0=e&&e[1]||"",Uk=-1<n.stack.indexOf(`
    at`)?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return`
`+P0+t+Uk}var M0=!1;function B0(t,e){if(!t||M0)return"";M0=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var s={DetermineComponentFrameRoot:function(){try{if(e){var h=function(){throw Error()};if(Object.defineProperty(h.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(h,[])}catch(f){var d=f}Reflect.construct(t,[],h)}else{try{h.call()}catch(f){d=f}t.call(h.prototype)}}else{try{throw Error()}catch(f){d=f}(h=t())&&typeof h.catch=="function"&&h.catch(function(){})}}catch(f){if(f&&d&&typeof f.stack=="string")return[f.stack,d.stack]}return[null,null]}};s.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var r=Object.getOwnPropertyDescriptor(s.DetermineComponentFrameRoot,"name");r&&r.configurable&&Object.defineProperty(s.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var i=s.DetermineComponentFrameRoot(),a=i[0],o=i[1];if(a&&o){var l=a.split(`
`),u=o.split(`
`);for(r=s=0;s<l.length&&!l[s].includes("DetermineComponentFrameRoot");)s++;for(;r<u.length&&!u[r].includes("DetermineComponentFrameRoot");)r++;if(s===l.length||r===u.length)for(s=l.length-1,r=u.length-1;1<=s&&0<=r&&l[s]!==u[r];)r--;for(;1<=s&&0<=r;s--,r--)if(l[s]!==u[r]){if(s!==1||r!==1)do if(s--,r--,0>r||l[s]!==u[r]){var c=`
`+l[s].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}while(1<=s&&0<=r);break}}}finally{M0=!1,Error.prepareStackTrace=n}return(n=t?t.displayName||t.name:"")?vd(n):""}function YM(t){switch(t.tag){case 26:case 27:case 5:return vd(t.type);case 16:return vd("Lazy");case 13:return vd("Suspense");case 19:return vd("SuspenseList");case 0:case 15:return t=B0(t.type,!1),t;case 11:return t=B0(t.type.render,!1),t;case 1:return t=B0(t.type,!0),t;default:return""}}function Wk(t){try{var e="";do e+=YM(t),t=t.return;while(t);return e}catch(n){return`
Error generating stack: `+n.message+`
`+n.stack}}function Rc(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,e.flags&4098&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function oE(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function Gk(t){if(Rc(t)!==t)throw Error(ae(188))}function QM(t){var e=t.alternate;if(!e){if(e=Rc(t),e===null)throw Error(ae(188));return e!==t?null:t}for(var n=t,s=e;;){var r=n.return;if(r===null)break;var i=r.alternate;if(i===null){if(s=r.return,s!==null){n=s;continue}break}if(r.child===i.child){for(i=r.child;i;){if(i===n)return Gk(r),t;if(i===s)return Gk(r),e;i=i.sibling}throw Error(ae(188))}if(n.return!==s.return)n=r,s=i;else{for(var a=!1,o=r.child;o;){if(o===n){a=!0,n=r,s=i;break}if(o===s){a=!0,s=r,n=i;break}o=o.sibling}if(!a){for(o=i.child;o;){if(o===n){a=!0,n=i,s=r;break}if(o===s){a=!0,s=i,n=r;break}o=o.sibling}if(!a)throw Error(ae(189))}}if(n.alternate!==s)throw Error(ae(190))}if(n.tag!==3)throw Error(ae(188));return n.stateNode.current===n?t:e}function lE(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t;for(t=t.child;t!==null;){if(e=lE(t),e!==null)return e;t=t.sibling}return null}var Sd=Array.isArray,qt=HM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,dl={pending:!1,data:null,method:null,action:null},Z1=[],Fu=-1;function Qi(t){return{current:t}}function Xn(t){0>Fu||(t.current=Z1[Fu],Z1[Fu]=null,Fu--)}function Qt(t,e){Fu++,Z1[Fu]=t.current,t.current=e}var Pi=Qi(null),Zd=Qi(null),to=Qi(null),Ag=Qi(null);function Dg(t,e){switch(Qt(to,e),Qt(Zd,t),Qt(Pi,null),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)&&(e=e.namespaceURI)?H$(e):0;break;default:if(t=t===8?e.parentNode:e,e=t.tagName,t=t.namespaceURI)t=H$(t),e=wA(t,e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}Xn(Pi),Qt(Pi,e)}function ac(){Xn(Pi),Xn(Zd),Xn(to)}function J1(t){t.memoizedState!==null&&Qt(Ag,t);var e=Pi.current,n=wA(e,t.type);e!==n&&(Qt(Zd,t),Qt(Pi,n))}function _g(t){Zd.current===t&&(Xn(Pi),Xn(Zd)),Ag.current===t&&(Xn(Ag),cf._currentValue=dl)}var ew=Object.prototype.hasOwnProperty,e2=Bn.unstable_scheduleCallback,V0=Bn.unstable_cancelCallback,ZM=Bn.unstable_shouldYield,JM=Bn.unstable_requestPaint,Mi=Bn.unstable_now,eB=Bn.unstable_getCurrentPriorityLevel,uE=Bn.unstable_ImmediatePriority,cE=Bn.unstable_UserBlockingPriority,Og=Bn.unstable_NormalPriority,tB=Bn.unstable_LowPriority,hE=Bn.unstable_IdlePriority,nB=Bn.log,sB=Bn.unstable_setDisableYieldValue,Ff=null,ar=null;function rB(t){if(ar&&typeof ar.onCommitFiberRoot=="function")try{ar.onCommitFiberRoot(Ff,t,void 0,(t.current.flags&128)===128)}catch{}}function Ka(t){if(typeof nB=="function"&&sB(t),ar&&typeof ar.setStrictMode=="function")try{ar.setStrictMode(Ff,t)}catch{}}var or=Math.clz32?Math.clz32:oB,iB=Math.log,aB=Math.LN2;function oB(t){return t>>>=0,t===0?32:31-(iB(t)/aB|0)|0}var Om=128,Fm=4194304;function Ko(t){var e=t&42;if(e!==0)return e;switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return t&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return t}}function Hy(t,e){var n=t.pendingLanes;if(n===0)return 0;var s=0,r=t.suspendedLanes,i=t.pingedLanes,a=t.warmLanes;t=t.finishedLanes!==0;var o=n&134217727;return o!==0?(n=o&~r,n!==0?s=Ko(n):(i&=o,i!==0?s=Ko(i):t||(a=o&~a,a!==0&&(s=Ko(a))))):(o=n&~r,o!==0?s=Ko(o):i!==0?s=Ko(i):t||(a=n&~a,a!==0&&(s=Ko(a)))),s===0?0:e!==0&&e!==s&&!(e&r)&&(r=s&-s,a=e&-e,r>=a||r===32&&(a&4194176)!==0)?e:s}function zf(t,e){return(t.pendingLanes&~(t.suspendedLanes&~t.pingedLanes)&e)===0}function lB(t,e){switch(t){case 1:case 2:case 4:case 8:return e+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function dE(){var t=Om;return Om<<=1,!(Om&4194176)&&(Om=128),t}function fE(){var t=Fm;return Fm<<=1,!(Fm&62914560)&&(Fm=4194304),t}function U0(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Lf(t,e){t.pendingLanes|=e,e!==268435456&&(t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0)}function uB(t,e,n,s,r,i){var a=t.pendingLanes;t.pendingLanes=n,t.suspendedLanes=0,t.pingedLanes=0,t.warmLanes=0,t.expiredLanes&=n,t.entangledLanes&=n,t.errorRecoveryDisabledLanes&=n,t.shellSuspendCounter=0;var o=t.entanglements,l=t.expirationTimes,u=t.hiddenUpdates;for(n=a&~n;0<n;){var c=31-or(n),h=1<<c;o[c]=0,l[c]=-1;var d=u[c];if(d!==null)for(u[c]=null,c=0;c<d.length;c++){var f=d[c];f!==null&&(f.lane&=-536870913)}n&=~h}s!==0&&pE(t,s,0),i!==0&&r===0&&t.tag!==0&&(t.suspendedLanes|=i&~(a&~e))}function pE(t,e,n){t.pendingLanes|=e,t.suspendedLanes&=~e;var s=31-or(e);t.entangledLanes|=e,t.entanglements[s]=t.entanglements[s]|1073741824|n&4194218}function mE(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var s=31-or(n),r=1<<s;r&e|t[s]&e&&(t[s]|=e),n&=~r}}function gE(t){return t&=-t,2<t?8<t?t&134217727?32:268435456:8:2}function yE(){var t=qt.p;return t!==0?t:(t=window.event,t===void 0?32:RA(t.type))}function cB(t,e){var n=qt.p;try{return qt.p=t,e()}finally{qt.p=n}}var Eo=Math.random().toString(36).slice(2),ps="__reactFiber$"+Eo,Gs="__reactProps$"+Eo,Ac="__reactContainer$"+Eo,tw="__reactEvents$"+Eo,hB="__reactListeners$"+Eo,dB="__reactHandles$"+Eo,Hk="__reactResources$"+Eo,Jd="__reactMarker$"+Eo;function t2(t){delete t[ps],delete t[Gs],delete t[tw],delete t[hB],delete t[dB]}function il(t){var e=t[ps];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Ac]||n[ps]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=q$(t);t!==null;){if(n=t[ps])return n;t=q$(t)}return e}t=n,n=t.parentNode}return null}function Dc(t){if(t=t[ps]||t[Ac]){var e=t.tag;if(e===5||e===6||e===13||e===26||e===27||e===3)return t}return null}function Cd(t){var e=t.tag;if(e===5||e===26||e===27||e===6)return t.stateNode;throw Error(ae(33))}function ju(t){var e=t[Hk];return e||(e=t[Hk]={hoistableStyles:new Map,hoistableScripts:new Map}),e}function Gn(t){t[Jd]=!0}var xE=new Set,bE={};function Gl(t,e){oc(t,e),oc(t+"Capture",e)}function oc(t,e){for(bE[t]=e,t=0;t<e.length;t++)xE.add(e[t])}var $a=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),fB=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),jk={},qk={};function pB(t){return ew.call(qk,t)?!0:ew.call(jk,t)?!1:fB.test(t)?qk[t]=!0:(jk[t]=!0,!1)}function ug(t,e,n){if(pB(e))if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":t.removeAttribute(e);return;case"boolean":var s=e.toLowerCase().slice(0,5);if(s!=="data-"&&s!=="aria-"){t.removeAttribute(e);return}}t.setAttribute(e,""+n)}}function zm(t,e,n){if(n===null)t.removeAttribute(e);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(e);return}t.setAttribute(e,""+n)}}function ra(t,e,n,s){if(s===null)t.removeAttribute(n);else{switch(typeof s){case"undefined":case"function":case"symbol":case"boolean":t.removeAttribute(n);return}t.setAttributeNS(e,n,""+s)}}function Tr(t){switch(typeof t){case"bigint":case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function wE(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function mB(t){var e=wE(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),s=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var r=n.get,i=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(a){s=""+a,i.call(this,a)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(a){s=""+a},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Fg(t){t._valueTracker||(t._valueTracker=mB(t))}function vE(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),s="";return t&&(s=wE(t)?t.checked?"true":"false":t.value),t=s,t!==n?(e.setValue(t),!0):!1}function zg(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}var gB=/[\n"\\]/g;function Ar(t){return t.replace(gB,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function nw(t,e,n,s,r,i,a,o){t.name="",a!=null&&typeof a!="function"&&typeof a!="symbol"&&typeof a!="boolean"?t.type=a:t.removeAttribute("type"),e!=null?a==="number"?(e===0&&t.value===""||t.value!=e)&&(t.value=""+Tr(e)):t.value!==""+Tr(e)&&(t.value=""+Tr(e)):a!=="submit"&&a!=="reset"||t.removeAttribute("value"),e!=null?sw(t,a,Tr(e)):n!=null?sw(t,a,Tr(n)):s!=null&&t.removeAttribute("value"),r==null&&i!=null&&(t.defaultChecked=!!i),r!=null&&(t.checked=r&&typeof r!="function"&&typeof r!="symbol"),o!=null&&typeof o!="function"&&typeof o!="symbol"&&typeof o!="boolean"?t.name=""+Tr(o):t.removeAttribute("name")}function SE(t,e,n,s,r,i,a,o){if(i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"&&(t.type=i),e!=null||n!=null){if(!(i!=="submit"&&i!=="reset"||e!=null))return;n=n!=null?""+Tr(n):"",e=e!=null?""+Tr(e):n,o||e===t.value||(t.value=e),t.defaultValue=e}s=s??r,s=typeof s!="function"&&typeof s!="symbol"&&!!s,t.checked=o?t.checked:!!s,t.defaultChecked=!!s,a!=null&&typeof a!="function"&&typeof a!="symbol"&&typeof a!="boolean"&&(t.name=a)}function sw(t,e,n){e==="number"&&zg(t.ownerDocument)===t||t.defaultValue===""+n||(t.defaultValue=""+n)}function qu(t,e,n,s){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&s&&(t[n].defaultSelected=!0)}else{for(n=""+Tr(n),e=null,r=0;r<t.length;r++){if(t[r].value===n){t[r].selected=!0,s&&(t[r].defaultSelected=!0);return}e!==null||t[r].disabled||(e=t[r])}e!==null&&(e.selected=!0)}}function CE(t,e,n){if(e!=null&&(e=""+Tr(e),e!==t.value&&(t.value=e),n==null)){t.defaultValue!==e&&(t.defaultValue=e);return}t.defaultValue=n!=null?""+Tr(n):""}function kE(t,e,n,s){if(e==null){if(s!=null){if(n!=null)throw Error(ae(92));if(Sd(s)){if(1<s.length)throw Error(ae(93));s=s[0]}n=s}n==null&&(n=""),e=n}n=Tr(e),t.defaultValue=n,s=t.textContent,s===n&&s!==""&&s!==null&&(t.value=s)}function lc(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var yB=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function Xk(t,e,n){var s=e.indexOf("--")===0;n==null||typeof n=="boolean"||n===""?s?t.setProperty(e,""):e==="float"?t.cssFloat="":t[e]="":s?t.setProperty(e,n):typeof n!="number"||n===0||yB.has(e)?e==="float"?t.cssFloat=n:t[e]=(""+n).trim():t[e]=n+"px"}function $E(t,e,n){if(e!=null&&typeof e!="object")throw Error(ae(62));if(t=t.style,n!=null){for(var s in n)!n.hasOwnProperty(s)||e!=null&&e.hasOwnProperty(s)||(s.indexOf("--")===0?t.setProperty(s,""):s==="float"?t.cssFloat="":t[s]="");for(var r in e)s=e[r],e.hasOwnProperty(r)&&n[r]!==s&&Xk(t,r,s)}else for(var i in e)e.hasOwnProperty(i)&&Xk(t,i,e[i])}function n2(t){if(t.indexOf("-")===-1)return!1;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xB=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),bB=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function cg(t){return bB.test(""+t)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":t}var rw=null;function s2(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var zu=null,Xu=null;function Kk(t){var e=Dc(t);if(e&&(t=e.stateNode)){var n=t[Gs]||null;e:switch(t=e.stateNode,e.type){case"input":if(nw(t,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+Ar(""+e)+'"][type="radio"]'),e=0;e<n.length;e++){var s=n[e];if(s!==t&&s.form===t.form){var r=s[Gs]||null;if(!r)throw Error(ae(90));nw(s,r.value,r.defaultValue,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name)}}for(e=0;e<n.length;e++)s=n[e],s.form===t.form&&vE(s)}break e;case"textarea":CE(t,n.value,n.defaultValue);break e;case"select":e=n.value,e!=null&&qu(t,!!n.multiple,e,!1)}}}var W0=!1;function NE(t,e,n){if(W0)return t(e,n);W0=!0;try{var s=t(e);return s}finally{if(W0=!1,(zu!==null||Xu!==null)&&(tx(),zu&&(e=zu,t=Xu,Xu=zu=null,Kk(e),t)))for(e=0;e<t.length;e++)Kk(t[e])}}function ef(t,e){var n=t.stateNode;if(n===null)return null;var s=n[Gs]||null;if(s===null)return null;n=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(ae(231,e,typeof n));return n}var iw=!1;if($a)try{var od={};Object.defineProperty(od,"passive",{get:function(){iw=!0}}),window.addEventListener("test",od,od),window.removeEventListener("test",od,od)}catch{iw=!1}var Ya=null,r2=null,hg=null;function IE(){if(hg)return hg;var t,e=r2,n=e.length,s,r="value"in Ya?Ya.value:Ya.textContent,i=r.length;for(t=0;t<n&&e[t]===r[t];t++);var a=n-t;for(s=1;s<=a&&e[n-s]===r[i-s];s++);return hg=r.slice(t,1<s?1-s:void 0)}function dg(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Lm(){return!0}function Yk(){return!1}function Ks(t){function e(n,s,r,i,a){this._reactName=n,this._targetInst=r,this.type=s,this.nativeEvent=i,this.target=a,this.currentTarget=null;for(var o in t)t.hasOwnProperty(o)&&(n=t[o],this[o]=n?n(i):i[o]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?Lm:Yk,this.isPropagationStopped=Yk,this}return Kt(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Lm)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Lm)},persist:function(){},isPersistent:Lm}),e}var Hl={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},jy=Ks(Hl),Pf=Kt({},Hl,{view:0,detail:0}),wB=Ks(Pf),G0,H0,ld,qy=Kt({},Pf,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:i2,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==ld&&(ld&&t.type==="mousemove"?(G0=t.screenX-ld.screenX,H0=t.screenY-ld.screenY):H0=G0=0,ld=t),G0)},movementY:function(t){return"movementY"in t?t.movementY:H0}}),Qk=Ks(qy),vB=Kt({},qy,{dataTransfer:0}),SB=Ks(vB),CB=Kt({},Pf,{relatedTarget:0}),j0=Ks(CB),kB=Kt({},Hl,{animationName:0,elapsedTime:0,pseudoElement:0}),$B=Ks(kB),NB=Kt({},Hl,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),IB=Ks(NB),TB=Kt({},Hl,{data:0}),Zk=Ks(TB),EB={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},RB={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},AB={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function DB(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=AB[t])?!!e[t]:!1}function i2(){return DB}var _B=Kt({},Pf,{key:function(t){if(t.key){var e=EB[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=dg(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?RB[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:i2,charCode:function(t){return t.type==="keypress"?dg(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?dg(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),OB=Ks(_B),FB=Kt({},qy,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Jk=Ks(FB),zB=Kt({},Pf,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:i2}),LB=Ks(zB),PB=Kt({},Hl,{propertyName:0,elapsedTime:0,pseudoElement:0}),MB=Ks(PB),BB=Kt({},qy,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),VB=Ks(BB),UB=Kt({},Hl,{newState:0,oldState:0}),WB=Ks(UB),GB=[9,13,27,32],a2=$a&&"CompositionEvent"in window,_d=null;$a&&"documentMode"in document&&(_d=document.documentMode);var HB=$a&&"TextEvent"in window&&!_d,TE=$a&&(!a2||_d&&8<_d&&11>=_d),e$=" ",t$=!1;function EE(t,e){switch(t){case"keyup":return GB.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function RE(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var Lu=!1;function jB(t,e){switch(t){case"compositionend":return RE(e);case"keypress":return e.which!==32?null:(t$=!0,e$);case"textInput":return t=e.data,t===e$&&t$?null:t;default:return null}}function qB(t,e){if(Lu)return t==="compositionend"||!a2&&EE(t,e)?(t=IE(),hg=r2=Ya=null,Lu=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return TE&&e.locale!=="ko"?null:e.data;default:return null}}var XB={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function n$(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!XB[t.type]:e==="textarea"}function AE(t,e,n,s){zu?Xu?Xu.push(s):Xu=[s]:zu=s,e=Zg(e,"onChange"),0<e.length&&(n=new jy("onChange","change",null,n,s),t.push({event:n,listeners:e}))}var Od=null,tf=null;function KB(t){yA(t,0)}function Xy(t){var e=Cd(t);if(vE(e))return t}function s$(t,e){if(t==="change")return e}var DE=!1;if($a){var q0;if($a){var X0="oninput"in document;if(!X0){var r$=document.createElement("div");r$.setAttribute("oninput","return;"),X0=typeof r$.oninput=="function"}q0=X0}else q0=!1;DE=q0&&(!document.documentMode||9<document.documentMode)}function i$(){Od&&(Od.detachEvent("onpropertychange",_E),tf=Od=null)}function _E(t){if(t.propertyName==="value"&&Xy(tf)){var e=[];AE(e,tf,t,s2(t)),NE(KB,e)}}function YB(t,e,n){t==="focusin"?(i$(),Od=e,tf=n,Od.attachEvent("onpropertychange",_E)):t==="focusout"&&i$()}function QB(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return Xy(tf)}function ZB(t,e){if(t==="click")return Xy(e)}function JB(t,e){if(t==="input"||t==="change")return Xy(e)}function e4(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var cr=typeof Object.is=="function"?Object.is:e4;function nf(t,e){if(cr(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var r=n[s];if(!ew.call(e,r)||!cr(t[r],e[r]))return!1}return!0}function a$(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function o$(t,e){var n=a$(t);t=0;for(var s;n;){if(n.nodeType===3){if(s=t+n.textContent.length,t<=e&&s>=e)return{node:n,offset:e-t};t=s}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=a$(n)}}function OE(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?OE(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function FE(t){t=t!=null&&t.ownerDocument!=null&&t.ownerDocument.defaultView!=null?t.ownerDocument.defaultView:window;for(var e=zg(t.document);e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=zg(t.document)}return e}function o2(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function t4(t,e){var n=FE(e);e=t.focusedElem;var s=t.selectionRange;if(n!==e&&e&&e.ownerDocument&&OE(e.ownerDocument.documentElement,e)){if(s!==null&&o2(e)){if(t=s.start,n=s.end,n===void 0&&(n=t),"selectionStart"in e)e.selectionStart=t,e.selectionEnd=Math.min(n,e.value.length);else if(n=(t=e.ownerDocument||document)&&t.defaultView||window,n.getSelection){n=n.getSelection();var r=e.textContent.length,i=Math.min(s.start,r);s=s.end===void 0?i:Math.min(s.end,r),!n.extend&&i>s&&(r=s,s=i,i=r),r=o$(e,i);var a=o$(e,s);r&&a&&(n.rangeCount!==1||n.anchorNode!==r.node||n.anchorOffset!==r.offset||n.focusNode!==a.node||n.focusOffset!==a.offset)&&(t=t.createRange(),t.setStart(r.node,r.offset),n.removeAllRanges(),i>s?(n.addRange(t),n.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),n.addRange(t)))}}for(t=[],n=e;n=n.parentNode;)n.nodeType===1&&t.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof e.focus=="function"&&e.focus(),e=0;e<t.length;e++)n=t[e],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var n4=$a&&"documentMode"in document&&11>=document.documentMode,Pu=null,aw=null,Fd=null,ow=!1;function l$(t,e,n){var s=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;ow||Pu==null||Pu!==zg(s)||(s=Pu,"selectionStart"in s&&o2(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),Fd&&nf(Fd,s)||(Fd=s,s=Zg(aw,"onSelect"),0<s.length&&(e=new jy("onSelect","select",null,e,n),t.push({event:e,listeners:s}),e.target=Pu)))}function Ho(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Mu={animationend:Ho("Animation","AnimationEnd"),animationiteration:Ho("Animation","AnimationIteration"),animationstart:Ho("Animation","AnimationStart"),transitionrun:Ho("Transition","TransitionRun"),transitionstart:Ho("Transition","TransitionStart"),transitioncancel:Ho("Transition","TransitionCancel"),transitionend:Ho("Transition","TransitionEnd")},K0={},zE={};$a&&(zE=document.createElement("div").style,"AnimationEvent"in window||(delete Mu.animationend.animation,delete Mu.animationiteration.animation,delete Mu.animationstart.animation),"TransitionEvent"in window||delete Mu.transitionend.transition);function jl(t){if(K0[t])return K0[t];if(!Mu[t])return t;var e=Mu[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in zE)return K0[t]=e[n];return t}var LE=jl("animationend"),PE=jl("animationiteration"),ME=jl("animationstart"),s4=jl("transitionrun"),r4=jl("transitionstart"),i4=jl("transitioncancel"),BE=jl("transitionend"),VE=new Map,u$="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function xi(t,e){VE.set(t,e),Gl(e,[t])}var Nr=[],Bu=0,l2=0;function Ky(){for(var t=Bu,e=l2=Bu=0;e<t;){var n=Nr[e];Nr[e++]=null;var s=Nr[e];Nr[e++]=null;var r=Nr[e];Nr[e++]=null;var i=Nr[e];if(Nr[e++]=null,s!==null&&r!==null){var a=s.pending;a===null?r.next=r:(r.next=a.next,a.next=r),s.pending=r}i!==0&&UE(n,r,i)}}function Yy(t,e,n,s){Nr[Bu++]=t,Nr[Bu++]=e,Nr[Bu++]=n,Nr[Bu++]=s,l2|=s,t.lanes|=s,t=t.alternate,t!==null&&(t.lanes|=s)}function u2(t,e,n,s){return Yy(t,e,n,s),Lg(t)}function fo(t,e){return Yy(t,null,null,e),Lg(t)}function UE(t,e,n){t.lanes|=n;var s=t.alternate;s!==null&&(s.lanes|=n);for(var r=!1,i=t.return;i!==null;)i.childLanes|=n,s=i.alternate,s!==null&&(s.childLanes|=n),i.tag===22&&(t=i.stateNode,t===null||t._visibility&1||(r=!0)),t=i,i=i.return;r&&e!==null&&t.tag===3&&(i=t.stateNode,r=31-or(n),i=i.hiddenUpdates,t=i[r],t===null?i[r]=[e]:t.push(e),e.lane=n|536870912)}function Lg(t){if(50<qd)throw qd=0,Ew=null,Error(ae(185));for(var e=t.return;e!==null;)t=e,e=t.return;return t.tag===3?t.stateNode:null}var Vu={},c$=new WeakMap;function Dr(t,e){if(typeof t=="object"&&t!==null){var n=c$.get(t);return n!==void 0?n:(e={value:t,source:e,stack:Wk(e)},c$.set(t,e),e)}return{value:t,source:e,stack:Wk(e)}}var Uu=[],Wu=0,Pg=null,Mg=0,Er=[],Rr=0,fl=null,ga=1,ya="";function Yo(t,e){Uu[Wu++]=Mg,Uu[Wu++]=Pg,Pg=t,Mg=e}function WE(t,e,n){Er[Rr++]=ga,Er[Rr++]=ya,Er[Rr++]=fl,fl=t;var s=ga;t=ya;var r=32-or(s)-1;s&=~(1<<r),n+=1;var i=32-or(e)+r;if(30<i){var a=r-r%5;i=(s&(1<<a)-1).toString(32),s>>=a,r-=a,ga=1<<32-or(e)+r|n<<r|s,ya=i+t}else ga=1<<i|n<<r|s,ya=t}function c2(t){t.return!==null&&(Yo(t,1),WE(t,1,0))}function h2(t){for(;t===Pg;)Pg=Uu[--Wu],Uu[Wu]=null,Mg=Uu[--Wu],Uu[Wu]=null;for(;t===fl;)fl=Er[--Rr],Er[Rr]=null,ya=Er[--Rr],Er[Rr]=null,ga=Er[--Rr],Er[Rr]=null}var Cs=null,ss=null,bt=!1,ri=null,Oi=!1,lw=Error(ae(519));function kl(t){var e=Error(ae(418,""));throw sf(Dr(e,t)),lw}function h$(t){var e=t.stateNode,n=t.type,s=t.memoizedProps;switch(e[ps]=t,e[Gs]=s,n){case"dialog":ht("cancel",e),ht("close",e);break;case"iframe":case"object":case"embed":ht("load",e);break;case"video":case"audio":for(n=0;n<of.length;n++)ht(of[n],e);break;case"source":ht("error",e);break;case"img":case"image":case"link":ht("error",e),ht("load",e);break;case"details":ht("toggle",e);break;case"input":ht("invalid",e),SE(e,s.value,s.defaultValue,s.checked,s.defaultChecked,s.type,s.name,!0),Fg(e);break;case"select":ht("invalid",e);break;case"textarea":ht("invalid",e),kE(e,s.value,s.defaultValue,s.children),Fg(e)}n=s.children,typeof n!="string"&&typeof n!="number"&&typeof n!="bigint"||e.textContent===""+n||s.suppressHydrationWarning===!0||bA(e.textContent,n)?(s.popover!=null&&(ht("beforetoggle",e),ht("toggle",e)),s.onScroll!=null&&ht("scroll",e),s.onScrollEnd!=null&&ht("scrollend",e),s.onClick!=null&&(e.onclick=sx),e=!0):e=!1,e||kl(t)}function d$(t){for(Cs=t.return;Cs;)switch(Cs.tag){case 3:case 27:Oi=!0;return;case 5:case 13:Oi=!1;return;default:Cs=Cs.return}}function ud(t){if(t!==Cs)return!1;if(!bt)return d$(t),bt=!0,!1;var e=!1,n;if((n=t.tag!==3&&t.tag!==27)&&((n=t.tag===5)&&(n=t.type,n=!(n!=="form"&&n!=="button")||zw(t.type,t.memoizedProps)),n=!n),n&&(e=!0),e&&ss&&kl(t),d$(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(ae(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8)if(n=t.data,n==="/$"){if(e===0){ss=oi(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++;t=t.nextSibling}ss=null}}else ss=Cs?oi(t.stateNode.nextSibling):null;return!0}function Mf(){ss=Cs=null,bt=!1}function sf(t){ri===null?ri=[t]:ri.push(t)}var zd=Error(ae(460)),GE=Error(ae(474)),uw={then:function(){}};function f$(t){return t=t.status,t==="fulfilled"||t==="rejected"}function Pm(){}function HE(t,e,n){switch(n=t[n],n===void 0?t.push(e):n!==e&&(e.then(Pm,Pm),e=n),e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===zd?Error(ae(483)):t;default:if(typeof e.status=="string")e.then(Pm,Pm);else{if(t=Vt,t!==null&&100<t.shellSuspendCounter)throw Error(ae(482));t=e,t.status="pending",t.then(function(s){if(e.status==="pending"){var r=e;r.status="fulfilled",r.value=s}},function(s){if(e.status==="pending"){var r=e;r.status="rejected",r.reason=s}})}switch(e.status){case"fulfilled":return e.value;case"rejected":throw t=e.reason,t===zd?Error(ae(483)):t}throw Ld=e,zd}}var Ld=null;function p$(){if(Ld===null)throw Error(ae(459));var t=Ld;return Ld=null,t}var Ku=null,rf=0;function Mm(t){var e=rf;return rf+=1,Ku===null&&(Ku=[]),HE(Ku,t,e)}function cd(t,e){e=e.props.ref,t.ref=e!==void 0?e:null}function Bm(t,e){throw e.$$typeof===jM?Error(ae(525)):(t=Object.prototype.toString.call(e),Error(ae(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)))}function m$(t){var e=t._init;return e(t._payload)}function jE(t){function e(y,x){if(t){var w=y.deletions;w===null?(y.deletions=[x],y.flags|=16):w.push(x)}}function n(y,x){if(!t)return null;for(;x!==null;)e(y,x),x=x.sibling;return null}function s(y){for(var x=new Map;y!==null;)y.key!==null?x.set(y.key,y):x.set(y.index,y),y=y.sibling;return x}function r(y,x){return y=ro(y,x),y.index=0,y.sibling=null,y}function i(y,x,w){return y.index=w,t?(w=y.alternate,w!==null?(w=w.index,w<x?(y.flags|=33554434,x):w):(y.flags|=33554434,x)):(y.flags|=1048576,x)}function a(y){return t&&y.alternate===null&&(y.flags|=33554434),y}function o(y,x,w,v){return x===null||x.tag!==6?(x=o1(w,y.mode,v),x.return=y,x):(x=r(x,w),x.return=y,x)}function l(y,x,w,v){var S=w.type;return S===Ou?c(y,x,w.props.children,v,w.key):x!==null&&(x.elementType===S||typeof S=="object"&&S!==null&&S.$$typeof===Ua&&m$(S)===x.type)?(x=r(x,w.props),cd(x,w),x.return=y,x):(x=yg(w.type,w.key,w.props,null,y.mode,v),cd(x,w),x.return=y,x)}function u(y,x,w,v){return x===null||x.tag!==4||x.stateNode.containerInfo!==w.containerInfo||x.stateNode.implementation!==w.implementation?(x=l1(w,y.mode,v),x.return=y,x):(x=r(x,w.children||[]),x.return=y,x)}function c(y,x,w,v,S){return x===null||x.tag!==7?(x=ml(w,y.mode,v,S),x.return=y,x):(x=r(x,w),x.return=y,x)}function h(y,x,w){if(typeof x=="string"&&x!==""||typeof x=="number"||typeof x=="bigint")return x=o1(""+x,y.mode,w),x.return=y,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case _m:return w=yg(x.type,x.key,x.props,null,y.mode,w),cd(w,x),w.return=y,w;case wd:return x=l1(x,y.mode,w),x.return=y,x;case Ua:var v=x._init;return x=v(x._payload),h(y,x,w)}if(Sd(x)||ad(x))return x=ml(x,y.mode,w,null),x.return=y,x;if(typeof x.then=="function")return h(y,Mm(x),w);if(x.$$typeof===ma)return h(y,Vm(y,x),w);Bm(y,x)}return null}function d(y,x,w,v){var S=x!==null?x.key:null;if(typeof w=="string"&&w!==""||typeof w=="number"||typeof w=="bigint")return S!==null?null:o(y,x,""+w,v);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case _m:return w.key===S?l(y,x,w,v):null;case wd:return w.key===S?u(y,x,w,v):null;case Ua:return S=w._init,w=S(w._payload),d(y,x,w,v)}if(Sd(w)||ad(w))return S!==null?null:c(y,x,w,v,null);if(typeof w.then=="function")return d(y,x,Mm(w),v);if(w.$$typeof===ma)return d(y,x,Vm(y,w),v);Bm(y,w)}return null}function f(y,x,w,v,S){if(typeof v=="string"&&v!==""||typeof v=="number"||typeof v=="bigint")return y=y.get(w)||null,o(x,y,""+v,S);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case _m:return y=y.get(v.key===null?w:v.key)||null,l(x,y,v,S);case wd:return y=y.get(v.key===null?w:v.key)||null,u(x,y,v,S);case Ua:var N=v._init;return v=N(v._payload),f(y,x,w,v,S)}if(Sd(v)||ad(v))return y=y.get(w)||null,c(x,y,v,S,null);if(typeof v.then=="function")return f(y,x,w,Mm(v),S);if(v.$$typeof===ma)return f(y,x,w,Vm(x,v),S);Bm(x,v)}return null}function p(y,x,w,v){for(var S=null,N=null,I=x,T=x=0,A=null;I!==null&&T<w.length;T++){I.index>T?(A=I,I=null):A=I.sibling;var D=d(y,I,w[T],v);if(D===null){I===null&&(I=A);break}t&&I&&D.alternate===null&&e(y,I),x=i(D,x,T),N===null?S=D:N.sibling=D,N=D,I=A}if(T===w.length)return n(y,I),bt&&Yo(y,T),S;if(I===null){for(;T<w.length;T++)I=h(y,w[T],v),I!==null&&(x=i(I,x,T),N===null?S=I:N.sibling=I,N=I);return bt&&Yo(y,T),S}for(I=s(I);T<w.length;T++)A=f(I,y,T,w[T],v),A!==null&&(t&&A.alternate!==null&&I.delete(A.key===null?T:A.key),x=i(A,x,T),N===null?S=A:N.sibling=A,N=A);return t&&I.forEach(function(O){return e(y,O)}),bt&&Yo(y,T),S}function m(y,x,w,v){if(w==null)throw Error(ae(151));for(var S=null,N=null,I=x,T=x=0,A=null,D=w.next();I!==null&&!D.done;T++,D=w.next()){I.index>T?(A=I,I=null):A=I.sibling;var O=d(y,I,D.value,v);if(O===null){I===null&&(I=A);break}t&&I&&O.alternate===null&&e(y,I),x=i(O,x,T),N===null?S=O:N.sibling=O,N=O,I=A}if(D.done)return n(y,I),bt&&Yo(y,T),S;if(I===null){for(;!D.done;T++,D=w.next())D=h(y,D.value,v),D!==null&&(x=i(D,x,T),N===null?S=D:N.sibling=D,N=D);return bt&&Yo(y,T),S}for(I=s(I);!D.done;T++,D=w.next())D=f(I,y,T,D.value,v),D!==null&&(t&&D.alternate!==null&&I.delete(D.key===null?T:D.key),x=i(D,x,T),N===null?S=D:N.sibling=D,N=D);return t&&I.forEach(function(U){return e(y,U)}),bt&&Yo(y,T),S}function g(y,x,w,v){if(typeof w=="object"&&w!==null&&w.type===Ou&&w.key===null&&(w=w.props.children),typeof w=="object"&&w!==null){switch(w.$$typeof){case _m:e:{for(var S=w.key;x!==null;){if(x.key===S){if(S=w.type,S===Ou){if(x.tag===7){n(y,x.sibling),v=r(x,w.props.children),v.return=y,y=v;break e}}else if(x.elementType===S||typeof S=="object"&&S!==null&&S.$$typeof===Ua&&m$(S)===x.type){n(y,x.sibling),v=r(x,w.props),cd(v,w),v.return=y,y=v;break e}n(y,x);break}else e(y,x);x=x.sibling}w.type===Ou?(v=ml(w.props.children,y.mode,v,w.key),v.return=y,y=v):(v=yg(w.type,w.key,w.props,null,y.mode,v),cd(v,w),v.return=y,y=v)}return a(y);case wd:e:{for(S=w.key;x!==null;){if(x.key===S)if(x.tag===4&&x.stateNode.containerInfo===w.containerInfo&&x.stateNode.implementation===w.implementation){n(y,x.sibling),v=r(x,w.children||[]),v.return=y,y=v;break e}else{n(y,x);break}else e(y,x);x=x.sibling}v=l1(w,y.mode,v),v.return=y,y=v}return a(y);case Ua:return S=w._init,w=S(w._payload),g(y,x,w,v)}if(Sd(w))return p(y,x,w,v);if(ad(w)){if(S=ad(w),typeof S!="function")throw Error(ae(150));return w=S.call(w),m(y,x,w,v)}if(typeof w.then=="function")return g(y,x,Mm(w),v);if(w.$$typeof===ma)return g(y,x,Vm(y,w),v);Bm(y,w)}return typeof w=="string"&&w!==""||typeof w=="number"||typeof w=="bigint"?(w=""+w,x!==null&&x.tag===6?(n(y,x.sibling),v=r(x,w),v.return=y,y=v):(n(y,x),v=o1(w,y.mode,v),v.return=y,y=v),a(y)):n(y,x)}return function(y,x,w,v){try{rf=0;var S=g(y,x,w,v);return Ku=null,S}catch(I){if(I===zd)throw I;var N=Or(29,I,null,y.mode);return N.lanes=v,N.return=y,N}finally{}}}var $l=jE(!0),qE=jE(!1),uc=Qi(null),Bg=Qi(0);function g$(t,e){t=Ta,Qt(Bg,t),Qt(uc,e),Ta=t|e.baseLanes}function cw(){Qt(Bg,Ta),Qt(uc,uc.current)}function d2(){Ta=Bg.current,Xn(uc),Xn(Bg)}var Hr=Qi(null),Bi=null;function Ha(t){var e=t.alternate;Qt(Ln,Ln.current&1),Qt(Hr,t),Bi===null&&(e===null||uc.current!==null||e.memoizedState!==null)&&(Bi=t)}function XE(t){if(t.tag===22){if(Qt(Ln,Ln.current),Qt(Hr,t),Bi===null){var e=t.alternate;e!==null&&e.memoizedState!==null&&(Bi=t)}}else ja()}function ja(){Qt(Ln,Ln.current),Qt(Hr,Hr.current)}function xa(t){Xn(Hr),Bi===t&&(Bi=null),Xn(Ln)}var Ln=Qi(0);function Vg(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var a4=typeof AbortController<"u"?AbortController:function(){var t=[],e=this.signal={aborted:!1,addEventListener:function(n,s){t.push(s)}};this.abort=function(){e.aborted=!0,t.forEach(function(n){return n()})}},o4=Bn.unstable_scheduleCallback,l4=Bn.unstable_NormalPriority,Fn={$$typeof:ma,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function f2(){return{controller:new a4,data:new Map,refCount:0}}function Bf(t){t.refCount--,t.refCount===0&&o4(l4,function(){t.controller.abort()})}var Pd=null,hw=0,cc=0,Yu=null;function u4(t,e){if(Pd===null){var n=Pd=[];hw=0,cc=z2(),Yu={status:"pending",value:void 0,then:function(s){n.push(s)}}}return hw++,e.then(y$,y$),e}function y$(){if(--hw===0&&Pd!==null){Yu!==null&&(Yu.status="fulfilled");var t=Pd;Pd=null,cc=0,Yu=null;for(var e=0;e<t.length;e++)(0,t[e])()}}function c4(t,e){var n=[],s={status:"pending",value:null,reason:null,then:function(r){n.push(r)}};return t.then(function(){s.status="fulfilled",s.value=e;for(var r=0;r<n.length;r++)(0,n[r])(e)},function(r){for(s.status="rejected",s.reason=r,r=0;r<n.length;r++)(0,n[r])(void 0)}),s}var x$=Ze.S;Ze.S=function(t,e){typeof e=="object"&&e!==null&&typeof e.then=="function"&&u4(t,e),x$!==null&&x$(t,e)};var pl=Qi(null);function p2(){var t=pl.current;return t!==null?t:Vt.pooledCache}function fg(t,e){e===null?Qt(pl,pl.current):Qt(pl,e.pool)}function KE(){var t=p2();return t===null?null:{parent:Fn._currentValue,pool:t}}var po=0,it=null,Rt=null,Sn=null,Ug=!1,Qu=!1,Nl=!1,Wg=0,af=0,Zu=null,h4=0;function yn(){throw Error(ae(321))}function m2(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!cr(t[n],e[n]))return!1;return!0}function g2(t,e,n,s,r,i){return po=i,it=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Ze.H=t===null||t.memoizedState===null?ql:Ro,Nl=!1,i=n(s,r),Nl=!1,Qu&&(i=QE(e,n,s,r)),YE(t),i}function YE(t){Ze.H=Hi;var e=Rt!==null&&Rt.next!==null;if(po=0,Sn=Rt=it=null,Ug=!1,af=0,Zu=null,e)throw Error(ae(300));t===null||qn||(t=t.dependencies,t!==null&&jg(t)&&(qn=!0))}function QE(t,e,n,s){it=t;var r=0;do{if(Qu&&(Zu=null),af=0,Qu=!1,25<=r)throw Error(ae(301));if(r+=1,Sn=Rt=null,t.updateQueue!=null){var i=t.updateQueue;i.lastEffect=null,i.events=null,i.stores=null,i.memoCache!=null&&(i.memoCache.index=0)}Ze.H=Xl,i=e(n,s)}while(Qu);return i}function d4(){var t=Ze.H,e=t.useState()[0];return e=typeof e.then=="function"?Vf(e):e,t=t.useState()[0],(Rt!==null?Rt.memoizedState:null)!==t&&(it.flags|=1024),e}function y2(){var t=Wg!==0;return Wg=0,t}function x2(t,e,n){e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~n}function b2(t){if(Ug){for(t=t.memoizedState;t!==null;){var e=t.queue;e!==null&&(e.pending=null),t=t.next}Ug=!1}po=0,Sn=Rt=it=null,Qu=!1,af=Wg=0,Zu=null}function Ps(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Sn===null?it.memoizedState=Sn=t:Sn=Sn.next=t,Sn}function Nn(){if(Rt===null){var t=it.alternate;t=t!==null?t.memoizedState:null}else t=Rt.next;var e=Sn===null?it.memoizedState:Sn.next;if(e!==null)Sn=e,Rt=t;else{if(t===null)throw it.alternate===null?Error(ae(467)):Error(ae(310));Rt=t,t={memoizedState:Rt.memoizedState,baseState:Rt.baseState,baseQueue:Rt.baseQueue,queue:Rt.queue,next:null},Sn===null?it.memoizedState=Sn=t:Sn=Sn.next=t}return Sn}var Qy;Qy=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function Vf(t){var e=af;return af+=1,Zu===null&&(Zu=[]),t=HE(Zu,t,e),e=it,(Sn===null?e.memoizedState:Sn.next)===null&&(e=e.alternate,Ze.H=e===null||e.memoizedState===null?ql:Ro),t}function Zy(t){if(t!==null&&typeof t=="object"){if(typeof t.then=="function")return Vf(t);if(t.$$typeof===ma)return ms(t)}throw Error(ae(438,String(t)))}function w2(t){var e=null,n=it.updateQueue;if(n!==null&&(e=n.memoCache),e==null){var s=it.alternate;s!==null&&(s=s.updateQueue,s!==null&&(s=s.memoCache,s!=null&&(e={data:s.data.map(function(r){return r.slice()}),index:0})))}if(e==null&&(e={data:[],index:0}),n===null&&(n=Qy(),it.updateQueue=n),n.memoCache=e,n=e.data[e.index],n===void 0)for(n=e.data[e.index]=Array(t),s=0;s<t;s++)n[s]=XM;return e.index++,n}function Na(t,e){return typeof e=="function"?e(t):e}function pg(t){var e=Nn();return v2(e,Rt,t)}function v2(t,e,n){var s=t.queue;if(s===null)throw Error(ae(311));s.lastRenderedReducer=n;var r=t.baseQueue,i=s.pending;if(i!==null){if(r!==null){var a=r.next;r.next=i.next,i.next=a}e.baseQueue=r=i,s.pending=null}if(i=t.baseState,r===null)t.memoizedState=i;else{e=r.next;var o=a=null,l=null,u=e,c=!1;do{var h=u.lane&-536870913;if(h!==u.lane?(pt&h)===h:(po&h)===h){var d=u.revertLane;if(d===0)l!==null&&(l=l.next={lane:0,revertLane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),h===cc&&(c=!0);else if((po&d)===d){u=u.next,d===cc&&(c=!0);continue}else h={lane:0,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=h,a=i):l=l.next=h,it.lanes|=d,go|=d;h=u.action,Nl&&n(i,h),i=u.hasEagerState?u.eagerState:n(i,h)}else d={lane:h,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},l===null?(o=l=d,a=i):l=l.next=d,it.lanes|=h,go|=h;u=u.next}while(u!==null&&u!==e);if(l===null?a=i:l.next=o,!cr(i,t.memoizedState)&&(qn=!0,c&&(n=Yu,n!==null)))throw n;t.memoizedState=i,t.baseState=a,t.baseQueue=l,s.lastRenderedState=i}return r===null&&(s.lanes=0),[t.memoizedState,s.dispatch]}function Y0(t){var e=Nn(),n=e.queue;if(n===null)throw Error(ae(311));n.lastRenderedReducer=t;var s=n.dispatch,r=n.pending,i=e.memoizedState;if(r!==null){n.pending=null;var a=r=r.next;do i=t(i,a.action),a=a.next;while(a!==r);cr(i,e.memoizedState)||(qn=!0),e.memoizedState=i,e.baseQueue===null&&(e.baseState=i),n.lastRenderedState=i}return[i,s]}function ZE(t,e,n){var s=it,r=Nn(),i=bt;if(i){if(n===void 0)throw Error(ae(407));n=n()}else n=e();var a=!cr((Rt||r).memoizedState,n);if(a&&(r.memoizedState=n,qn=!0),r=r.queue,S2(tR.bind(null,s,r,t),[t]),r.getSnapshot!==e||a||Sn!==null&&Sn.memoizedState.tag&1){if(s.flags|=2048,hc(9,eR.bind(null,s,r,n,e),{destroy:void 0},null),Vt===null)throw Error(ae(349));i||po&60||JE(s,e,n)}return n}function JE(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=it.updateQueue,e===null?(e=Qy(),it.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function eR(t,e,n,s){e.value=n,e.getSnapshot=s,nR(e)&&sR(t)}function tR(t,e,n){return n(function(){nR(e)&&sR(t)})}function nR(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!cr(t,n)}catch{return!0}}function sR(t){var e=fo(t,2);e!==null&&Ns(e,t,2)}function dw(t){var e=Ps();if(typeof t=="function"){var n=t;if(t=n(),Nl){Ka(!0);try{n()}finally{Ka(!1)}}}return e.memoizedState=e.baseState=t,e.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Na,lastRenderedState:t},e}function rR(t,e,n,s){return t.baseState=n,v2(t,Rt,typeof s=="function"?s:Na)}function f4(t,e,n,s,r){if(ex(t))throw Error(ae(485));if(t=e.action,t!==null){var i={payload:r,action:t,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(a){i.listeners.push(a)}};Ze.T!==null?n(!0):i.isTransition=!1,s(i),n=e.pending,n===null?(i.next=e.pending=i,iR(e,i)):(i.next=n.next,e.pending=n.next=i)}}function iR(t,e){var n=e.action,s=e.payload,r=t.state;if(e.isTransition){var i=Ze.T,a={};Ze.T=a;try{var o=n(r,s),l=Ze.S;l!==null&&l(a,o),b$(t,e,o)}catch(u){fw(t,e,u)}finally{Ze.T=i}}else try{i=n(r,s),b$(t,e,i)}catch(u){fw(t,e,u)}}function b$(t,e,n){n!==null&&typeof n=="object"&&typeof n.then=="function"?n.then(function(s){w$(t,e,s)},function(s){return fw(t,e,s)}):w$(t,e,n)}function w$(t,e,n){e.status="fulfilled",e.value=n,aR(e),t.state=n,e=t.pending,e!==null&&(n=e.next,n===e?t.pending=null:(n=n.next,e.next=n,iR(t,n)))}function fw(t,e,n){var s=t.pending;if(t.pending=null,s!==null){s=s.next;do e.status="rejected",e.reason=n,aR(e),e=e.next;while(e!==s)}t.action=null}function aR(t){t=t.listeners;for(var e=0;e<t.length;e++)(0,t[e])()}function oR(t,e){return e}function lR(t,e){if(bt){var n=Vt.formState;if(n!==null){e:{var s=it;if(bt){if(ss){t:{for(var r=ss,i=Oi;r.nodeType!==8;){if(!i){r=null;break t}if(r=oi(r.nextSibling),r===null){r=null;break t}}i=r.data,r=i==="F!"||i==="F"?r:null}if(r){ss=oi(r.nextSibling),s=r.data==="F!";break e}}kl(s)}s=!1}s&&(e=n[0])}}return n=Ps(),n.memoizedState=n.baseState=e,s={pending:null,lanes:0,dispatch:null,lastRenderedReducer:oR,lastRenderedState:e},n.queue=s,n=$R.bind(null,it,s),s.dispatch=n,s=dw(!1),i=N2.bind(null,it,!1,s.queue),s=Ps(),r={state:e,dispatch:null,action:t,pending:null},s.queue=r,n=f4.bind(null,it,r,i,n),r.dispatch=n,s.memoizedState=t,[e,n,!1]}function uR(t){var e=Nn();return cR(e,Rt,t)}function cR(t,e,n){e=v2(t,e,oR)[0],t=pg(Na)[0],e=typeof e=="object"&&e!==null&&typeof e.then=="function"?Vf(e):e;var s=Nn(),r=s.queue,i=r.dispatch;return n!==s.memoizedState&&(it.flags|=2048,hc(9,p4.bind(null,r,n),{destroy:void 0},null)),[e,i,t]}function p4(t,e){t.action=e}function hR(t){var e=Nn(),n=Rt;if(n!==null)return cR(e,n,t);Nn(),e=e.memoizedState,n=Nn();var s=n.queue.dispatch;return n.memoizedState=t,[e,s,!1]}function hc(t,e,n,s){return t={tag:t,create:e,inst:n,deps:s,next:null},e=it.updateQueue,e===null&&(e=Qy(),it.updateQueue=e),n=e.lastEffect,n===null?e.lastEffect=t.next=t:(s=n.next,n.next=t,t.next=s,e.lastEffect=t),t}function dR(){return Nn().memoizedState}function mg(t,e,n,s){var r=Ps();it.flags|=t,r.memoizedState=hc(1|e,n,{destroy:void 0},s===void 0?null:s)}function Jy(t,e,n,s){var r=Nn();s=s===void 0?null:s;var i=r.memoizedState.inst;Rt!==null&&s!==null&&m2(s,Rt.memoizedState.deps)?r.memoizedState=hc(e,n,i,s):(it.flags|=t,r.memoizedState=hc(1|e,n,i,s))}function v$(t,e){mg(8390656,8,t,e)}function S2(t,e){Jy(2048,8,t,e)}function fR(t,e){return Jy(4,2,t,e)}function pR(t,e){return Jy(4,4,t,e)}function mR(t,e){if(typeof e=="function"){t=t();var n=e(t);return function(){typeof n=="function"?n():e(null)}}if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function gR(t,e,n){n=n!=null?n.concat([t]):null,Jy(4,4,mR.bind(null,e,t),n)}function C2(){}function yR(t,e){var n=Nn();e=e===void 0?null:e;var s=n.memoizedState;return e!==null&&m2(e,s[1])?s[0]:(n.memoizedState=[t,e],t)}function xR(t,e){var n=Nn();e=e===void 0?null:e;var s=n.memoizedState;if(e!==null&&m2(e,s[1]))return s[0];if(s=t(),Nl){Ka(!0);try{t()}finally{Ka(!1)}}return n.memoizedState=[s,e],s}function k2(t,e,n){return n===void 0||po&1073741824?t.memoizedState=e:(t.memoizedState=n,t=aA(),it.lanes|=t,go|=t,n)}function bR(t,e,n,s){return cr(n,e)?n:uc.current!==null?(t=k2(t,n,s),cr(t,e)||(qn=!0),t):po&42?(t=aA(),it.lanes|=t,go|=t,e):(qn=!0,t.memoizedState=n)}function wR(t,e,n,s,r){var i=qt.p;qt.p=i!==0&&8>i?i:8;var a=Ze.T,o={};Ze.T=o,N2(t,!1,e,n);try{var l=r(),u=Ze.S;if(u!==null&&u(o,l),l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=c4(l,s);Md(t,e,c,lr(t))}else Md(t,e,s,lr(t))}catch(h){Md(t,e,{then:function(){},status:"rejected",reason:h},lr())}finally{qt.p=i,Ze.T=a}}function m4(){}function pw(t,e,n,s){if(t.tag!==5)throw Error(ae(476));var r=vR(t).queue;wR(t,r,e,dl,n===null?m4:function(){return SR(t),n(s)})}function vR(t){var e=t.memoizedState;if(e!==null)return e;e={memoizedState:dl,baseState:dl,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Na,lastRenderedState:dl},next:null};var n={};return e.next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Na,lastRenderedState:n},next:null},t.memoizedState=e,t=t.alternate,t!==null&&(t.memoizedState=e),e}function SR(t){var e=vR(t).next.queue;Md(t,e,{},lr())}function $2(){return ms(cf)}function CR(){return Nn().memoizedState}function kR(){return Nn().memoizedState}function g4(t){for(var e=t.return;e!==null;){switch(e.tag){case 24:case 3:var n=lr();t=no(n);var s=so(e,t,n);s!==null&&(Ns(s,e,n),Vd(s,e,n)),e={cache:f2()},t.payload=e;return}e=e.return}}function y4(t,e,n){var s=lr();n={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},ex(t)?NR(e,n):(n=u2(t,e,n,s),n!==null&&(Ns(n,t,s),IR(n,e,s)))}function $R(t,e,n){var s=lr();Md(t,e,n,s)}function Md(t,e,n,s){var r={lane:s,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(ex(t))NR(e,r);else{var i=t.alternate;if(t.lanes===0&&(i===null||i.lanes===0)&&(i=e.lastRenderedReducer,i!==null))try{var a=e.lastRenderedState,o=i(a,n);if(r.hasEagerState=!0,r.eagerState=o,cr(o,a))return Yy(t,e,r,0),Vt===null&&Ky(),!1}catch{}finally{}if(n=u2(t,e,r,s),n!==null)return Ns(n,t,s),IR(n,e,s),!0}return!1}function N2(t,e,n,s){if(s={lane:2,revertLane:z2(),action:s,hasEagerState:!1,eagerState:null,next:null},ex(t)){if(e)throw Error(ae(479))}else e=u2(t,n,s,2),e!==null&&Ns(e,t,2)}function ex(t){var e=t.alternate;return t===it||e!==null&&e===it}function NR(t,e){Qu=Ug=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function IR(t,e,n){if(n&4194176){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,mE(t,n)}}var Hi={readContext:ms,use:Zy,useCallback:yn,useContext:yn,useEffect:yn,useImperativeHandle:yn,useLayoutEffect:yn,useInsertionEffect:yn,useMemo:yn,useReducer:yn,useRef:yn,useState:yn,useDebugValue:yn,useDeferredValue:yn,useTransition:yn,useSyncExternalStore:yn,useId:yn};Hi.useCacheRefresh=yn;Hi.useMemoCache=yn;Hi.useHostTransitionStatus=yn;Hi.useFormState=yn;Hi.useActionState=yn;Hi.useOptimistic=yn;var ql={readContext:ms,use:Zy,useCallback:function(t,e){return Ps().memoizedState=[t,e===void 0?null:e],t},useContext:ms,useEffect:v$,useImperativeHandle:function(t,e,n){n=n!=null?n.concat([t]):null,mg(4194308,4,mR.bind(null,e,t),n)},useLayoutEffect:function(t,e){return mg(4194308,4,t,e)},useInsertionEffect:function(t,e){mg(4,2,t,e)},useMemo:function(t,e){var n=Ps();e=e===void 0?null:e;var s=t();if(Nl){Ka(!0);try{t()}finally{Ka(!1)}}return n.memoizedState=[s,e],s},useReducer:function(t,e,n){var s=Ps();if(n!==void 0){var r=n(e);if(Nl){Ka(!0);try{n(e)}finally{Ka(!1)}}}else r=e;return s.memoizedState=s.baseState=r,t={pending:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:r},s.queue=t,t=t.dispatch=y4.bind(null,it,t),[s.memoizedState,t]},useRef:function(t){var e=Ps();return t={current:t},e.memoizedState=t},useState:function(t){t=dw(t);var e=t.queue,n=$R.bind(null,it,e);return e.dispatch=n,[t.memoizedState,n]},useDebugValue:C2,useDeferredValue:function(t,e){var n=Ps();return k2(n,t,e)},useTransition:function(){var t=dw(!1);return t=wR.bind(null,it,t.queue,!0,!1),Ps().memoizedState=t,[!1,t]},useSyncExternalStore:function(t,e,n){var s=it,r=Ps();if(bt){if(n===void 0)throw Error(ae(407));n=n()}else{if(n=e(),Vt===null)throw Error(ae(349));pt&60||JE(s,e,n)}r.memoizedState=n;var i={value:n,getSnapshot:e};return r.queue=i,v$(tR.bind(null,s,i,t),[t]),s.flags|=2048,hc(9,eR.bind(null,s,i,n,e),{destroy:void 0},null),n},useId:function(){var t=Ps(),e=Vt.identifierPrefix;if(bt){var n=ya,s=ga;n=(s&~(1<<32-or(s)-1)).toString(32)+n,e=":"+e+"R"+n,n=Wg++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=h4++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},useCacheRefresh:function(){return Ps().memoizedState=g4.bind(null,it)}};ql.useMemoCache=w2;ql.useHostTransitionStatus=$2;ql.useFormState=lR;ql.useActionState=lR;ql.useOptimistic=function(t){var e=Ps();e.memoizedState=e.baseState=t;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return e.queue=n,e=N2.bind(null,it,!0,n),n.dispatch=e,[t,e]};var Ro={readContext:ms,use:Zy,useCallback:yR,useContext:ms,useEffect:S2,useImperativeHandle:gR,useInsertionEffect:fR,useLayoutEffect:pR,useMemo:xR,useReducer:pg,useRef:dR,useState:function(){return pg(Na)},useDebugValue:C2,useDeferredValue:function(t,e){var n=Nn();return bR(n,Rt.memoizedState,t,e)},useTransition:function(){var t=pg(Na)[0],e=Nn().memoizedState;return[typeof t=="boolean"?t:Vf(t),e]},useSyncExternalStore:ZE,useId:CR};Ro.useCacheRefresh=kR;Ro.useMemoCache=w2;Ro.useHostTransitionStatus=$2;Ro.useFormState=uR;Ro.useActionState=uR;Ro.useOptimistic=function(t,e){var n=Nn();return rR(n,Rt,t,e)};var Xl={readContext:ms,use:Zy,useCallback:yR,useContext:ms,useEffect:S2,useImperativeHandle:gR,useInsertionEffect:fR,useLayoutEffect:pR,useMemo:xR,useReducer:Y0,useRef:dR,useState:function(){return Y0(Na)},useDebugValue:C2,useDeferredValue:function(t,e){var n=Nn();return Rt===null?k2(n,t,e):bR(n,Rt.memoizedState,t,e)},useTransition:function(){var t=Y0(Na)[0],e=Nn().memoizedState;return[typeof t=="boolean"?t:Vf(t),e]},useSyncExternalStore:ZE,useId:CR};Xl.useCacheRefresh=kR;Xl.useMemoCache=w2;Xl.useHostTransitionStatus=$2;Xl.useFormState=hR;Xl.useActionState=hR;Xl.useOptimistic=function(t,e){var n=Nn();return Rt!==null?rR(n,Rt,t,e):(n.baseState=t,[t,n.queue.dispatch])};function Q0(t,e,n,s){e=t.memoizedState,n=n(s,e),n=n==null?e:Kt({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var mw={isMounted:function(t){return(t=t._reactInternals)?Rc(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var s=lr(),r=no(s);r.payload=e,n!=null&&(r.callback=n),e=so(t,r,s),e!==null&&(Ns(e,t,s),Vd(e,t,s))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var s=lr(),r=no(s);r.tag=1,r.payload=e,n!=null&&(r.callback=n),e=so(t,r,s),e!==null&&(Ns(e,t,s),Vd(e,t,s))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=lr(),s=no(n);s.tag=2,e!=null&&(s.callback=e),e=so(t,s,n),e!==null&&(Ns(e,t,n),Vd(e,t,n))}};function S$(t,e,n,s,r,i,a){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,i,a):e.prototype&&e.prototype.isPureReactComponent?!nf(n,s)||!nf(r,i):!0}function C$(t,e,n,s){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,s),e.state!==t&&mw.enqueueReplaceState(e,e.state,null)}function Il(t,e){var n=e;if("ref"in e){n={};for(var s in e)s!=="ref"&&(n[s]=e[s])}if(t=t.defaultProps){n===e&&(n=Kt({},n));for(var r in t)n[r]===void 0&&(n[r]=t[r])}return n}var Gg=typeof reportError=="function"?reportError:function(t){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof t=="object"&&t!==null&&typeof t.message=="string"?String(t.message):String(t),error:t});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",t);return}console.error(t)};function TR(t){Gg(t)}function ER(t){console.error(t)}function RR(t){Gg(t)}function Hg(t,e){try{var n=t.onUncaughtError;n(e.value,{componentStack:e.stack})}catch(s){setTimeout(function(){throw s})}}function k$(t,e,n){try{var s=t.onCaughtError;s(n.value,{componentStack:n.stack,errorBoundary:e.tag===1?e.stateNode:null})}catch(r){setTimeout(function(){throw r})}}function gw(t,e,n){return n=no(n),n.tag=3,n.payload={element:null},n.callback=function(){Hg(t,e)},n}function AR(t){return t=no(t),t.tag=3,t}function DR(t,e,n,s){var r=n.type.getDerivedStateFromError;if(typeof r=="function"){var i=s.value;t.payload=function(){return r(i)},t.callback=function(){k$(e,n,s)}}var a=n.stateNode;a!==null&&typeof a.componentDidCatch=="function"&&(t.callback=function(){k$(e,n,s),typeof r!="function"&&(io===null?io=new Set([this]):io.add(this));var o=s.stack;this.componentDidCatch(s.value,{componentStack:o!==null?o:""})})}function x4(t,e,n,s,r){if(n.flags|=32768,s!==null&&typeof s=="object"&&typeof s.then=="function"){if(e=n.alternate,e!==null&&Uf(e,n,r,!0),n=Hr.current,n!==null){switch(n.tag){case 13:return Bi===null?Aw():n.alternate===null&&un===0&&(un=3),n.flags&=-257,n.flags|=65536,n.lanes=r,s===uw?n.flags|=16384:(e=n.updateQueue,e===null?n.updateQueue=new Set([s]):e.add(s),c1(t,s,r)),!1;case 22:return n.flags|=65536,s===uw?n.flags|=16384:(e=n.updateQueue,e===null?(e={transitions:null,markerInstances:null,retryQueue:new Set([s])},n.updateQueue=e):(n=e.retryQueue,n===null?e.retryQueue=new Set([s]):n.add(s)),c1(t,s,r)),!1}throw Error(ae(435,n.tag))}return c1(t,s,r),Aw(),!1}if(bt)return e=Hr.current,e!==null?(!(e.flags&65536)&&(e.flags|=256),e.flags|=65536,e.lanes=r,s!==lw&&(t=Error(ae(422),{cause:s}),sf(Dr(t,n)))):(s!==lw&&(e=Error(ae(423),{cause:s}),sf(Dr(e,n))),t=t.current.alternate,t.flags|=65536,r&=-r,t.lanes|=r,s=Dr(s,n),r=gw(t.stateNode,s,r),s1(t,r),un!==4&&(un=2)),!1;var i=Error(ae(520),{cause:s});if(i=Dr(i,n),Hd===null?Hd=[i]:Hd.push(i),un!==4&&(un=2),e===null)return!0;s=Dr(s,n),n=e;do{switch(n.tag){case 3:return n.flags|=65536,t=r&-r,n.lanes|=t,t=gw(n.stateNode,s,t),s1(n,t),!1;case 1:if(e=n.type,i=n.stateNode,(n.flags&128)===0&&(typeof e.getDerivedStateFromError=="function"||i!==null&&typeof i.componentDidCatch=="function"&&(io===null||!io.has(i))))return n.flags|=65536,r&=-r,n.lanes|=r,r=AR(r),DR(r,t,n,s),s1(n,r),!1}n=n.return}while(n!==null);return!1}var _R=Error(ae(461)),qn=!1;function ns(t,e,n,s){e.child=t===null?qE(e,null,n,s):$l(e,t.child,n,s)}function $$(t,e,n,s,r){n=n.render;var i=e.ref;if("ref"in s){var a={};for(var o in s)o!=="ref"&&(a[o]=s[o])}else a=s;return Tl(e),s=g2(t,e,n,a,i,r),o=y2(),t!==null&&!qn?(x2(t,e,r),Ia(t,e,r)):(bt&&o&&c2(e),e.flags|=1,ns(t,e,s,r),e.child)}function N$(t,e,n,s,r){if(t===null){var i=n.type;return typeof i=="function"&&!A2(i)&&i.defaultProps===void 0&&n.compare===null?(e.tag=15,e.type=i,OR(t,e,i,s,r)):(t=yg(n.type,null,s,e,e.mode,r),t.ref=e.ref,t.return=e,e.child=t)}if(i=t.child,!I2(t,r)){var a=i.memoizedProps;if(n=n.compare,n=n!==null?n:nf,n(a,s)&&t.ref===e.ref)return Ia(t,e,r)}return e.flags|=1,t=ro(i,s),t.ref=e.ref,t.return=e,e.child=t}function OR(t,e,n,s,r){if(t!==null){var i=t.memoizedProps;if(nf(i,s)&&t.ref===e.ref)if(qn=!1,e.pendingProps=s=i,I2(t,r))t.flags&131072&&(qn=!0);else return e.lanes=t.lanes,Ia(t,e,r)}return yw(t,e,n,s,r)}function FR(t,e,n){var s=e.pendingProps,r=s.children,i=(e.stateNode._pendingVisibility&2)!==0,a=t!==null?t.memoizedState:null;if(Bd(t,e),s.mode==="hidden"||i){if(e.flags&128){if(s=a!==null?a.baseLanes|n:n,t!==null){for(r=e.child=t.child,i=0;r!==null;)i=i|r.lanes|r.childLanes,r=r.sibling;e.childLanes=i&~s}else e.childLanes=0,e.child=null;return I$(t,e,s,n)}if(n&536870912)e.memoizedState={baseLanes:0,cachePool:null},t!==null&&fg(e,a!==null?a.cachePool:null),a!==null?g$(e,a):cw(),XE(e);else return e.lanes=e.childLanes=536870912,I$(t,e,a!==null?a.baseLanes|n:n,n)}else a!==null?(fg(e,a.cachePool),g$(e,a),ja(),e.memoizedState=null):(t!==null&&fg(e,null),cw(),ja());return ns(t,e,r,n),e.child}function I$(t,e,n,s){var r=p2();return r=r===null?null:{parent:Fn._currentValue,pool:r},e.memoizedState={baseLanes:n,cachePool:r},t!==null&&fg(e,null),cw(),XE(e),t!==null&&Uf(t,e,s,!0),null}function Bd(t,e){var n=e.ref;if(n===null)t!==null&&t.ref!==null&&(e.flags|=2097664);else{if(typeof n!="function"&&typeof n!="object")throw Error(ae(284));(t===null||t.ref!==n)&&(e.flags|=2097664)}}function yw(t,e,n,s,r){return Tl(e),n=g2(t,e,n,s,void 0,r),s=y2(),t!==null&&!qn?(x2(t,e,r),Ia(t,e,r)):(bt&&s&&c2(e),e.flags|=1,ns(t,e,n,r),e.child)}function T$(t,e,n,s,r,i){return Tl(e),e.updateQueue=null,n=QE(e,s,n,r),YE(t),s=y2(),t!==null&&!qn?(x2(t,e,i),Ia(t,e,i)):(bt&&s&&c2(e),e.flags|=1,ns(t,e,n,i),e.child)}function E$(t,e,n,s,r){if(Tl(e),e.stateNode===null){var i=Vu,a=n.contextType;typeof a=="object"&&a!==null&&(i=ms(a)),i=new n(s,i),e.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,i.updater=mw,e.stateNode=i,i._reactInternals=e,i=e.stateNode,i.props=s,i.state=e.memoizedState,i.refs={},T2(e),a=n.contextType,i.context=typeof a=="object"&&a!==null?ms(a):Vu,i.state=e.memoizedState,a=n.getDerivedStateFromProps,typeof a=="function"&&(Q0(e,n,a,s),i.state=e.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(a=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),a!==i.state&&mw.enqueueReplaceState(i,i.state,null),Wd(e,s,i,r),Ud(),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308),s=!0}else if(t===null){i=e.stateNode;var o=e.memoizedProps,l=Il(n,o);i.props=l;var u=i.context,c=n.contextType;a=Vu,typeof c=="object"&&c!==null&&(a=ms(c));var h=n.getDerivedStateFromProps;c=typeof h=="function"||typeof i.getSnapshotBeforeUpdate=="function",o=e.pendingProps!==o,c||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(o||u!==a)&&C$(e,i,s,a),Wa=!1;var d=e.memoizedState;i.state=d,Wd(e,s,i,r),Ud(),u=e.memoizedState,o||d!==u||Wa?(typeof h=="function"&&(Q0(e,n,h,s),u=e.memoizedState),(l=Wa||S$(e,n,l,s,d,u,a))?(c||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount()),typeof i.componentDidMount=="function"&&(e.flags|=4194308)):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=u),i.props=s,i.state=u,i.context=a,s=l):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{i=e.stateNode,Cw(t,e),a=e.memoizedProps,c=Il(n,a),i.props=c,h=e.pendingProps,d=i.context,u=n.contextType,l=Vu,typeof u=="object"&&u!==null&&(l=ms(u)),o=n.getDerivedStateFromProps,(u=typeof o=="function"||typeof i.getSnapshotBeforeUpdate=="function")||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==h||d!==l)&&C$(e,i,s,l),Wa=!1,d=e.memoizedState,i.state=d,Wd(e,s,i,r),Ud();var f=e.memoizedState;a!==h||d!==f||Wa||t!==null&&t.dependencies!==null&&jg(t.dependencies)?(typeof o=="function"&&(Q0(e,n,o,s),f=e.memoizedState),(c=Wa||S$(e,n,c,s,d,f,l)||t!==null&&t.dependencies!==null&&jg(t.dependencies))?(u||typeof i.UNSAFE_componentWillUpdate!="function"&&typeof i.componentWillUpdate!="function"||(typeof i.componentWillUpdate=="function"&&i.componentWillUpdate(s,f,l),typeof i.UNSAFE_componentWillUpdate=="function"&&i.UNSAFE_componentWillUpdate(s,f,l)),typeof i.componentDidUpdate=="function"&&(e.flags|=4),typeof i.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=f),i.props=s,i.state=f,i.context=l,s=c):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&d===t.memoizedState||(e.flags|=1024),s=!1)}return i=s,Bd(t,e),s=(e.flags&128)!==0,i||s?(i=e.stateNode,n=s&&typeof n.getDerivedStateFromError!="function"?null:i.render(),e.flags|=1,t!==null&&s?(e.child=$l(e,t.child,null,r),e.child=$l(e,null,n,r)):ns(t,e,n,r),e.memoizedState=i.state,t=e.child):t=Ia(t,e,r),t}function R$(t,e,n,s){return Mf(),e.flags|=256,ns(t,e,n,s),e.child}var Z0={dehydrated:null,treeContext:null,retryLane:0};function J0(t){return{baseLanes:t,cachePool:KE()}}function e1(t,e,n){return t=t!==null?t.childLanes&~n:0,e&&(t|=Fr),t}function zR(t,e,n){var s=e.pendingProps,r=!1,i=(e.flags&128)!==0,a;if((a=i)||(a=t!==null&&t.memoizedState===null?!1:(Ln.current&2)!==0),a&&(r=!0,e.flags&=-129),a=(e.flags&32)!==0,e.flags&=-33,t===null){if(bt){if(r?Ha(e):ja(),bt){var o=ss,l;if(l=o){e:{for(l=o,o=Oi;l.nodeType!==8;){if(!o){o=null;break e}if(l=oi(l.nextSibling),l===null){o=null;break e}}o=l}o!==null?(e.memoizedState={dehydrated:o,treeContext:fl!==null?{id:ga,overflow:ya}:null,retryLane:536870912},l=Or(18,null,null,0),l.stateNode=o,l.return=e,e.child=l,Cs=e,ss=null,l=!0):l=!1}l||kl(e)}if(o=e.memoizedState,o!==null&&(o=o.dehydrated,o!==null))return o.data==="$!"?e.lanes=16:e.lanes=536870912,null;xa(e)}return o=s.children,s=s.fallback,r?(ja(),r=e.mode,o=bw({mode:"hidden",children:o},r),s=ml(s,r,n,null),o.return=e,s.return=e,o.sibling=s,e.child=o,r=e.child,r.memoizedState=J0(n),r.childLanes=e1(t,a,n),e.memoizedState=Z0,s):(Ha(e),xw(e,o))}if(l=t.memoizedState,l!==null&&(o=l.dehydrated,o!==null)){if(i)e.flags&256?(Ha(e),e.flags&=-257,e=t1(t,e,n)):e.memoizedState!==null?(ja(),e.child=t.child,e.flags|=128,e=null):(ja(),r=s.fallback,o=e.mode,s=bw({mode:"visible",children:s.children},o),r=ml(r,o,n,null),r.flags|=2,s.return=e,r.return=e,s.sibling=r,e.child=s,$l(e,t.child,null,n),s=e.child,s.memoizedState=J0(n),s.childLanes=e1(t,a,n),e.memoizedState=Z0,e=r);else if(Ha(e),o.data==="$!"){if(a=o.nextSibling&&o.nextSibling.dataset,a)var u=a.dgst;a=u,s=Error(ae(419)),s.stack="",s.digest=a,sf({value:s,source:null,stack:null}),e=t1(t,e,n)}else if(qn||Uf(t,e,n,!1),a=(n&t.childLanes)!==0,qn||a){if(a=Vt,a!==null){if(s=n&-n,s&42)s=1;else switch(s){case 2:s=1;break;case 8:s=4;break;case 32:s=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:s=64;break;case 268435456:s=134217728;break;default:s=0}if(s=s&(a.suspendedLanes|n)?0:s,s!==0&&s!==l.retryLane)throw l.retryLane=s,fo(t,s),Ns(a,t,s),_R}o.data==="$?"||Aw(),e=t1(t,e,n)}else o.data==="$?"?(e.flags|=128,e.child=t.child,e=_4.bind(null,t),o._reactRetry=e,e=null):(t=l.treeContext,ss=oi(o.nextSibling),Cs=e,bt=!0,ri=null,Oi=!1,t!==null&&(Er[Rr++]=ga,Er[Rr++]=ya,Er[Rr++]=fl,ga=t.id,ya=t.overflow,fl=e),e=xw(e,s.children),e.flags|=4096);return e}return r?(ja(),r=s.fallback,o=e.mode,l=t.child,u=l.sibling,s=ro(l,{mode:"hidden",children:s.children}),s.subtreeFlags=l.subtreeFlags&31457280,u!==null?r=ro(u,r):(r=ml(r,o,n,null),r.flags|=2),r.return=e,s.return=e,s.sibling=r,e.child=s,s=r,r=e.child,o=t.child.memoizedState,o===null?o=J0(n):(l=o.cachePool,l!==null?(u=Fn._currentValue,l=l.parent!==u?{parent:u,pool:u}:l):l=KE(),o={baseLanes:o.baseLanes|n,cachePool:l}),r.memoizedState=o,r.childLanes=e1(t,a,n),e.memoizedState=Z0,s):(Ha(e),n=t.child,t=n.sibling,n=ro(n,{mode:"visible",children:s.children}),n.return=e,n.sibling=null,t!==null&&(a=e.deletions,a===null?(e.deletions=[t],e.flags|=16):a.push(t)),e.child=n,e.memoizedState=null,n)}function xw(t,e){return e=bw({mode:"visible",children:e},t.mode),e.return=t,t.child=e}function bw(t,e){return rA(t,e,0,null)}function t1(t,e,n){return $l(e,t.child,null,n),t=xw(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function A$(t,e,n){t.lanes|=e;var s=t.alternate;s!==null&&(s.lanes|=e),vw(t.return,e,n)}function n1(t,e,n,s,r){var i=t.memoizedState;i===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:r}:(i.isBackwards=e,i.rendering=null,i.renderingStartTime=0,i.last=s,i.tail=n,i.tailMode=r)}function LR(t,e,n){var s=e.pendingProps,r=s.revealOrder,i=s.tail;if(ns(t,e,s.children,n),s=Ln.current,s&2)s=s&1|2,e.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&A$(t,n,e);else if(t.tag===19)A$(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}switch(Qt(Ln,s),r){case"forwards":for(n=e.child,r=null;n!==null;)t=n.alternate,t!==null&&Vg(t)===null&&(r=n),n=n.sibling;n=r,n===null?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),n1(e,!1,r,n,i);break;case"backwards":for(n=null,r=e.child,e.child=null;r!==null;){if(t=r.alternate,t!==null&&Vg(t)===null){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}n1(e,!0,n,null,i);break;case"together":n1(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Ia(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),go|=e.lanes,!(n&e.childLanes))if(t!==null){if(Uf(t,e,n,!1),(n&e.childLanes)===0)return null}else return null;if(t!==null&&e.child!==t.child)throw Error(ae(153));if(e.child!==null){for(t=e.child,n=ro(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=ro(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function I2(t,e){return t.lanes&e?!0:(t=t.dependencies,!!(t!==null&&jg(t)))}function b4(t,e,n){switch(e.tag){case 3:Dg(e,e.stateNode.containerInfo),qa(e,Fn,t.memoizedState.cache),Mf();break;case 27:case 5:J1(e);break;case 4:Dg(e,e.stateNode.containerInfo);break;case 10:qa(e,e.type,e.memoizedProps.value);break;case 13:var s=e.memoizedState;if(s!==null)return s.dehydrated!==null?(Ha(e),e.flags|=128,null):n&e.child.childLanes?zR(t,e,n):(Ha(e),t=Ia(t,e,n),t!==null?t.sibling:null);Ha(e);break;case 19:var r=(t.flags&128)!==0;if(s=(n&e.childLanes)!==0,s||(Uf(t,e,n,!1),s=(n&e.childLanes)!==0),r){if(s)return LR(t,e,n);e.flags|=128}if(r=e.memoizedState,r!==null&&(r.rendering=null,r.tail=null,r.lastEffect=null),Qt(Ln,Ln.current),s)break;return null;case 22:case 23:return e.lanes=0,FR(t,e,n);case 24:qa(e,Fn,t.memoizedState.cache)}return Ia(t,e,n)}function PR(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps)qn=!0;else{if(!I2(t,n)&&!(e.flags&128))return qn=!1,b4(t,e,n);qn=!!(t.flags&131072)}else qn=!1,bt&&e.flags&1048576&&WE(e,Mg,e.index);switch(e.lanes=0,e.tag){case 16:e:{t=e.pendingProps;var s=e.elementType,r=s._init;if(s=r(s._payload),e.type=s,typeof s=="function")A2(s)?(t=Il(s,t),e.tag=1,e=E$(null,e,s,t,n)):(e.tag=0,e=yw(null,e,s,t,n));else{if(s!=null){if(r=s.$$typeof,r===Zv){e.tag=11,e=$$(null,e,s,t,n);break e}else if(r===Jv){e.tag=14,e=N$(null,e,s,t,n);break e}}throw e=Q1(s)||s,Error(ae(306,e,""))}}return e;case 0:return yw(t,e,e.type,e.pendingProps,n);case 1:return s=e.type,r=Il(s,e.pendingProps),E$(t,e,s,r,n);case 3:e:{if(Dg(e,e.stateNode.containerInfo),t===null)throw Error(ae(387));var i=e.pendingProps;r=e.memoizedState,s=r.element,Cw(t,e),Wd(e,i,null,n);var a=e.memoizedState;if(i=a.cache,qa(e,Fn,i),i!==r.cache&&Sw(e,[Fn],n,!0),Ud(),i=a.element,r.isDehydrated)if(r={element:i,isDehydrated:!1,cache:a.cache},e.updateQueue.baseState=r,e.memoizedState=r,e.flags&256){e=R$(t,e,i,n);break e}else if(i!==s){s=Dr(Error(ae(424)),e),sf(s),e=R$(t,e,i,n);break e}else for(ss=oi(e.stateNode.containerInfo.firstChild),Cs=e,bt=!0,ri=null,Oi=!0,n=qE(e,null,i,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Mf(),i===s){e=Ia(t,e,n);break e}ns(t,e,i,n)}e=e.child}return e;case 26:return Bd(t,e),t===null?(n=K$(e.type,null,e.pendingProps,null))?e.memoizedState=n:bt||(n=e.type,t=e.pendingProps,s=Jg(to.current).createElement(n),s[ps]=e,s[Gs]=t,rs(s,n,t),Gn(s),e.stateNode=s):e.memoizedState=K$(e.type,t.memoizedProps,e.pendingProps,t.memoizedState),null;case 27:return J1(e),t===null&&bt&&(s=e.stateNode=SA(e.type,e.pendingProps,to.current),Cs=e,Oi=!0,ss=oi(s.firstChild)),s=e.pendingProps.children,t!==null||bt?ns(t,e,s,n):e.child=$l(e,null,s,n),Bd(t,e),e.child;case 5:return t===null&&bt&&((r=s=ss)&&(s=K4(s,e.type,e.pendingProps,Oi),s!==null?(e.stateNode=s,Cs=e,ss=oi(s.firstChild),Oi=!1,r=!0):r=!1),r||kl(e)),J1(e),r=e.type,i=e.pendingProps,a=t!==null?t.memoizedProps:null,s=i.children,zw(r,i)?s=null:a!==null&&zw(r,a)&&(e.flags|=32),e.memoizedState!==null&&(r=g2(t,e,d4,null,null,n),cf._currentValue=r),Bd(t,e),ns(t,e,s,n),e.child;case 6:return t===null&&bt&&((t=n=ss)&&(n=Y4(n,e.pendingProps,Oi),n!==null?(e.stateNode=n,Cs=e,ss=null,t=!0):t=!1),t||kl(e)),null;case 13:return zR(t,e,n);case 4:return Dg(e,e.stateNode.containerInfo),s=e.pendingProps,t===null?e.child=$l(e,null,s,n):ns(t,e,s,n),e.child;case 11:return $$(t,e,e.type,e.pendingProps,n);case 7:return ns(t,e,e.pendingProps,n),e.child;case 8:return ns(t,e,e.pendingProps.children,n),e.child;case 12:return ns(t,e,e.pendingProps.children,n),e.child;case 10:return s=e.pendingProps,qa(e,e.type,s.value),ns(t,e,s.children,n),e.child;case 9:return r=e.type._context,s=e.pendingProps.children,Tl(e),r=ms(r),s=s(r),e.flags|=1,ns(t,e,s,n),e.child;case 14:return N$(t,e,e.type,e.pendingProps,n);case 15:return OR(t,e,e.type,e.pendingProps,n);case 19:return LR(t,e,n);case 22:return FR(t,e,n);case 24:return Tl(e),s=ms(Fn),t===null?(r=p2(),r===null&&(r=Vt,i=f2(),r.pooledCache=i,i.refCount++,i!==null&&(r.pooledCacheLanes|=n),r=i),e.memoizedState={parent:s,cache:r},T2(e),qa(e,Fn,r)):(t.lanes&n&&(Cw(t,e),Wd(e,null,null,n),Ud()),r=t.memoizedState,i=e.memoizedState,r.parent!==s?(r={parent:s,cache:s},e.memoizedState=r,e.lanes===0&&(e.memoizedState=e.updateQueue.baseState=r),qa(e,Fn,s)):(s=i.cache,qa(e,Fn,s),s!==r.cache&&Sw(e,[Fn],n,!0))),ns(t,e,e.pendingProps.children,n),e.child;case 29:throw e.pendingProps}throw Error(ae(156,e.tag))}var ww=Qi(null),Kl=null,ba=null;function qa(t,e,n){Qt(ww,e._currentValue),e._currentValue=n}function wa(t){t._currentValue=ww.current,Xn(ww)}function vw(t,e,n){for(;t!==null;){var s=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),t===n)break;t=t.return}}function Sw(t,e,n,s){var r=t.child;for(r!==null&&(r.return=t);r!==null;){var i=r.dependencies;if(i!==null){var a=r.child;i=i.firstContext;e:for(;i!==null;){var o=i;i=r;for(var l=0;l<e.length;l++)if(o.context===e[l]){i.lanes|=n,o=i.alternate,o!==null&&(o.lanes|=n),vw(i.return,n,t),s||(a=null);break e}i=o.next}}else if(r.tag===18){if(a=r.return,a===null)throw Error(ae(341));a.lanes|=n,i=a.alternate,i!==null&&(i.lanes|=n),vw(a,n,t),a=null}else a=r.child;if(a!==null)a.return=r;else for(a=r;a!==null;){if(a===t){a=null;break}if(r=a.sibling,r!==null){r.return=a.return,a=r;break}a=a.return}r=a}}function Uf(t,e,n,s){t=null;for(var r=e,i=!1;r!==null;){if(!i){if(r.flags&524288)i=!0;else if(r.flags&262144)break}if(r.tag===10){var a=r.alternate;if(a===null)throw Error(ae(387));if(a=a.memoizedProps,a!==null){var o=r.type;cr(r.pendingProps.value,a.value)||(t!==null?t.push(o):t=[o])}}else if(r===Ag.current){if(a=r.alternate,a===null)throw Error(ae(387));a.memoizedState.memoizedState!==r.memoizedState.memoizedState&&(t!==null?t.push(cf):t=[cf])}r=r.return}t!==null&&Sw(e,t,n,s),e.flags|=262144}function jg(t){for(t=t.firstContext;t!==null;){if(!cr(t.context._currentValue,t.memoizedValue))return!0;t=t.next}return!1}function Tl(t){Kl=t,ba=null,t=t.dependencies,t!==null&&(t.firstContext=null)}function ms(t){return MR(Kl,t)}function Vm(t,e){return Kl===null&&Tl(t),MR(t,e)}function MR(t,e){var n=e._currentValue;if(e={context:e,memoizedValue:n,next:null},ba===null){if(t===null)throw Error(ae(308));ba=e,t.dependencies={lanes:0,firstContext:e},t.flags|=524288}else ba=ba.next=e;return n}var Wa=!1;function T2(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Cw(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,callbacks:null})}function no(t){return{lane:t,tag:0,payload:null,callback:null,next:null}}function so(t,e,n){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,sn&2){var r=s.pending;return r===null?e.next=e:(e.next=r.next,r.next=e),s.pending=e,e=Lg(t),UE(t,null,n),e}return Yy(t,s,e,n),Lg(t)}function Vd(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194176)!==0)){var s=e.lanes;s&=t.pendingLanes,n|=s,e.lanes=n,mE(t,n)}}function s1(t,e){var n=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,n===s)){var r=null,i=null;if(n=n.firstBaseUpdate,n!==null){do{var a={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};i===null?r=i=a:i=i.next=a,n=n.next}while(n!==null);i===null?r=i=e:i=i.next=e}else r=i=e;n={baseState:s.baseState,firstBaseUpdate:r,lastBaseUpdate:i,shared:s.shared,callbacks:s.callbacks},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}var kw=!1;function Ud(){if(kw){var t=Yu;if(t!==null)throw t}}function Wd(t,e,n,s){kw=!1;var r=t.updateQueue;Wa=!1;var i=r.firstBaseUpdate,a=r.lastBaseUpdate,o=r.shared.pending;if(o!==null){r.shared.pending=null;var l=o,u=l.next;l.next=null,a===null?i=u:a.next=u,a=l;var c=t.alternate;c!==null&&(c=c.updateQueue,o=c.lastBaseUpdate,o!==a&&(o===null?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(i!==null){var h=r.baseState;a=0,c=u=l=null,o=i;do{var d=o.lane&-536870913,f=d!==o.lane;if(f?(pt&d)===d:(s&d)===d){d!==0&&d===cc&&(kw=!0),c!==null&&(c=c.next={lane:0,tag:o.tag,payload:o.payload,callback:null,next:null});e:{var p=t,m=o;d=e;var g=n;switch(m.tag){case 1:if(p=m.payload,typeof p=="function"){h=p.call(g,h,d);break e}h=p;break e;case 3:p.flags=p.flags&-65537|128;case 0:if(p=m.payload,d=typeof p=="function"?p.call(g,h,d):p,d==null)break e;h=Kt({},h,d);break e;case 2:Wa=!0}}d=o.callback,d!==null&&(t.flags|=64,f&&(t.flags|=8192),f=r.callbacks,f===null?r.callbacks=[d]:f.push(d))}else f={lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},c===null?(u=c=f,l=h):c=c.next=f,a|=d;if(o=o.next,o===null){if(o=r.shared.pending,o===null)break;f=o,o=f.next,f.next=null,r.lastBaseUpdate=f,r.shared.pending=null}}while(!0);c===null&&(l=h),r.baseState=l,r.firstBaseUpdate=u,r.lastBaseUpdate=c,i===null&&(r.shared.lanes=0),go|=a,t.lanes=a,t.memoizedState=h}}function BR(t,e){if(typeof t!="function")throw Error(ae(191,t));t.call(e)}function VR(t,e){var n=t.callbacks;if(n!==null)for(t.callbacks=null,t=0;t<n.length;t++)BR(n[t],e)}function Wf(t,e){try{var n=e.updateQueue,s=n!==null?n.lastEffect:null;if(s!==null){var r=s.next;n=r;do{if((n.tag&t)===t){s=void 0;var i=n.create,a=n.inst;s=i(),a.destroy=s}n=n.next}while(n!==r)}}catch(o){Ft(e,e.return,o)}}function mo(t,e,n){try{var s=e.updateQueue,r=s!==null?s.lastEffect:null;if(r!==null){var i=r.next;s=i;do{if((s.tag&t)===t){var a=s.inst,o=a.destroy;if(o!==void 0){a.destroy=void 0,r=e;var l=n;try{o()}catch(u){Ft(r,l,u)}}}s=s.next}while(s!==i)}}catch(u){Ft(e,e.return,u)}}function UR(t){var e=t.updateQueue;if(e!==null){var n=t.stateNode;try{VR(e,n)}catch(s){Ft(t,t.return,s)}}}function WR(t,e,n){n.props=Il(t.type,t.memoizedProps),n.state=t.memoizedState;try{n.componentWillUnmount()}catch(s){Ft(t,e,s)}}function al(t,e){try{var n=t.ref;if(n!==null){var s=t.stateNode;switch(t.tag){case 26:case 27:case 5:var r=s;break;default:r=s}typeof n=="function"?t.refCleanup=n(r):n.current=r}}catch(i){Ft(t,e,i)}}function sr(t,e){var n=t.ref,s=t.refCleanup;if(n!==null)if(typeof s=="function")try{s()}catch(r){Ft(t,e,r)}finally{t.refCleanup=null,t=t.alternate,t!=null&&(t.refCleanup=null)}else if(typeof n=="function")try{n(null)}catch(r){Ft(t,e,r)}else n.current=null}function GR(t){var e=t.type,n=t.memoizedProps,s=t.stateNode;try{e:switch(e){case"button":case"input":case"select":case"textarea":n.autoFocus&&s.focus();break e;case"img":n.src?s.src=n.src:n.srcSet&&(s.srcset=n.srcSet)}}catch(r){Ft(t,t.return,r)}}function D$(t,e,n){try{var s=t.stateNode;G4(s,t.type,n,e),s[Gs]=e}catch(r){Ft(t,t.return,r)}}function HR(t){return t.tag===5||t.tag===3||t.tag===26||t.tag===27||t.tag===4}function r1(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||HR(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==27&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function $w(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=sx));else if(s!==4&&s!==27&&(t=t.child,t!==null))for($w(t,e,n),t=t.sibling;t!==null;)$w(t,e,n),t=t.sibling}function qg(t,e,n){var s=t.tag;if(s===5||s===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(s!==4&&s!==27&&(t=t.child,t!==null))for(qg(t,e,n),t=t.sibling;t!==null;)qg(t,e,n),t=t.sibling}var ha=!1,ln=!1,i1=!1,_$=typeof WeakSet=="function"?WeakSet:Set,Wn=null,O$=!1;function w4(t,e){if(t=t.containerInfo,Ow=sy,t=FE(t),o2(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var s=n.getSelection&&n.getSelection();if(s&&s.rangeCount!==0){n=s.anchorNode;var r=s.anchorOffset,i=s.focusNode;s=s.focusOffset;try{n.nodeType,i.nodeType}catch{n=null;break e}var a=0,o=-1,l=-1,u=0,c=0,h=t,d=null;t:for(;;){for(var f;h!==n||r!==0&&h.nodeType!==3||(o=a+r),h!==i||s!==0&&h.nodeType!==3||(l=a+s),h.nodeType===3&&(a+=h.nodeValue.length),(f=h.firstChild)!==null;)d=h,h=f;for(;;){if(h===t)break t;if(d===n&&++u===r&&(o=a),d===i&&++c===s&&(l=a),(f=h.nextSibling)!==null)break;h=d,d=h.parentNode}h=f}n=o===-1||l===-1?null:{start:o,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(Fw={focusedElem:t,selectionRange:n},sy=!1,Wn=e;Wn!==null;)if(e=Wn,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,Wn=t;else for(;Wn!==null;){switch(e=Wn,i=e.alternate,t=e.flags,e.tag){case 0:break;case 11:case 15:break;case 1:if(t&1024&&i!==null){t=void 0,n=e,r=i.memoizedProps,i=i.memoizedState,s=n.stateNode;try{var p=Il(n.type,r,n.elementType===n.type);t=s.getSnapshotBeforeUpdate(p,i),s.__reactInternalSnapshotBeforeUpdate=t}catch(m){Ft(n,n.return,m)}}break;case 3:if(t&1024){if(t=e.stateNode.containerInfo,n=t.nodeType,n===9)Lw(t);else if(n===1)switch(t.nodeName){case"HEAD":case"HTML":case"BODY":Lw(t);break;default:t.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if(t&1024)throw Error(ae(163))}if(t=e.sibling,t!==null){t.return=e.return,Wn=t;break}Wn=e.return}return p=O$,O$=!1,p}function jR(t,e,n){var s=n.flags;switch(n.tag){case 0:case 11:case 15:aa(t,n),s&4&&Wf(5,n);break;case 1:if(aa(t,n),s&4)if(t=n.stateNode,e===null)try{t.componentDidMount()}catch(o){Ft(n,n.return,o)}else{var r=Il(n.type,e.memoizedProps);e=e.memoizedState;try{t.componentDidUpdate(r,e,t.__reactInternalSnapshotBeforeUpdate)}catch(o){Ft(n,n.return,o)}}s&64&&UR(n),s&512&&al(n,n.return);break;case 3:if(aa(t,n),s&64&&(s=n.updateQueue,s!==null)){if(t=null,n.child!==null)switch(n.child.tag){case 27:case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}try{VR(s,t)}catch(o){Ft(n,n.return,o)}}break;case 26:aa(t,n),s&512&&al(n,n.return);break;case 27:case 5:aa(t,n),e===null&&s&4&&GR(n),s&512&&al(n,n.return);break;case 12:aa(t,n);break;case 13:aa(t,n),s&4&&KR(t,n);break;case 22:if(r=n.memoizedState!==null||ha,!r){e=e!==null&&e.memoizedState!==null||ln;var i=ha,a=ln;ha=r,(ln=e)&&!a?Va(t,n,(n.subtreeFlags&8772)!==0):aa(t,n),ha=i,ln=a}s&512&&(n.memoizedProps.mode==="manual"?al(n,n.return):sr(n,n.return));break;default:aa(t,n)}}function qR(t){var e=t.alternate;e!==null&&(t.alternate=null,qR(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&t2(e)),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}var vn=null,er=!1;function ia(t,e,n){for(n=n.child;n!==null;)XR(t,e,n),n=n.sibling}function XR(t,e,n){if(ar&&typeof ar.onCommitFiberUnmount=="function")try{ar.onCommitFiberUnmount(Ff,n)}catch{}switch(n.tag){case 26:ln||sr(n,e),ia(t,e,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode,n.parentNode.removeChild(n));break;case 27:ln||sr(n,e);var s=vn,r=er;for(vn=n.stateNode,ia(t,e,n),n=n.stateNode,e=n.attributes;e.length;)n.removeAttributeNode(e[0]);t2(n),vn=s,er=r;break;case 5:ln||sr(n,e);case 6:r=vn;var i=er;if(vn=null,ia(t,e,n),vn=r,er=i,vn!==null)if(er)try{t=vn,s=n.stateNode,t.nodeType===8?t.parentNode.removeChild(s):t.removeChild(s)}catch(a){Ft(n,e,a)}else try{vn.removeChild(n.stateNode)}catch(a){Ft(n,e,a)}break;case 18:vn!==null&&(er?(e=vn,n=n.stateNode,e.nodeType===8?y1(e.parentNode,n):e.nodeType===1&&y1(e,n),ff(e)):y1(vn,n.stateNode));break;case 4:s=vn,r=er,vn=n.stateNode.containerInfo,er=!0,ia(t,e,n),vn=s,er=r;break;case 0:case 11:case 14:case 15:ln||mo(2,n,e),ln||mo(4,n,e),ia(t,e,n);break;case 1:ln||(sr(n,e),s=n.stateNode,typeof s.componentWillUnmount=="function"&&WR(n,e,s)),ia(t,e,n);break;case 21:ia(t,e,n);break;case 22:ln||sr(n,e),ln=(s=ln)||n.memoizedState!==null,ia(t,e,n),ln=s;break;default:ia(t,e,n)}}function KR(t,e){if(e.memoizedState===null&&(t=e.alternate,t!==null&&(t=t.memoizedState,t!==null&&(t=t.dehydrated,t!==null))))try{ff(t)}catch(n){Ft(e,e.return,n)}}function v4(t){switch(t.tag){case 13:case 19:var e=t.stateNode;return e===null&&(e=t.stateNode=new _$),e;case 22:return t=t.stateNode,e=t._retryCache,e===null&&(e=t._retryCache=new _$),e;default:throw Error(ae(435,t.tag))}}function a1(t,e){var n=v4(t);e.forEach(function(s){var r=O4.bind(null,t,s);n.has(s)||(n.add(s),s.then(r,r))})}function vr(t,e){var n=e.deletions;if(n!==null)for(var s=0;s<n.length;s++){var r=n[s],i=t,a=e,o=a;e:for(;o!==null;){switch(o.tag){case 27:case 5:vn=o.stateNode,er=!1;break e;case 3:vn=o.stateNode.containerInfo,er=!0;break e;case 4:vn=o.stateNode.containerInfo,er=!0;break e}o=o.return}if(vn===null)throw Error(ae(160));XR(i,a,r),vn=null,er=!1,i=r.alternate,i!==null&&(i.return=null),r.return=null}if(e.subtreeFlags&13878)for(e=e.child;e!==null;)YR(e,t),e=e.sibling}var si=null;function YR(t,e){var n=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:vr(e,t),Sr(t),s&4&&(mo(3,t,t.return),Wf(3,t),mo(5,t,t.return));break;case 1:vr(e,t),Sr(t),s&512&&(ln||n===null||sr(n,n.return)),s&64&&ha&&(t=t.updateQueue,t!==null&&(s=t.callbacks,s!==null&&(n=t.shared.hiddenCallbacks,t.shared.hiddenCallbacks=n===null?s:n.concat(s))));break;case 26:var r=si;if(vr(e,t),Sr(t),s&512&&(ln||n===null||sr(n,n.return)),s&4){var i=n!==null?n.memoizedState:null;if(s=t.memoizedState,n===null)if(s===null)if(t.stateNode===null){e:{s=t.type,n=t.memoizedProps,r=r.ownerDocument||r;t:switch(s){case"title":i=r.getElementsByTagName("title")[0],(!i||i[Jd]||i[ps]||i.namespaceURI==="http://www.w3.org/2000/svg"||i.hasAttribute("itemprop"))&&(i=r.createElement(s),r.head.insertBefore(i,r.querySelector("head > title"))),rs(i,s,n),i[ps]=t,Gn(i),s=i;break e;case"link":var a=Q$("link","href",r).get(s+(n.href||""));if(a){for(var o=0;o<a.length;o++)if(i=a[o],i.getAttribute("href")===(n.href==null?null:n.href)&&i.getAttribute("rel")===(n.rel==null?null:n.rel)&&i.getAttribute("title")===(n.title==null?null:n.title)&&i.getAttribute("crossorigin")===(n.crossOrigin==null?null:n.crossOrigin)){a.splice(o,1);break t}}i=r.createElement(s),rs(i,s,n),r.head.appendChild(i);break;case"meta":if(a=Q$("meta","content",r).get(s+(n.content||""))){for(o=0;o<a.length;o++)if(i=a[o],i.getAttribute("content")===(n.content==null?null:""+n.content)&&i.getAttribute("name")===(n.name==null?null:n.name)&&i.getAttribute("property")===(n.property==null?null:n.property)&&i.getAttribute("http-equiv")===(n.httpEquiv==null?null:n.httpEquiv)&&i.getAttribute("charset")===(n.charSet==null?null:n.charSet)){a.splice(o,1);break t}}i=r.createElement(s),rs(i,s,n),r.head.appendChild(i);break;default:throw Error(ae(468,s))}i[ps]=t,Gn(i),s=i}t.stateNode=s}else Z$(r,t.type,t.stateNode);else t.stateNode=Y$(r,s,t.memoizedProps);else i!==s?(i===null?n.stateNode!==null&&(n=n.stateNode,n.parentNode.removeChild(n)):i.count--,s===null?Z$(r,t.type,t.stateNode):Y$(r,s,t.memoizedProps)):s===null&&t.stateNode!==null&&D$(t,t.memoizedProps,n.memoizedProps)}break;case 27:if(s&4&&t.alternate===null){r=t.stateNode,i=t.memoizedProps;try{for(var l=r.firstChild;l;){var u=l.nextSibling,c=l.nodeName;l[Jd]||c==="HEAD"||c==="BODY"||c==="SCRIPT"||c==="STYLE"||c==="LINK"&&l.rel.toLowerCase()==="stylesheet"||r.removeChild(l),l=u}for(var h=t.type,d=r.attributes;d.length;)r.removeAttributeNode(d[0]);rs(r,h,i),r[ps]=t,r[Gs]=i}catch(p){Ft(t,t.return,p)}}case 5:if(vr(e,t),Sr(t),s&512&&(ln||n===null||sr(n,n.return)),t.flags&32){r=t.stateNode;try{lc(r,"")}catch(p){Ft(t,t.return,p)}}s&4&&t.stateNode!=null&&(r=t.memoizedProps,D$(t,r,n!==null?n.memoizedProps:r)),s&1024&&(i1=!0);break;case 6:if(vr(e,t),Sr(t),s&4){if(t.stateNode===null)throw Error(ae(162));s=t.memoizedProps,n=t.stateNode;try{n.nodeValue=s}catch(p){Ft(t,t.return,p)}}break;case 3:if(bg=null,r=si,si=ey(e.containerInfo),vr(e,t),si=r,Sr(t),s&4&&n!==null&&n.memoizedState.isDehydrated)try{ff(e.containerInfo)}catch(p){Ft(t,t.return,p)}i1&&(i1=!1,QR(t));break;case 4:s=si,si=ey(t.stateNode.containerInfo),vr(e,t),Sr(t),si=s;break;case 12:vr(e,t),Sr(t);break;case 13:vr(e,t),Sr(t),t.child.flags&8192&&t.memoizedState!==null!=(n!==null&&n.memoizedState!==null)&&(O2=Mi()),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,a1(t,s)));break;case 22:if(s&512&&(ln||n===null||sr(n,n.return)),l=t.memoizedState!==null,u=n!==null&&n.memoizedState!==null,c=ha,h=ln,ha=c||l,ln=h||u,vr(e,t),ln=h,ha=c,Sr(t),e=t.stateNode,e._current=t,e._visibility&=-3,e._visibility|=e._pendingVisibility&2,s&8192&&(e._visibility=l?e._visibility&-2:e._visibility|1,l&&(e=ha||ln,n===null||u||e||Iu(t)),t.memoizedProps===null||t.memoizedProps.mode!=="manual"))e:for(n=null,e=t;;){if(e.tag===5||e.tag===26||e.tag===27){if(n===null){u=n=e;try{if(r=u.stateNode,l)i=r.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none";else{a=u.stateNode,o=u.memoizedProps.style;var f=o!=null&&o.hasOwnProperty("display")?o.display:null;a.style.display=f==null||typeof f=="boolean"?"":(""+f).trim()}}catch(p){Ft(u,u.return,p)}}}else if(e.tag===6){if(n===null){u=e;try{u.stateNode.nodeValue=l?"":u.memoizedProps}catch(p){Ft(u,u.return,p)}}}else if((e.tag!==22&&e.tag!==23||e.memoizedState===null||e===t)&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;n===e&&(n=null),e=e.return}n===e&&(n=null),e.sibling.return=e.return,e=e.sibling}s&4&&(s=t.updateQueue,s!==null&&(n=s.retryQueue,n!==null&&(s.retryQueue=null,a1(t,n))));break;case 19:vr(e,t),Sr(t),s&4&&(s=t.updateQueue,s!==null&&(t.updateQueue=null,a1(t,s)));break;case 21:break;default:vr(e,t),Sr(t)}}function Sr(t){var e=t.flags;if(e&2){try{if(t.tag!==27){e:{for(var n=t.return;n!==null;){if(HR(n)){var s=n;break e}n=n.return}throw Error(ae(160))}switch(s.tag){case 27:var r=s.stateNode,i=r1(t);qg(t,i,r);break;case 5:var a=s.stateNode;s.flags&32&&(lc(a,""),s.flags&=-33);var o=r1(t);qg(t,o,a);break;case 3:case 4:var l=s.stateNode.containerInfo,u=r1(t);$w(t,u,l);break;default:throw Error(ae(161))}}}catch(c){Ft(t,t.return,c)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function QR(t){if(t.subtreeFlags&1024)for(t=t.child;t!==null;){var e=t;QR(e),e.tag===5&&e.flags&1024&&e.stateNode.reset(),t=t.sibling}}function aa(t,e){if(e.subtreeFlags&8772)for(e=e.child;e!==null;)jR(t,e.alternate,e),e=e.sibling}function Iu(t){for(t=t.child;t!==null;){var e=t;switch(e.tag){case 0:case 11:case 14:case 15:mo(4,e,e.return),Iu(e);break;case 1:sr(e,e.return);var n=e.stateNode;typeof n.componentWillUnmount=="function"&&WR(e,e.return,n),Iu(e);break;case 26:case 27:case 5:sr(e,e.return),Iu(e);break;case 22:sr(e,e.return),e.memoizedState===null&&Iu(e);break;default:Iu(e)}t=t.sibling}}function Va(t,e,n){for(n=n&&(e.subtreeFlags&8772)!==0,e=e.child;e!==null;){var s=e.alternate,r=t,i=e,a=i.flags;switch(i.tag){case 0:case 11:case 15:Va(r,i,n),Wf(4,i);break;case 1:if(Va(r,i,n),s=i,r=s.stateNode,typeof r.componentDidMount=="function")try{r.componentDidMount()}catch(u){Ft(s,s.return,u)}if(s=i,r=s.updateQueue,r!==null){var o=s.stateNode;try{var l=r.shared.hiddenCallbacks;if(l!==null)for(r.shared.hiddenCallbacks=null,r=0;r<l.length;r++)BR(l[r],o)}catch(u){Ft(s,s.return,u)}}n&&a&64&&UR(i),al(i,i.return);break;case 26:case 27:case 5:Va(r,i,n),n&&s===null&&a&4&&GR(i),al(i,i.return);break;case 12:Va(r,i,n);break;case 13:Va(r,i,n),n&&a&4&&KR(r,i);break;case 22:i.memoizedState===null&&Va(r,i,n),al(i,i.return);break;default:Va(r,i,n)}e=e.sibling}}function E2(t,e){var n=null;t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),t=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(t=e.memoizedState.cachePool.pool),t!==n&&(t!=null&&t.refCount++,n!=null&&Bf(n))}function R2(t,e){t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&Bf(t))}function Ba(t,e,n,s){if(e.subtreeFlags&10256)for(e=e.child;e!==null;)ZR(t,e,n,s),e=e.sibling}function ZR(t,e,n,s){var r=e.flags;switch(e.tag){case 0:case 11:case 15:Ba(t,e,n,s),r&2048&&Wf(9,e);break;case 3:Ba(t,e,n,s),r&2048&&(t=null,e.alternate!==null&&(t=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==t&&(e.refCount++,t!=null&&Bf(t)));break;case 12:if(r&2048){Ba(t,e,n,s),t=e.stateNode;try{var i=e.memoizedProps,a=i.id,o=i.onPostCommit;typeof o=="function"&&o(a,e.alternate===null?"mount":"update",t.passiveEffectDuration,-0)}catch(l){Ft(e,e.return,l)}}else Ba(t,e,n,s);break;case 23:break;case 22:i=e.stateNode,e.memoizedState!==null?i._visibility&4?Ba(t,e,n,s):Gd(t,e):i._visibility&4?Ba(t,e,n,s):(i._visibility|=4,Tu(t,e,n,s,(e.subtreeFlags&10256)!==0)),r&2048&&E2(e.alternate,e);break;case 24:Ba(t,e,n,s),r&2048&&R2(e.alternate,e);break;default:Ba(t,e,n,s)}}function Tu(t,e,n,s,r){for(r=r&&(e.subtreeFlags&10256)!==0,e=e.child;e!==null;){var i=t,a=e,o=n,l=s,u=a.flags;switch(a.tag){case 0:case 11:case 15:Tu(i,a,o,l,r),Wf(8,a);break;case 23:break;case 22:var c=a.stateNode;a.memoizedState!==null?c._visibility&4?Tu(i,a,o,l,r):Gd(i,a):(c._visibility|=4,Tu(i,a,o,l,r)),r&&u&2048&&E2(a.alternate,a);break;case 24:Tu(i,a,o,l,r),r&&u&2048&&R2(a.alternate,a);break;default:Tu(i,a,o,l,r)}e=e.sibling}}function Gd(t,e){if(e.subtreeFlags&10256)for(e=e.child;e!==null;){var n=t,s=e,r=s.flags;switch(s.tag){case 22:Gd(n,s),r&2048&&E2(s.alternate,s);break;case 24:Gd(n,s),r&2048&&R2(s.alternate,s);break;default:Gd(n,s)}e=e.sibling}}var kd=8192;function xu(t){if(t.subtreeFlags&kd)for(t=t.child;t!==null;)JR(t),t=t.sibling}function JR(t){switch(t.tag){case 26:xu(t),t.flags&kd&&t.memoizedState!==null&&uV(si,t.memoizedState,t.memoizedProps);break;case 5:xu(t);break;case 3:case 4:var e=si;si=ey(t.stateNode.containerInfo),xu(t),si=e;break;case 22:t.memoizedState===null&&(e=t.alternate,e!==null&&e.memoizedState!==null?(e=kd,kd=16777216,xu(t),kd=e):xu(t));break;default:xu(t)}}function eA(t){var e=t.alternate;if(e!==null&&(t=e.child,t!==null)){e.child=null;do e=t.sibling,t.sibling=null,t=e;while(t!==null)}}function hd(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];Wn=s,nA(s,t)}eA(t)}if(t.subtreeFlags&10256)for(t=t.child;t!==null;)tA(t),t=t.sibling}function tA(t){switch(t.tag){case 0:case 11:case 15:hd(t),t.flags&2048&&mo(9,t,t.return);break;case 3:hd(t);break;case 12:hd(t);break;case 22:var e=t.stateNode;t.memoizedState!==null&&e._visibility&4&&(t.return===null||t.return.tag!==13)?(e._visibility&=-5,gg(t)):hd(t);break;default:hd(t)}}function gg(t){var e=t.deletions;if(t.flags&16){if(e!==null)for(var n=0;n<e.length;n++){var s=e[n];Wn=s,nA(s,t)}eA(t)}for(t=t.child;t!==null;){switch(e=t,e.tag){case 0:case 11:case 15:mo(8,e,e.return),gg(e);break;case 22:n=e.stateNode,n._visibility&4&&(n._visibility&=-5,gg(e));break;default:gg(e)}t=t.sibling}}function nA(t,e){for(;Wn!==null;){var n=Wn;switch(n.tag){case 0:case 11:case 15:mo(8,n,e);break;case 23:case 22:if(n.memoizedState!==null&&n.memoizedState.cachePool!==null){var s=n.memoizedState.cachePool.pool;s!=null&&s.refCount++}break;case 24:Bf(n.memoizedState.cache)}if(s=n.child,s!==null)s.return=n,Wn=s;else e:for(n=t;Wn!==null;){s=Wn;var r=s.sibling,i=s.return;if(qR(s),s===n){Wn=null;break e}if(r!==null){r.return=i,Wn=r;break e}Wn=i}}}function S4(t,e,n,s){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Or(t,e,n,s){return new S4(t,e,n,s)}function A2(t){return t=t.prototype,!(!t||!t.isReactComponent)}function ro(t,e){var n=t.alternate;return n===null?(n=Or(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&31457280,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n.refCleanup=t.refCleanup,n}function sA(t,e){t.flags&=31457282;var n=t.alternate;return n===null?(t.childLanes=0,t.lanes=e,t.child=null,t.subtreeFlags=0,t.memoizedProps=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.stateNode=null):(t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.subtreeFlags=0,t.deletions=null,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,t.type=n.type,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),t}function yg(t,e,n,s,r,i){var a=0;if(s=t,typeof t=="function")A2(t)&&(a=1);else if(typeof t=="string")a=oV(t,n,Pi.current)?26:t==="html"||t==="head"||t==="body"?27:5;else e:switch(t){case Ou:return ml(n.children,r,i,e);case rE:a=8,r|=24;break;case X1:return t=Or(12,n,e,r|2),t.elementType=X1,t.lanes=i,t;case K1:return t=Or(13,n,e,r),t.elementType=K1,t.lanes=i,t;case Y1:return t=Or(19,n,e,r),t.elementType=Y1,t.lanes=i,t;case aE:return rA(n,r,i,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case qM:case ma:a=10;break e;case iE:a=9;break e;case Zv:a=11;break e;case Jv:a=14;break e;case Ua:a=16,s=null;break e}a=29,n=Error(ae(130,t===null?"null":typeof t,"")),s=null}return e=Or(a,n,e,r),e.elementType=t,e.type=s,e.lanes=i,e}function ml(t,e,n,s){return t=Or(7,t,s,e),t.lanes=n,t}function rA(t,e,n,s){t=Or(22,t,s,e),t.elementType=aE,t.lanes=n;var r={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var i=r._current;if(i===null)throw Error(ae(456));if(!(r._pendingVisibility&2)){var a=fo(i,2);a!==null&&(r._pendingVisibility|=2,Ns(a,i,2))}},attach:function(){var i=r._current;if(i===null)throw Error(ae(456));if(r._pendingVisibility&2){var a=fo(i,2);a!==null&&(r._pendingVisibility&=-3,Ns(a,i,2))}}};return t.stateNode=r,t}function o1(t,e,n){return t=Or(6,t,null,e),t.lanes=n,t}function l1(t,e,n){return e=Or(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function oa(t){t.flags|=4}function F$(t,e){if(e.type!=="stylesheet"||e.state.loading&4)t.flags&=-16777217;else if(t.flags|=16777216,!$A(e)){if(e=Hr.current,e!==null&&((pt&4194176)===pt?Bi!==null:(pt&62914560)!==pt&&!(pt&536870912)||e!==Bi))throw Ld=uw,GE;t.flags|=8192}}function Um(t,e){e!==null&&(t.flags|=4),t.flags&16384&&(e=t.tag!==22?fE():536870912,t.lanes|=e,dc|=e)}function dd(t,e){if(!bt)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var s=null;n!==null;)n.alternate!==null&&(s=n),n=n.sibling;s===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function en(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,s=0;if(e)for(var r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags&31457280,s|=r.flags&31457280,r.return=t,r=r.sibling;else for(r=t.child;r!==null;)n|=r.lanes|r.childLanes,s|=r.subtreeFlags,s|=r.flags,r.return=t,r=r.sibling;return t.subtreeFlags|=s,t.childLanes=n,e}function C4(t,e,n){var s=e.pendingProps;switch(h2(e),e.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return en(e),null;case 1:return en(e),null;case 3:return n=e.stateNode,s=null,t!==null&&(s=t.memoizedState.cache),e.memoizedState.cache!==s&&(e.flags|=2048),wa(Fn),ac(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(t===null||t.child===null)&&(ud(e)?oa(e):t===null||t.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,ri!==null&&(Rw(ri),ri=null))),en(e),null;case 26:return n=e.memoizedState,t===null?(oa(e),n!==null?(en(e),F$(e,n)):(en(e),e.flags&=-16777217)):n?n!==t.memoizedState?(oa(e),en(e),F$(e,n)):(en(e),e.flags&=-16777217):(t.memoizedProps!==s&&oa(e),en(e),e.flags&=-16777217),null;case 27:_g(e),n=to.current;var r=e.type;if(t!==null&&e.stateNode!=null)t.memoizedProps!==s&&oa(e);else{if(!s){if(e.stateNode===null)throw Error(ae(166));return en(e),null}t=Pi.current,ud(e)?h$(e):(t=SA(r,s,n),e.stateNode=t,oa(e))}return en(e),null;case 5:if(_g(e),n=e.type,t!==null&&e.stateNode!=null)t.memoizedProps!==s&&oa(e);else{if(!s){if(e.stateNode===null)throw Error(ae(166));return en(e),null}if(t=Pi.current,ud(e))h$(e);else{switch(r=Jg(to.current),t){case 1:t=r.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:t=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":t=r.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":t=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":t=r.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild);break;case"select":t=typeof s.is=="string"?r.createElement("select",{is:s.is}):r.createElement("select"),s.multiple?t.multiple=!0:s.size&&(t.size=s.size);break;default:t=typeof s.is=="string"?r.createElement(n,{is:s.is}):r.createElement(n)}}t[ps]=e,t[Gs]=s;e:for(r=e.child;r!==null;){if(r.tag===5||r.tag===6)t.appendChild(r.stateNode);else if(r.tag!==4&&r.tag!==27&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===e)break e;for(;r.sibling===null;){if(r.return===null||r.return===e)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}e.stateNode=t;e:switch(rs(t,n,s),n){case"button":case"input":case"select":case"textarea":t=!!s.autoFocus;break e;case"img":t=!0;break e;default:t=!1}t&&oa(e)}}return en(e),e.flags&=-16777217,null;case 6:if(t&&e.stateNode!=null)t.memoizedProps!==s&&oa(e);else{if(typeof s!="string"&&e.stateNode===null)throw Error(ae(166));if(t=to.current,ud(e)){if(t=e.stateNode,n=e.memoizedProps,s=null,r=Cs,r!==null)switch(r.tag){case 27:case 5:s=r.memoizedProps}t[ps]=e,t=!!(t.nodeValue===n||s!==null&&s.suppressHydrationWarning===!0||bA(t.nodeValue,n)),t||kl(e)}else t=Jg(t).createTextNode(s),t[ps]=e,e.stateNode=t}return en(e),null;case 13:if(s=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(r=ud(e),s!==null&&s.dehydrated!==null){if(t===null){if(!r)throw Error(ae(318));if(r=e.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(ae(317));r[ps]=e}else Mf(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;en(e),r=!1}else ri!==null&&(Rw(ri),ri=null),r=!0;if(!r)return e.flags&256?(xa(e),e):(xa(e),null)}if(xa(e),e.flags&128)return e.lanes=n,e;if(n=s!==null,t=t!==null&&t.memoizedState!==null,n){s=e.child,r=null,s.alternate!==null&&s.alternate.memoizedState!==null&&s.alternate.memoizedState.cachePool!==null&&(r=s.alternate.memoizedState.cachePool.pool);var i=null;s.memoizedState!==null&&s.memoizedState.cachePool!==null&&(i=s.memoizedState.cachePool.pool),i!==r&&(s.flags|=2048)}return n!==t&&n&&(e.child.flags|=8192),Um(e,e.updateQueue),en(e),null;case 4:return ac(),t===null&&L2(e.stateNode.containerInfo),en(e),null;case 10:return wa(e.type),en(e),null;case 19:if(Xn(Ln),r=e.memoizedState,r===null)return en(e),null;if(s=(e.flags&128)!==0,i=r.rendering,i===null)if(s)dd(r,!1);else{if(un!==0||t!==null&&t.flags&128)for(t=e.child;t!==null;){if(i=Vg(t),i!==null){for(e.flags|=128,dd(r,!1),t=i.updateQueue,e.updateQueue=t,Um(e,t),e.subtreeFlags=0,t=n,n=e.child;n!==null;)sA(n,t),n=n.sibling;return Qt(Ln,Ln.current&1|2),e.child}t=t.sibling}r.tail!==null&&Mi()>Xg&&(e.flags|=128,s=!0,dd(r,!1),e.lanes=4194304)}else{if(!s)if(t=Vg(i),t!==null){if(e.flags|=128,s=!0,t=t.updateQueue,e.updateQueue=t,Um(e,t),dd(r,!0),r.tail===null&&r.tailMode==="hidden"&&!i.alternate&&!bt)return en(e),null}else 2*Mi()-r.renderingStartTime>Xg&&n!==536870912&&(e.flags|=128,s=!0,dd(r,!1),e.lanes=4194304);r.isBackwards?(i.sibling=e.child,e.child=i):(t=r.last,t!==null?t.sibling=i:e.child=i,r.last=i)}return r.tail!==null?(e=r.tail,r.rendering=e,r.tail=e.sibling,r.renderingStartTime=Mi(),e.sibling=null,t=Ln.current,Qt(Ln,s?t&1|2:t&1),e):(en(e),null);case 22:case 23:return xa(e),d2(),s=e.memoizedState!==null,t!==null?t.memoizedState!==null!==s&&(e.flags|=8192):s&&(e.flags|=8192),s?n&536870912&&!(e.flags&128)&&(en(e),e.subtreeFlags&6&&(e.flags|=8192)):en(e),n=e.updateQueue,n!==null&&Um(e,n.retryQueue),n=null,t!==null&&t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(n=t.memoizedState.cachePool.pool),s=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(s=e.memoizedState.cachePool.pool),s!==n&&(e.flags|=2048),t!==null&&Xn(pl),null;case 24:return n=null,t!==null&&(n=t.memoizedState.cache),e.memoizedState.cache!==n&&(e.flags|=2048),wa(Fn),en(e),null;case 25:return null}throw Error(ae(156,e.tag))}function k4(t,e){switch(h2(e),e.tag){case 1:return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return wa(Fn),ac(),t=e.flags,t&65536&&!(t&128)?(e.flags=t&-65537|128,e):null;case 26:case 27:case 5:return _g(e),null;case 13:if(xa(e),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(ae(340));Mf()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return Xn(Ln),null;case 4:return ac(),null;case 10:return wa(e.type),null;case 22:case 23:return xa(e),d2(),t!==null&&Xn(pl),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 24:return wa(Fn),null;case 25:return null;default:return null}}function iA(t,e){switch(h2(e),e.tag){case 3:wa(Fn),ac();break;case 26:case 27:case 5:_g(e);break;case 4:ac();break;case 13:xa(e);break;case 19:Xn(Ln);break;case 10:wa(e.type);break;case 22:case 23:xa(e),d2(),t!==null&&Xn(pl);break;case 24:wa(Fn)}}var $4={getCacheForType:function(t){var e=ms(Fn),n=e.data.get(t);return n===void 0&&(n=t(),e.data.set(t,n)),n}},N4=typeof WeakMap=="function"?WeakMap:Map,sn=0,Vt=null,at=null,pt=0,Bt=0,tr=null,da=!1,_c=!1,D2=!1,Ta=0,un=0,go=0,gl=0,_2=0,Fr=0,dc=0,Hd=null,Fi=null,Nw=!1,O2=0,Xg=1/0,Kg=null,io=null,Wm=!1,Jo=null,jd=0,Iw=0,Tw=null,qd=0,Ew=null;function lr(){if(sn&2&&pt!==0)return pt&-pt;if(Ze.T!==null){var t=cc;return t!==0?t:z2()}return yE()}function aA(){Fr===0&&(Fr=!(pt&536870912)||bt?dE():536870912);var t=Hr.current;return t!==null&&(t.flags|=32),Fr}function Ns(t,e,n){(t===Vt&&Bt===2||t.cancelPendingCommit!==null)&&(fc(t,0),fa(t,pt,Fr,!1)),Lf(t,n),(!(sn&2)||t!==Vt)&&(t===Vt&&(!(sn&2)&&(gl|=n),un===4&&fa(t,pt,Fr,!1)),Zi(t))}function oA(t,e,n){if(sn&6)throw Error(ae(327));var s=!n&&(e&60)===0&&(e&t.expiredLanes)===0||zf(t,e),r=s?E4(t,e):u1(t,e,!0),i=s;do{if(r===0){_c&&!s&&fa(t,e,0,!1);break}else if(r===6)fa(t,e,0,!da);else{if(n=t.current.alternate,i&&!I4(n)){r=u1(t,e,!1),i=!1;continue}if(r===2){if(i=e,t.errorRecoveryDisabledLanes&i)var a=0;else a=t.pendingLanes&-536870913,a=a!==0?a:a&536870912?536870912:0;if(a!==0){e=a;e:{var o=t;r=Hd;var l=o.current.memoizedState.isDehydrated;if(l&&(fc(o,a).flags|=256),a=u1(o,a,!1),a!==2){if(D2&&!l){o.errorRecoveryDisabledLanes|=i,gl|=i,r=4;break e}i=Fi,Fi=r,i!==null&&Rw(i)}r=a}if(i=!1,r!==2)continue}}if(r===1){fc(t,0),fa(t,e,0,!0);break}e:{switch(s=t,r){case 0:case 1:throw Error(ae(345));case 4:if((e&4194176)===e){fa(s,e,Fr,!da);break e}break;case 2:Fi=null;break;case 3:case 5:break;default:throw Error(ae(329))}if(s.finishedWork=n,s.finishedLanes=e,(e&62914560)===e&&(i=O2+300-Mi(),10<i)){if(fa(s,e,Fr,!da),Hy(s,0)!==0)break e;s.timeoutHandle=vA(z$.bind(null,s,n,Fi,Kg,Nw,e,Fr,gl,dc,da,2,-0,0),i);break e}z$(s,n,Fi,Kg,Nw,e,Fr,gl,dc,da,0,-0,0)}}break}while(!0);Zi(t)}function Rw(t){Fi===null?Fi=t:Fi.push.apply(Fi,t)}function z$(t,e,n,s,r,i,a,o,l,u,c,h,d){var f=e.subtreeFlags;if((f&8192||(f&16785408)===16785408)&&(uf={stylesheets:null,count:0,unsuspend:lV},JR(e),e=cV(),e!==null)){t.cancelPendingCommit=e(P$.bind(null,t,n,s,r,a,o,l,1,h,d)),fa(t,i,a,!u);return}P$(t,n,s,r,a,o,l,c,h,d)}function I4(t){for(var e=t;;){var n=e.tag;if((n===0||n===11||n===15)&&e.flags&16384&&(n=e.updateQueue,n!==null&&(n=n.stores,n!==null)))for(var s=0;s<n.length;s++){var r=n[s],i=r.getSnapshot;r=r.value;try{if(!cr(i(),r))return!1}catch{return!1}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function fa(t,e,n,s){e&=~_2,e&=~gl,t.suspendedLanes|=e,t.pingedLanes&=~e,s&&(t.warmLanes|=e),s=t.expirationTimes;for(var r=e;0<r;){var i=31-or(r),a=1<<i;s[i]=-1,r&=~a}n!==0&&pE(t,n,e)}function tx(){return sn&6?!0:(Gf(0),!1)}function F2(){if(at!==null){if(Bt===0)var t=at.return;else t=at,ba=Kl=null,b2(t),Ku=null,rf=0,t=at;for(;t!==null;)iA(t.alternate,t),t=t.return;at=null}}function fc(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;n!==-1&&(t.timeoutHandle=-1,j4(n)),n=t.cancelPendingCommit,n!==null&&(t.cancelPendingCommit=null,n()),F2(),Vt=t,at=n=ro(t.current,null),pt=e,Bt=0,tr=null,da=!1,_c=zf(t,e),D2=!1,dc=Fr=_2=gl=go=un=0,Fi=Hd=null,Nw=!1,e&8&&(e|=e&32);var s=t.entangledLanes;if(s!==0)for(t=t.entanglements,s&=e;0<s;){var r=31-or(s),i=1<<r;e|=t[r],s&=~i}return Ta=e,Ky(),n}function lA(t,e){it=null,Ze.H=Hi,e===zd?(e=p$(),Bt=3):e===GE?(e=p$(),Bt=4):Bt=e===_R?8:e!==null&&typeof e=="object"&&typeof e.then=="function"?6:1,tr=e,at===null&&(un=1,Hg(t,Dr(e,t.current)))}function uA(){var t=Ze.H;return Ze.H=Hi,t===null?Hi:t}function cA(){var t=Ze.A;return Ze.A=$4,t}function Aw(){un=4,da||(pt&4194176)!==pt&&Hr.current!==null||(_c=!0),!(go&134217727)&&!(gl&134217727)||Vt===null||fa(Vt,pt,Fr,!1)}function u1(t,e,n){var s=sn;sn|=2;var r=uA(),i=cA();(Vt!==t||pt!==e)&&(Kg=null,fc(t,e)),e=!1;var a=un;e:do try{if(Bt!==0&&at!==null){var o=at,l=tr;switch(Bt){case 8:F2(),a=6;break e;case 3:case 2:case 6:Hr.current===null&&(e=!0);var u=Bt;if(Bt=0,tr=null,Gu(t,o,l,u),n&&_c){a=0;break e}break;default:u=Bt,Bt=0,tr=null,Gu(t,o,l,u)}}T4(),a=un;break}catch(c){lA(t,c)}while(!0);return e&&t.shellSuspendCounter++,ba=Kl=null,sn=s,Ze.H=r,Ze.A=i,at===null&&(Vt=null,pt=0,Ky()),a}function T4(){for(;at!==null;)hA(at)}function E4(t,e){var n=sn;sn|=2;var s=uA(),r=cA();Vt!==t||pt!==e?(Kg=null,Xg=Mi()+500,fc(t,e)):_c=zf(t,e);e:do try{if(Bt!==0&&at!==null){e=at;var i=tr;t:switch(Bt){case 1:Bt=0,tr=null,Gu(t,e,i,1);break;case 2:if(f$(i)){Bt=0,tr=null,L$(e);break}e=function(){Bt===2&&Vt===t&&(Bt=7),Zi(t)},i.then(e,e);break e;case 3:Bt=7;break e;case 4:Bt=5;break e;case 7:f$(i)?(Bt=0,tr=null,L$(e)):(Bt=0,tr=null,Gu(t,e,i,7));break;case 5:var a=null;switch(at.tag){case 26:a=at.memoizedState;case 5:case 27:var o=at;if(!a||$A(a)){Bt=0,tr=null;var l=o.sibling;if(l!==null)at=l;else{var u=o.return;u!==null?(at=u,nx(u)):at=null}break t}}Bt=0,tr=null,Gu(t,e,i,5);break;case 6:Bt=0,tr=null,Gu(t,e,i,6);break;case 8:F2(),un=6;break e;default:throw Error(ae(462))}}R4();break}catch(c){lA(t,c)}while(!0);return ba=Kl=null,Ze.H=s,Ze.A=r,sn=n,at!==null?0:(Vt=null,pt=0,Ky(),un)}function R4(){for(;at!==null&&!ZM();)hA(at)}function hA(t){var e=PR(t.alternate,t,Ta);t.memoizedProps=t.pendingProps,e===null?nx(t):at=e}function L$(t){var e=t,n=e.alternate;switch(e.tag){case 15:case 0:e=T$(n,e,e.pendingProps,e.type,void 0,pt);break;case 11:e=T$(n,e,e.pendingProps,e.type.render,e.ref,pt);break;case 5:b2(e);default:iA(n,e),e=at=sA(e,Ta),e=PR(n,e,Ta)}t.memoizedProps=t.pendingProps,e===null?nx(t):at=e}function Gu(t,e,n,s){ba=Kl=null,b2(e),Ku=null,rf=0;var r=e.return;try{if(x4(t,r,e,n,pt)){un=1,Hg(t,Dr(n,t.current)),at=null;return}}catch(i){if(r!==null)throw at=r,i;un=1,Hg(t,Dr(n,t.current)),at=null;return}e.flags&32768?(bt||s===1?t=!0:_c||pt&536870912?t=!1:(da=t=!0,(s===2||s===3||s===6)&&(s=Hr.current,s!==null&&s.tag===13&&(s.flags|=16384))),dA(e,t)):nx(e)}function nx(t){var e=t;do{if(e.flags&32768){dA(e,da);return}t=e.return;var n=C4(e.alternate,e,Ta);if(n!==null){at=n;return}if(e=e.sibling,e!==null){at=e;return}at=e=t}while(e!==null);un===0&&(un=5)}function dA(t,e){do{var n=k4(t.alternate,t);if(n!==null){n.flags&=32767,at=n;return}if(n=t.return,n!==null&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!e&&(t=t.sibling,t!==null)){at=t;return}at=t=n}while(t!==null);un=6,at=null}function P$(t,e,n,s,r,i,a,o,l,u){var c=Ze.T,h=qt.p;try{qt.p=2,Ze.T=null,A4(t,e,n,s,h,r,i,a,o,l,u)}finally{Ze.T=c,qt.p=h}}function A4(t,e,n,s,r,i,a,o){do Ju();while(Jo!==null);if(sn&6)throw Error(ae(327));var l=t.finishedWork;if(s=t.finishedLanes,l===null)return null;if(t.finishedWork=null,t.finishedLanes=0,l===t.current)throw Error(ae(177));t.callbackNode=null,t.callbackPriority=0,t.cancelPendingCommit=null;var u=l.lanes|l.childLanes;if(u|=l2,uB(t,s,u,i,a,o),t===Vt&&(at=Vt=null,pt=0),!(l.subtreeFlags&10256)&&!(l.flags&10256)||Wm||(Wm=!0,Iw=u,Tw=n,F4(Og,function(){return Ju(),null})),n=(l.flags&15990)!==0,l.subtreeFlags&15990||n?(n=Ze.T,Ze.T=null,i=qt.p,qt.p=2,a=sn,sn|=4,w4(t,l),YR(l,t),t4(Fw,t.containerInfo),sy=!!Ow,Fw=Ow=null,t.current=l,jR(t,l.alternate,l),JM(),sn=a,qt.p=i,Ze.T=n):t.current=l,Wm?(Wm=!1,Jo=t,jd=s):fA(t,u),u=t.pendingLanes,u===0&&(io=null),rB(l.stateNode),Zi(t),e!==null)for(r=t.onRecoverableError,l=0;l<e.length;l++)u=e[l],r(u.value,{componentStack:u.stack});return jd&3&&Ju(),u=t.pendingLanes,s&4194218&&u&42?t===Ew?qd++:(qd=0,Ew=t):qd=0,Gf(0),null}function fA(t,e){(t.pooledCacheLanes&=e)===0&&(e=t.pooledCache,e!=null&&(t.pooledCache=null,Bf(e)))}function Ju(){if(Jo!==null){var t=Jo,e=Iw;Iw=0;var n=gE(jd),s=Ze.T,r=qt.p;try{if(qt.p=32>n?32:n,Ze.T=null,Jo===null)var i=!1;else{n=Tw,Tw=null;var a=Jo,o=jd;if(Jo=null,jd=0,sn&6)throw Error(ae(331));var l=sn;if(sn|=4,tA(a.current),ZR(a,a.current,o,n),sn=l,Gf(0,!1),ar&&typeof ar.onPostCommitFiberRoot=="function")try{ar.onPostCommitFiberRoot(Ff,a)}catch{}i=!0}return i}finally{qt.p=r,Ze.T=s,fA(t,e)}}return!1}function M$(t,e,n){e=Dr(n,e),e=gw(t.stateNode,e,2),t=so(t,e,2),t!==null&&(Lf(t,2),Zi(t))}function Ft(t,e,n){if(t.tag===3)M$(t,t,n);else for(;e!==null;){if(e.tag===3){M$(e,t,n);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(io===null||!io.has(s))){t=Dr(n,t),n=AR(2),s=so(e,n,2),s!==null&&(DR(n,s,e,t),Lf(s,2),Zi(s));break}}e=e.return}}function c1(t,e,n){var s=t.pingCache;if(s===null){s=t.pingCache=new N4;var r=new Set;s.set(e,r)}else r=s.get(e),r===void 0&&(r=new Set,s.set(e,r));r.has(n)||(D2=!0,r.add(n),t=D4.bind(null,t,e,n),e.then(t,t))}function D4(t,e,n){var s=t.pingCache;s!==null&&s.delete(e),t.pingedLanes|=t.suspendedLanes&n,t.warmLanes&=~n,Vt===t&&(pt&n)===n&&(un===4||un===3&&(pt&62914560)===pt&&300>Mi()-O2?!(sn&2)&&fc(t,0):_2|=n,dc===pt&&(dc=0)),Zi(t)}function pA(t,e){e===0&&(e=fE()),t=fo(t,e),t!==null&&(Lf(t,e),Zi(t))}function _4(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),pA(t,n)}function O4(t,e){var n=0;switch(t.tag){case 13:var s=t.stateNode,r=t.memoizedState;r!==null&&(n=r.retryLane);break;case 19:s=t.stateNode;break;case 22:s=t.stateNode._retryCache;break;default:throw Error(ae(314))}s!==null&&s.delete(e),pA(t,n)}function F4(t,e){return e2(t,e)}var Yg=null,Eu=null,Dw=!1,Qg=!1,h1=!1,yl=0;function Zi(t){t!==Eu&&t.next===null&&(Eu===null?Yg=Eu=t:Eu=Eu.next=t),Qg=!0,Dw||(Dw=!0,L4(z4))}function Gf(t,e){if(!h1&&Qg){h1=!0;do for(var n=!1,s=Yg;s!==null;){if(t!==0){var r=s.pendingLanes;if(r===0)var i=0;else{var a=s.suspendedLanes,o=s.pingedLanes;i=(1<<31-or(42|t)+1)-1,i&=r&~(a&~o),i=i&201326677?i&201326677|1:i?i|2:0}i!==0&&(n=!0,B$(s,i))}else i=pt,i=Hy(s,s===Vt?i:0),!(i&3)||zf(s,i)||(n=!0,B$(s,i));s=s.next}while(n);h1=!1}}function z4(){Qg=Dw=!1;var t=0;yl!==0&&(H4()&&(t=yl),yl=0);for(var e=Mi(),n=null,s=Yg;s!==null;){var r=s.next,i=mA(s,e);i===0?(s.next=null,n===null?Yg=r:n.next=r,r===null&&(Eu=n)):(n=s,(t!==0||i&3)&&(Qg=!0)),s=r}Gf(t)}function mA(t,e){for(var n=t.suspendedLanes,s=t.pingedLanes,r=t.expirationTimes,i=t.pendingLanes&-62914561;0<i;){var a=31-or(i),o=1<<a,l=r[a];l===-1?(!(o&n)||o&s)&&(r[a]=lB(o,e)):l<=e&&(t.expiredLanes|=o),i&=~o}if(e=Vt,n=pt,n=Hy(t,t===e?n:0),s=t.callbackNode,n===0||t===e&&Bt===2||t.cancelPendingCommit!==null)return s!==null&&s!==null&&V0(s),t.callbackNode=null,t.callbackPriority=0;if(!(n&3)||zf(t,n)){if(e=n&-n,e===t.callbackPriority)return e;switch(s!==null&&V0(s),gE(n)){case 2:case 8:n=cE;break;case 32:n=Og;break;case 268435456:n=hE;break;default:n=Og}return s=gA.bind(null,t),n=e2(n,s),t.callbackPriority=e,t.callbackNode=n,e}return s!==null&&s!==null&&V0(s),t.callbackPriority=2,t.callbackNode=null,2}function gA(t,e){var n=t.callbackNode;if(Ju()&&t.callbackNode!==n)return null;var s=pt;return s=Hy(t,t===Vt?s:0),s===0?null:(oA(t,s,e),mA(t,Mi()),t.callbackNode!=null&&t.callbackNode===n?gA.bind(null,t):null)}function B$(t,e){if(Ju())return null;oA(t,e,!0)}function L4(t){q4(function(){sn&6?e2(uE,t):t()})}function z2(){return yl===0&&(yl=dE()),yl}function V$(t){return t==null||typeof t=="symbol"||typeof t=="boolean"?null:typeof t=="function"?t:cg(""+t)}function U$(t,e){var n=e.ownerDocument.createElement("input");return n.name=e.name,n.value=e.value,t.id&&n.setAttribute("form",t.id),e.parentNode.insertBefore(n,e),t=new FormData(t),n.parentNode.removeChild(n),t}function P4(t,e,n,s,r){if(e==="submit"&&n&&n.stateNode===r){var i=V$((r[Gs]||null).action),a=s.submitter;a&&(e=(e=a[Gs]||null)?V$(e.formAction):a.getAttribute("formAction"),e!==null&&(i=e,a=null));var o=new jy("action","action",null,s,r);t.push({event:o,listeners:[{instance:null,listener:function(){if(s.defaultPrevented){if(yl!==0){var l=a?U$(r,a):new FormData(r);pw(n,{pending:!0,data:l,method:r.method,action:i},null,l)}}else typeof i=="function"&&(o.preventDefault(),l=a?U$(r,a):new FormData(r),pw(n,{pending:!0,data:l,method:r.method,action:i},i,l))},currentTarget:r}]})}}for(var d1=0;d1<u$.length;d1++){var f1=u$[d1],M4=f1.toLowerCase(),B4=f1[0].toUpperCase()+f1.slice(1);xi(M4,"on"+B4)}xi(LE,"onAnimationEnd");xi(PE,"onAnimationIteration");xi(ME,"onAnimationStart");xi("dblclick","onDoubleClick");xi("focusin","onFocus");xi("focusout","onBlur");xi(s4,"onTransitionRun");xi(r4,"onTransitionStart");xi(i4,"onTransitionCancel");xi(BE,"onTransitionEnd");oc("onMouseEnter",["mouseout","mouseover"]);oc("onMouseLeave",["mouseout","mouseover"]);oc("onPointerEnter",["pointerout","pointerover"]);oc("onPointerLeave",["pointerout","pointerover"]);Gl("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Gl("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Gl("onBeforeInput",["compositionend","keypress","textInput","paste"]);Gl("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Gl("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Gl("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var of="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),V4=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(of));function yA(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var s=t[n],r=s.event;s=s.listeners;e:{var i=void 0;if(e)for(var a=s.length-1;0<=a;a--){var o=s[a],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==i&&r.isPropagationStopped())break e;i=o,r.currentTarget=u;try{i(r)}catch(c){Gg(c)}r.currentTarget=null,i=l}else for(a=0;a<s.length;a++){if(o=s[a],l=o.instance,u=o.currentTarget,o=o.listener,l!==i&&r.isPropagationStopped())break e;i=o,r.currentTarget=u;try{i(r)}catch(c){Gg(c)}r.currentTarget=null,i=l}}}}function ht(t,e){var n=e[tw];n===void 0&&(n=e[tw]=new Set);var s=t+"__bubble";n.has(s)||(xA(e,t,2,!1),n.add(s))}function p1(t,e,n){var s=0;e&&(s|=4),xA(n,t,s,e)}var Gm="_reactListening"+Math.random().toString(36).slice(2);function L2(t){if(!t[Gm]){t[Gm]=!0,xE.forEach(function(n){n!=="selectionchange"&&(V4.has(n)||p1(n,!1,t),p1(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Gm]||(e[Gm]=!0,p1("selectionchange",!1,e))}}function xA(t,e,n,s){switch(RA(e)){case 2:var r=fV;break;case 8:r=pV;break;default:r=V2}n=r.bind(null,e,n,t),r=void 0,!iw||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(r=!0),s?r!==void 0?t.addEventListener(e,n,{capture:!0,passive:r}):t.addEventListener(e,n,!0):r!==void 0?t.addEventListener(e,n,{passive:r}):t.addEventListener(e,n,!1)}function m1(t,e,n,s,r){var i=s;if(!(e&1)&&!(e&2)&&s!==null)e:for(;;){if(s===null)return;var a=s.tag;if(a===3||a===4){var o=s.stateNode.containerInfo;if(o===r||o.nodeType===8&&o.parentNode===r)break;if(a===4)for(a=s.return;a!==null;){var l=a.tag;if((l===3||l===4)&&(l=a.stateNode.containerInfo,l===r||l.nodeType===8&&l.parentNode===r))return;a=a.return}for(;o!==null;){if(a=il(o),a===null)return;if(l=a.tag,l===5||l===6||l===26||l===27){s=i=a;continue e}o=o.parentNode}}s=s.return}NE(function(){var u=i,c=s2(n),h=[];e:{var d=VE.get(t);if(d!==void 0){var f=jy,p=t;switch(t){case"keypress":if(dg(n)===0)break e;case"keydown":case"keyup":f=OB;break;case"focusin":p="focus",f=j0;break;case"focusout":p="blur",f=j0;break;case"beforeblur":case"afterblur":f=j0;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":f=Qk;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":f=SB;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":f=LB;break;case LE:case PE:case ME:f=$B;break;case BE:f=MB;break;case"scroll":case"scrollend":f=wB;break;case"wheel":f=VB;break;case"copy":case"cut":case"paste":f=IB;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":f=Jk;break;case"toggle":case"beforetoggle":f=WB}var m=(e&4)!==0,g=!m&&(t==="scroll"||t==="scrollend"),y=m?d!==null?d+"Capture":null:d;m=[];for(var x=u,w;x!==null;){var v=x;if(w=v.stateNode,v=v.tag,v!==5&&v!==26&&v!==27||w===null||y===null||(v=ef(x,y),v!=null&&m.push(lf(x,v,w))),g)break;x=x.return}0<m.length&&(d=new f(d,p,null,n,c),h.push({event:d,listeners:m}))}}if(!(e&7)){e:{if(d=t==="mouseover"||t==="pointerover",f=t==="mouseout"||t==="pointerout",d&&n!==rw&&(p=n.relatedTarget||n.fromElement)&&(il(p)||p[Ac]))break e;if((f||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,f?(p=n.relatedTarget||n.toElement,f=u,p=p?il(p):null,p!==null&&(g=Rc(p),m=p.tag,p!==g||m!==5&&m!==27&&m!==6)&&(p=null)):(f=null,p=u),f!==p)){if(m=Qk,v="onMouseLeave",y="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(m=Jk,v="onPointerLeave",y="onPointerEnter",x="pointer"),g=f==null?d:Cd(f),w=p==null?d:Cd(p),d=new m(v,x+"leave",f,n,c),d.target=g,d.relatedTarget=w,v=null,il(c)===u&&(m=new m(y,x+"enter",p,n,c),m.target=w,m.relatedTarget=g,v=m),g=v,f&&p)t:{for(m=f,y=p,x=0,w=m;w;w=bu(w))x++;for(w=0,v=y;v;v=bu(v))w++;for(;0<x-w;)m=bu(m),x--;for(;0<w-x;)y=bu(y),w--;for(;x--;){if(m===y||y!==null&&m===y.alternate)break t;m=bu(m),y=bu(y)}m=null}else m=null;f!==null&&W$(h,d,f,m,!1),p!==null&&g!==null&&W$(h,g,p,m,!0)}}e:{if(d=u?Cd(u):window,f=d.nodeName&&d.nodeName.toLowerCase(),f==="select"||f==="input"&&d.type==="file")var S=s$;else if(n$(d))if(DE)S=JB;else{S=QB;var N=YB}else f=d.nodeName,!f||f.toLowerCase()!=="input"||d.type!=="checkbox"&&d.type!=="radio"?u&&n2(u.elementType)&&(S=s$):S=ZB;if(S&&(S=S(t,u))){AE(h,S,n,c);break e}N&&N(t,d,u),t==="focusout"&&u&&d.type==="number"&&u.memoizedProps.value!=null&&sw(d,"number",d.value)}switch(N=u?Cd(u):window,t){case"focusin":(n$(N)||N.contentEditable==="true")&&(Pu=N,aw=u,Fd=null);break;case"focusout":Fd=aw=Pu=null;break;case"mousedown":ow=!0;break;case"contextmenu":case"mouseup":case"dragend":ow=!1,l$(h,n,c);break;case"selectionchange":if(n4)break;case"keydown":case"keyup":l$(h,n,c)}var I;if(a2)e:{switch(t){case"compositionstart":var T="onCompositionStart";break e;case"compositionend":T="onCompositionEnd";break e;case"compositionupdate":T="onCompositionUpdate";break e}T=void 0}else Lu?EE(t,n)&&(T="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(T="onCompositionStart");T&&(TE&&n.locale!=="ko"&&(Lu||T!=="onCompositionStart"?T==="onCompositionEnd"&&Lu&&(I=IE()):(Ya=c,r2="value"in Ya?Ya.value:Ya.textContent,Lu=!0)),N=Zg(u,T),0<N.length&&(T=new Zk(T,t,null,n,c),h.push({event:T,listeners:N}),I?T.data=I:(I=RE(n),I!==null&&(T.data=I)))),(I=HB?jB(t,n):qB(t,n))&&(T=Zg(u,"onBeforeInput"),0<T.length&&(N=new Zk("onBeforeInput","beforeinput",null,n,c),h.push({event:N,listeners:T}),N.data=I)),P4(h,t,u,n,c)}yA(h,e)})}function lf(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Zg(t,e){for(var n=e+"Capture",s=[];t!==null;){var r=t,i=r.stateNode;r=r.tag,r!==5&&r!==26&&r!==27||i===null||(r=ef(t,n),r!=null&&s.unshift(lf(t,r,i)),r=ef(t,e),r!=null&&s.push(lf(t,r,i))),t=t.return}return s}function bu(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5&&t.tag!==27);return t||null}function W$(t,e,n,s,r){for(var i=e._reactName,a=[];n!==null&&n!==s;){var o=n,l=o.alternate,u=o.stateNode;if(o=o.tag,l!==null&&l===s)break;o!==5&&o!==26&&o!==27||u===null||(l=u,r?(u=ef(n,i),u!=null&&a.unshift(lf(n,u,l))):r||(u=ef(n,i),u!=null&&a.push(lf(n,u,l)))),n=n.return}a.length!==0&&t.push({event:e,listeners:a})}var U4=/\r\n?/g,W4=/\u0000|\uFFFD/g;function G$(t){return(typeof t=="string"?t:""+t).replace(U4,`
`).replace(W4,"")}function bA(t,e){return e=G$(e),G$(t)===e}function sx(){}function Et(t,e,n,s,r,i){switch(n){case"children":typeof s=="string"?e==="body"||e==="textarea"&&s===""||lc(t,s):(typeof s=="number"||typeof s=="bigint")&&e!=="body"&&lc(t,""+s);break;case"className":zm(t,"class",s);break;case"tabIndex":zm(t,"tabindex",s);break;case"dir":case"role":case"viewBox":case"width":case"height":zm(t,n,s);break;case"style":$E(t,s,i);break;case"data":if(e!=="object"){zm(t,"data",s);break}case"src":case"href":if(s===""&&(e!=="a"||n!=="href")){t.removeAttribute(n);break}if(s==null||typeof s=="function"||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=cg(""+s),t.setAttribute(n,s);break;case"action":case"formAction":if(typeof s=="function"){t.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof i=="function"&&(n==="formAction"?(e!=="input"&&Et(t,e,"name",r.name,r,null),Et(t,e,"formEncType",r.formEncType,r,null),Et(t,e,"formMethod",r.formMethod,r,null),Et(t,e,"formTarget",r.formTarget,r,null)):(Et(t,e,"encType",r.encType,r,null),Et(t,e,"method",r.method,r,null),Et(t,e,"target",r.target,r,null)));if(s==null||typeof s=="symbol"||typeof s=="boolean"){t.removeAttribute(n);break}s=cg(""+s),t.setAttribute(n,s);break;case"onClick":s!=null&&(t.onclick=sx);break;case"onScroll":s!=null&&ht("scroll",t);break;case"onScrollEnd":s!=null&&ht("scrollend",t);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(ae(61));if(n=s.__html,n!=null){if(r.children!=null)throw Error(ae(60));t.innerHTML=n}}break;case"multiple":t.multiple=s&&typeof s!="function"&&typeof s!="symbol";break;case"muted":t.muted=s&&typeof s!="function"&&typeof s!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(s==null||typeof s=="function"||typeof s=="boolean"||typeof s=="symbol"){t.removeAttribute("xlink:href");break}n=cg(""+s),t.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""+s):t.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":s&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,""):t.removeAttribute(n);break;case"capture":case"download":s===!0?t.setAttribute(n,""):s!==!1&&s!=null&&typeof s!="function"&&typeof s!="symbol"?t.setAttribute(n,s):t.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":s!=null&&typeof s!="function"&&typeof s!="symbol"&&!isNaN(s)&&1<=s?t.setAttribute(n,s):t.removeAttribute(n);break;case"rowSpan":case"start":s==null||typeof s=="function"||typeof s=="symbol"||isNaN(s)?t.removeAttribute(n):t.setAttribute(n,s);break;case"popover":ht("beforetoggle",t),ht("toggle",t),ug(t,"popover",s);break;case"xlinkActuate":ra(t,"http://www.w3.org/1999/xlink","xlink:actuate",s);break;case"xlinkArcrole":ra(t,"http://www.w3.org/1999/xlink","xlink:arcrole",s);break;case"xlinkRole":ra(t,"http://www.w3.org/1999/xlink","xlink:role",s);break;case"xlinkShow":ra(t,"http://www.w3.org/1999/xlink","xlink:show",s);break;case"xlinkTitle":ra(t,"http://www.w3.org/1999/xlink","xlink:title",s);break;case"xlinkType":ra(t,"http://www.w3.org/1999/xlink","xlink:type",s);break;case"xmlBase":ra(t,"http://www.w3.org/XML/1998/namespace","xml:base",s);break;case"xmlLang":ra(t,"http://www.w3.org/XML/1998/namespace","xml:lang",s);break;case"xmlSpace":ra(t,"http://www.w3.org/XML/1998/namespace","xml:space",s);break;case"is":ug(t,"is",s);break;case"innerText":case"textContent":break;default:(!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(n=xB.get(n)||n,ug(t,n,s))}}function _w(t,e,n,s,r,i){switch(n){case"style":$E(t,s,i);break;case"dangerouslySetInnerHTML":if(s!=null){if(typeof s!="object"||!("__html"in s))throw Error(ae(61));if(n=s.__html,n!=null){if(r.children!=null)throw Error(ae(60));t.innerHTML=n}}break;case"children":typeof s=="string"?lc(t,s):(typeof s=="number"||typeof s=="bigint")&&lc(t,""+s);break;case"onScroll":s!=null&&ht("scroll",t);break;case"onScrollEnd":s!=null&&ht("scrollend",t);break;case"onClick":s!=null&&(t.onclick=sx);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!bE.hasOwnProperty(n))e:{if(n[0]==="o"&&n[1]==="n"&&(r=n.endsWith("Capture"),e=n.slice(2,r?n.length-7:void 0),i=t[Gs]||null,i=i!=null?i[n]:null,typeof i=="function"&&t.removeEventListener(e,i,r),typeof s=="function")){typeof i!="function"&&i!==null&&(n in t?t[n]=null:t.hasAttribute(n)&&t.removeAttribute(n)),t.addEventListener(e,s,r);break e}n in t?t[n]=s:s===!0?t.setAttribute(n,""):ug(t,n,s)}}}function rs(t,e,n){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ht("error",t),ht("load",t);var s=!1,r=!1,i;for(i in n)if(n.hasOwnProperty(i)){var a=n[i];if(a!=null)switch(i){case"src":s=!0;break;case"srcSet":r=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(ae(137,e));default:Et(t,e,i,a,n,null)}}r&&Et(t,e,"srcSet",n.srcSet,n,null),s&&Et(t,e,"src",n.src,n,null);return;case"input":ht("invalid",t);var o=i=a=r=null,l=null,u=null;for(s in n)if(n.hasOwnProperty(s)){var c=n[s];if(c!=null)switch(s){case"name":r=c;break;case"type":a=c;break;case"checked":l=c;break;case"defaultChecked":u=c;break;case"value":i=c;break;case"defaultValue":o=c;break;case"children":case"dangerouslySetInnerHTML":if(c!=null)throw Error(ae(137,e));break;default:Et(t,e,s,c,n,null)}}SE(t,i,o,l,u,a,r,!1),Fg(t);return;case"select":ht("invalid",t),s=a=i=null;for(r in n)if(n.hasOwnProperty(r)&&(o=n[r],o!=null))switch(r){case"value":i=o;break;case"defaultValue":a=o;break;case"multiple":s=o;default:Et(t,e,r,o,n,null)}e=i,n=a,t.multiple=!!s,e!=null?qu(t,!!s,e,!1):n!=null&&qu(t,!!s,n,!0);return;case"textarea":ht("invalid",t),i=r=s=null;for(a in n)if(n.hasOwnProperty(a)&&(o=n[a],o!=null))switch(a){case"value":s=o;break;case"defaultValue":r=o;break;case"children":i=o;break;case"dangerouslySetInnerHTML":if(o!=null)throw Error(ae(91));break;default:Et(t,e,a,o,n,null)}kE(t,s,r,i),Fg(t);return;case"option":for(l in n)if(n.hasOwnProperty(l)&&(s=n[l],s!=null))switch(l){case"selected":t.selected=s&&typeof s!="function"&&typeof s!="symbol";break;default:Et(t,e,l,s,n,null)}return;case"dialog":ht("cancel",t),ht("close",t);break;case"iframe":case"object":ht("load",t);break;case"video":case"audio":for(s=0;s<of.length;s++)ht(of[s],t);break;case"image":ht("error",t),ht("load",t);break;case"details":ht("toggle",t);break;case"embed":case"source":case"link":ht("error",t),ht("load",t);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(u in n)if(n.hasOwnProperty(u)&&(s=n[u],s!=null))switch(u){case"children":case"dangerouslySetInnerHTML":throw Error(ae(137,e));default:Et(t,e,u,s,n,null)}return;default:if(n2(e)){for(c in n)n.hasOwnProperty(c)&&(s=n[c],s!==void 0&&_w(t,e,c,s,n,void 0));return}}for(o in n)n.hasOwnProperty(o)&&(s=n[o],s!=null&&Et(t,e,o,s,n,null))}function G4(t,e,n,s){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var r=null,i=null,a=null,o=null,l=null,u=null,c=null;for(f in n){var h=n[f];if(n.hasOwnProperty(f)&&h!=null)switch(f){case"checked":break;case"value":break;case"defaultValue":l=h;default:s.hasOwnProperty(f)||Et(t,e,f,null,s,h)}}for(var d in s){var f=s[d];if(h=n[d],s.hasOwnProperty(d)&&(f!=null||h!=null))switch(d){case"type":i=f;break;case"name":r=f;break;case"checked":u=f;break;case"defaultChecked":c=f;break;case"value":a=f;break;case"defaultValue":o=f;break;case"children":case"dangerouslySetInnerHTML":if(f!=null)throw Error(ae(137,e));break;default:f!==h&&Et(t,e,d,f,s,h)}}nw(t,a,o,l,u,c,i,r);return;case"select":f=a=o=d=null;for(i in n)if(l=n[i],n.hasOwnProperty(i)&&l!=null)switch(i){case"value":break;case"multiple":f=l;default:s.hasOwnProperty(i)||Et(t,e,i,null,s,l)}for(r in s)if(i=s[r],l=n[r],s.hasOwnProperty(r)&&(i!=null||l!=null))switch(r){case"value":d=i;break;case"defaultValue":o=i;break;case"multiple":a=i;default:i!==l&&Et(t,e,r,i,s,l)}e=o,n=a,s=f,d!=null?qu(t,!!n,d,!1):!!s!=!!n&&(e!=null?qu(t,!!n,e,!0):qu(t,!!n,n?[]:"",!1));return;case"textarea":f=d=null;for(o in n)if(r=n[o],n.hasOwnProperty(o)&&r!=null&&!s.hasOwnProperty(o))switch(o){case"value":break;case"children":break;default:Et(t,e,o,null,s,r)}for(a in s)if(r=s[a],i=n[a],s.hasOwnProperty(a)&&(r!=null||i!=null))switch(a){case"value":d=r;break;case"defaultValue":f=r;break;case"children":break;case"dangerouslySetInnerHTML":if(r!=null)throw Error(ae(91));break;default:r!==i&&Et(t,e,a,r,s,i)}CE(t,d,f);return;case"option":for(var p in n)if(d=n[p],n.hasOwnProperty(p)&&d!=null&&!s.hasOwnProperty(p))switch(p){case"selected":t.selected=!1;break;default:Et(t,e,p,null,s,d)}for(l in s)if(d=s[l],f=n[l],s.hasOwnProperty(l)&&d!==f&&(d!=null||f!=null))switch(l){case"selected":t.selected=d&&typeof d!="function"&&typeof d!="symbol";break;default:Et(t,e,l,d,s,f)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var m in n)d=n[m],n.hasOwnProperty(m)&&d!=null&&!s.hasOwnProperty(m)&&Et(t,e,m,null,s,d);for(u in s)if(d=s[u],f=n[u],s.hasOwnProperty(u)&&d!==f&&(d!=null||f!=null))switch(u){case"children":case"dangerouslySetInnerHTML":if(d!=null)throw Error(ae(137,e));break;default:Et(t,e,u,d,s,f)}return;default:if(n2(e)){for(var g in n)d=n[g],n.hasOwnProperty(g)&&d!==void 0&&!s.hasOwnProperty(g)&&_w(t,e,g,void 0,s,d);for(c in s)d=s[c],f=n[c],!s.hasOwnProperty(c)||d===f||d===void 0&&f===void 0||_w(t,e,c,d,s,f);return}}for(var y in n)d=n[y],n.hasOwnProperty(y)&&d!=null&&!s.hasOwnProperty(y)&&Et(t,e,y,null,s,d);for(h in s)d=s[h],f=n[h],!s.hasOwnProperty(h)||d===f||d==null&&f==null||Et(t,e,h,d,s,f)}var Ow=null,Fw=null;function Jg(t){return t.nodeType===9?t:t.ownerDocument}function H$(t){switch(t){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function wA(t,e){if(t===0)switch(e){case"svg":return 1;case"math":return 2;default:return 0}return t===1&&e==="foreignObject"?0:t}function zw(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.children=="bigint"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var g1=null;function H4(){var t=window.event;return t&&t.type==="popstate"?t===g1?!1:(g1=t,!0):(g1=null,!1)}var vA=typeof setTimeout=="function"?setTimeout:void 0,j4=typeof clearTimeout=="function"?clearTimeout:void 0,j$=typeof Promise=="function"?Promise:void 0,q4=typeof queueMicrotask=="function"?queueMicrotask:typeof j$<"u"?function(t){return j$.resolve(null).then(t).catch(X4)}:vA;function X4(t){setTimeout(function(){throw t})}function y1(t,e){var n=e,s=0;do{var r=n.nextSibling;if(t.removeChild(n),r&&r.nodeType===8)if(n=r.data,n==="/$"){if(s===0){t.removeChild(r),ff(e);return}s--}else n!=="$"&&n!=="$?"&&n!=="$!"||s++;n=r}while(n);ff(e)}function Lw(t){var e=t.firstChild;for(e&&e.nodeType===10&&(e=e.nextSibling);e;){var n=e;switch(e=e.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":Lw(n),t2(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(n.rel.toLowerCase()==="stylesheet")continue}t.removeChild(n)}}function K4(t,e,n,s){for(;t.nodeType===1;){var r=n;if(t.nodeName.toLowerCase()!==e.toLowerCase()){if(!s&&(t.nodeName!=="INPUT"||t.type!=="hidden"))break}else if(s){if(!t[Jd])switch(e){case"meta":if(!t.hasAttribute("itemprop"))break;return t;case"link":if(i=t.getAttribute("rel"),i==="stylesheet"&&t.hasAttribute("data-precedence"))break;if(i!==r.rel||t.getAttribute("href")!==(r.href==null?null:r.href)||t.getAttribute("crossorigin")!==(r.crossOrigin==null?null:r.crossOrigin)||t.getAttribute("title")!==(r.title==null?null:r.title))break;return t;case"style":if(t.hasAttribute("data-precedence"))break;return t;case"script":if(i=t.getAttribute("src"),(i!==(r.src==null?null:r.src)||t.getAttribute("type")!==(r.type==null?null:r.type)||t.getAttribute("crossorigin")!==(r.crossOrigin==null?null:r.crossOrigin))&&i&&t.hasAttribute("async")&&!t.hasAttribute("itemprop"))break;return t;default:return t}}else if(e==="input"&&t.type==="hidden"){var i=r.name==null?null:""+r.name;if(r.type==="hidden"&&t.getAttribute("name")===i)return t}else return t;if(t=oi(t.nextSibling),t===null)break}return null}function Y4(t,e,n){if(e==="")return null;for(;t.nodeType!==3;)if((t.nodeType!==1||t.nodeName!=="INPUT"||t.type!=="hidden")&&!n||(t=oi(t.nextSibling),t===null))return null;return t}function oi(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?"||e==="F!"||e==="F")break;if(e==="/$")return null}}return t}function q$(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}function SA(t,e,n){switch(e=Jg(n),t){case"html":if(t=e.documentElement,!t)throw Error(ae(452));return t;case"head":if(t=e.head,!t)throw Error(ae(453));return t;case"body":if(t=e.body,!t)throw Error(ae(454));return t;default:throw Error(ae(451))}}var jr=new Map,X$=new Set;function ey(t){return typeof t.getRootNode=="function"?t.getRootNode():t.ownerDocument}var Da=qt.d;qt.d={f:Q4,r:Z4,D:J4,C:eV,L:tV,m:nV,X:rV,S:sV,M:iV};function Q4(){var t=Da.f(),e=tx();return t||e}function Z4(t){var e=Dc(t);e!==null&&e.tag===5&&e.type==="form"?SR(e):Da.r(t)}var Oc=typeof document>"u"?null:document;function CA(t,e,n){var s=Oc;if(s&&typeof e=="string"&&e){var r=Ar(e);r='link[rel="'+t+'"][href="'+r+'"]',typeof n=="string"&&(r+='[crossorigin="'+n+'"]'),X$.has(r)||(X$.add(r),t={rel:t,crossOrigin:n,href:e},s.querySelector(r)===null&&(e=s.createElement("link"),rs(e,"link",t),Gn(e),s.head.appendChild(e)))}}function J4(t){Da.D(t),CA("dns-prefetch",t,null)}function eV(t,e){Da.C(t,e),CA("preconnect",t,e)}function tV(t,e,n){Da.L(t,e,n);var s=Oc;if(s&&t&&e){var r='link[rel="preload"][as="'+Ar(e)+'"]';e==="image"&&n&&n.imageSrcSet?(r+='[imagesrcset="'+Ar(n.imageSrcSet)+'"]',typeof n.imageSizes=="string"&&(r+='[imagesizes="'+Ar(n.imageSizes)+'"]')):r+='[href="'+Ar(t)+'"]';var i=r;switch(e){case"style":i=pc(t);break;case"script":i=Fc(t)}jr.has(i)||(t=Kt({rel:"preload",href:e==="image"&&n&&n.imageSrcSet?void 0:t,as:e},n),jr.set(i,t),s.querySelector(r)!==null||e==="style"&&s.querySelector(Hf(i))||e==="script"&&s.querySelector(jf(i))||(e=s.createElement("link"),rs(e,"link",t),Gn(e),s.head.appendChild(e)))}}function nV(t,e){Da.m(t,e);var n=Oc;if(n&&t){var s=e&&typeof e.as=="string"?e.as:"script",r='link[rel="modulepreload"][as="'+Ar(s)+'"][href="'+Ar(t)+'"]',i=r;switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":i=Fc(t)}if(!jr.has(i)&&(t=Kt({rel:"modulepreload",href:t},e),jr.set(i,t),n.querySelector(r)===null)){switch(s){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(jf(i)))return}s=n.createElement("link"),rs(s,"link",t),Gn(s),n.head.appendChild(s)}}}function sV(t,e,n){Da.S(t,e,n);var s=Oc;if(s&&t){var r=ju(s).hoistableStyles,i=pc(t);e=e||"default";var a=r.get(i);if(!a){var o={loading:0,preload:null};if(a=s.querySelector(Hf(i)))o.loading=5;else{t=Kt({rel:"stylesheet",href:t,"data-precedence":e},n),(n=jr.get(i))&&P2(t,n);var l=a=s.createElement("link");Gn(l),rs(l,"link",t),l._p=new Promise(function(u,c){l.onload=u,l.onerror=c}),l.addEventListener("load",function(){o.loading|=1}),l.addEventListener("error",function(){o.loading|=2}),o.loading|=4,xg(a,e,s)}a={type:"stylesheet",instance:a,count:1,state:o},r.set(i,a)}}}function rV(t,e){Da.X(t,e);var n=Oc;if(n&&t){var s=ju(n).hoistableScripts,r=Fc(t),i=s.get(r);i||(i=n.querySelector(jf(r)),i||(t=Kt({src:t,async:!0},e),(e=jr.get(r))&&M2(t,e),i=n.createElement("script"),Gn(i),rs(i,"link",t),n.head.appendChild(i)),i={type:"script",instance:i,count:1,state:null},s.set(r,i))}}function iV(t,e){Da.M(t,e);var n=Oc;if(n&&t){var s=ju(n).hoistableScripts,r=Fc(t),i=s.get(r);i||(i=n.querySelector(jf(r)),i||(t=Kt({src:t,async:!0,type:"module"},e),(e=jr.get(r))&&M2(t,e),i=n.createElement("script"),Gn(i),rs(i,"link",t),n.head.appendChild(i)),i={type:"script",instance:i,count:1,state:null},s.set(r,i))}}function K$(t,e,n,s){var r=(r=to.current)?ey(r):null;if(!r)throw Error(ae(446));switch(t){case"meta":case"title":return null;case"style":return typeof n.precedence=="string"&&typeof n.href=="string"?(e=pc(n.href),n=ju(r).hoistableStyles,s=n.get(e),s||(s={type:"style",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};case"link":if(n.rel==="stylesheet"&&typeof n.href=="string"&&typeof n.precedence=="string"){t=pc(n.href);var i=ju(r).hoistableStyles,a=i.get(t);if(a||(r=r.ownerDocument||r,a={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},i.set(t,a),(i=r.querySelector(Hf(t)))&&!i._p&&(a.instance=i,a.state.loading=5),jr.has(t)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},jr.set(t,n),i||aV(r,t,n,a.state))),e&&s===null)throw Error(ae(528,""));return a}if(e&&s!==null)throw Error(ae(529,""));return null;case"script":return e=n.async,n=n.src,typeof n=="string"&&e&&typeof e!="function"&&typeof e!="symbol"?(e=Fc(n),n=ju(r).hoistableScripts,s=n.get(e),s||(s={type:"script",instance:null,count:0,state:null},n.set(e,s)),s):{type:"void",instance:null,count:0,state:null};default:throw Error(ae(444,t))}}function pc(t){return'href="'+Ar(t)+'"'}function Hf(t){return'link[rel="stylesheet"]['+t+"]"}function kA(t){return Kt({},t,{"data-precedence":t.precedence,precedence:null})}function aV(t,e,n,s){t.querySelector('link[rel="preload"][as="style"]['+e+"]")?s.loading=1:(e=t.createElement("link"),s.preload=e,e.addEventListener("load",function(){return s.loading|=1}),e.addEventListener("error",function(){return s.loading|=2}),rs(e,"link",n),Gn(e),t.head.appendChild(e))}function Fc(t){return'[src="'+Ar(t)+'"]'}function jf(t){return"script[async]"+t}function Y$(t,e,n){if(e.count++,e.instance===null)switch(e.type){case"style":var s=t.querySelector('style[data-href~="'+Ar(n.href)+'"]');if(s)return e.instance=s,Gn(s),s;var r=Kt({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return s=(t.ownerDocument||t).createElement("style"),Gn(s),rs(s,"style",r),xg(s,n.precedence,t),e.instance=s;case"stylesheet":r=pc(n.href);var i=t.querySelector(Hf(r));if(i)return e.state.loading|=4,e.instance=i,Gn(i),i;s=kA(n),(r=jr.get(r))&&P2(s,r),i=(t.ownerDocument||t).createElement("link"),Gn(i);var a=i;return a._p=new Promise(function(o,l){a.onload=o,a.onerror=l}),rs(i,"link",s),e.state.loading|=4,xg(i,n.precedence,t),e.instance=i;case"script":return i=Fc(n.src),(r=t.querySelector(jf(i)))?(e.instance=r,Gn(r),r):(s=n,(r=jr.get(i))&&(s=Kt({},n),M2(s,r)),t=t.ownerDocument||t,r=t.createElement("script"),Gn(r),rs(r,"link",s),t.head.appendChild(r),e.instance=r);case"void":return null;default:throw Error(ae(443,e.type))}else e.type==="stylesheet"&&!(e.state.loading&4)&&(s=e.instance,e.state.loading|=4,xg(s,n.precedence,t));return e.instance}function xg(t,e,n){for(var s=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),r=s.length?s[s.length-1]:null,i=r,a=0;a<s.length;a++){var o=s[a];if(o.dataset.precedence===e)i=o;else if(i!==r)break}i?i.parentNode.insertBefore(t,i.nextSibling):(e=n.nodeType===9?n.head:n,e.insertBefore(t,e.firstChild))}function P2(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.title==null&&(t.title=e.title)}function M2(t,e){t.crossOrigin==null&&(t.crossOrigin=e.crossOrigin),t.referrerPolicy==null&&(t.referrerPolicy=e.referrerPolicy),t.integrity==null&&(t.integrity=e.integrity)}var bg=null;function Q$(t,e,n){if(bg===null){var s=new Map,r=bg=new Map;r.set(n,s)}else r=bg,s=r.get(n),s||(s=new Map,r.set(n,s));if(s.has(t))return s;for(s.set(t,null),n=n.getElementsByTagName(t),r=0;r<n.length;r++){var i=n[r];if(!(i[Jd]||i[ps]||t==="link"&&i.getAttribute("rel")==="stylesheet")&&i.namespaceURI!=="http://www.w3.org/2000/svg"){var a=i.getAttribute(e)||"";a=t+a;var o=s.get(a);o?o.push(i):s.set(a,[i])}}return s}function Z$(t,e,n){t=t.ownerDocument||t,t.head.insertBefore(n,e==="title"?t.querySelector("head > title"):null)}function oV(t,e,n){if(n===1||e.itemProp!=null)return!1;switch(t){case"meta":case"title":return!0;case"style":if(typeof e.precedence!="string"||typeof e.href!="string"||e.href==="")break;return!0;case"link":if(typeof e.rel!="string"||typeof e.href!="string"||e.href===""||e.onLoad||e.onError)break;switch(e.rel){case"stylesheet":return t=e.disabled,typeof e.precedence=="string"&&t==null;default:return!0}case"script":if(e.async&&typeof e.async!="function"&&typeof e.async!="symbol"&&!e.onLoad&&!e.onError&&e.src&&typeof e.src=="string")return!0}return!1}function $A(t){return!(t.type==="stylesheet"&&!(t.state.loading&3))}var uf=null;function lV(){}function uV(t,e,n){if(uf===null)throw Error(ae(475));var s=uf;if(e.type==="stylesheet"&&(typeof n.media!="string"||matchMedia(n.media).matches!==!1)&&!(e.state.loading&4)){if(e.instance===null){var r=pc(n.href),i=t.querySelector(Hf(r));if(i){t=i._p,t!==null&&typeof t=="object"&&typeof t.then=="function"&&(s.count++,s=ty.bind(s),t.then(s,s)),e.state.loading|=4,e.instance=i,Gn(i);return}i=t.ownerDocument||t,n=kA(n),(r=jr.get(r))&&P2(n,r),i=i.createElement("link"),Gn(i);var a=i;a._p=new Promise(function(o,l){a.onload=o,a.onerror=l}),rs(i,"link",n),e.instance=i}s.stylesheets===null&&(s.stylesheets=new Map),s.stylesheets.set(e,t),(t=e.state.preload)&&!(e.state.loading&3)&&(s.count++,e=ty.bind(s),t.addEventListener("load",e),t.addEventListener("error",e))}}function cV(){if(uf===null)throw Error(ae(475));var t=uf;return t.stylesheets&&t.count===0&&Pw(t,t.stylesheets),0<t.count?function(e){var n=setTimeout(function(){if(t.stylesheets&&Pw(t,t.stylesheets),t.unsuspend){var s=t.unsuspend;t.unsuspend=null,s()}},6e4);return t.unsuspend=e,function(){t.unsuspend=null,clearTimeout(n)}}:null}function ty(){if(this.count--,this.count===0){if(this.stylesheets)Pw(this,this.stylesheets);else if(this.unsuspend){var t=this.unsuspend;this.unsuspend=null,t()}}}var ny=null;function Pw(t,e){t.stylesheets=null,t.unsuspend!==null&&(t.count++,ny=new Map,e.forEach(hV,t),ny=null,ty.call(t))}function hV(t,e){if(!(e.state.loading&4)){var n=ny.get(t);if(n)var s=n.get(null);else{n=new Map,ny.set(t,n);for(var r=t.querySelectorAll("link[data-precedence],style[data-precedence]"),i=0;i<r.length;i++){var a=r[i];(a.nodeName==="LINK"||a.getAttribute("media")!=="not all")&&(n.set(a.dataset.precedence,a),s=a)}s&&n.set(null,s)}r=e.instance,a=r.getAttribute("data-precedence"),i=n.get(a)||s,i===s&&n.set(null,r),n.set(a,r),this.count++,s=ty.bind(this),r.addEventListener("load",s),r.addEventListener("error",s),i?i.parentNode.insertBefore(r,i.nextSibling):(t=t.nodeType===9?t.head:t,t.insertBefore(r,t.firstChild)),e.state.loading|=4}}var cf={$$typeof:ma,Provider:null,Consumer:null,_currentValue:dl,_currentValue2:dl,_threadCount:0};function dV(t,e,n,s,r,i,a,o){this.tag=1,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=U0(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=U0(0),this.hiddenUpdates=U0(null),this.identifierPrefix=s,this.onUncaughtError=r,this.onCaughtError=i,this.onRecoverableError=a,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=o,this.incompleteTransitions=new Map}function NA(t,e,n,s,r,i,a,o,l,u,c,h){return t=new dV(t,e,n,a,o,l,u,h),e=1,i===!0&&(e|=24),i=Or(3,null,null,e),t.current=i,i.stateNode=t,e=f2(),e.refCount++,t.pooledCache=e,e.refCount++,i.memoizedState={element:s,isDehydrated:n,cache:e},T2(i),t}function IA(t){return t?(t=Vu,t):Vu}function TA(t,e,n,s,r,i){r=IA(r),s.context===null?s.context=r:s.pendingContext=r,s=no(e),s.payload={element:n},i=i===void 0?null:i,i!==null&&(s.callback=i),n=so(t,s,e),n!==null&&(Ns(n,t,e),Vd(n,t,e))}function J$(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function B2(t,e){J$(t,e),(t=t.alternate)&&J$(t,e)}function EA(t){if(t.tag===13){var e=fo(t,67108864);e!==null&&Ns(e,t,67108864),B2(t,67108864)}}var sy=!0;function fV(t,e,n,s){var r=Ze.T;Ze.T=null;var i=qt.p;try{qt.p=2,V2(t,e,n,s)}finally{qt.p=i,Ze.T=r}}function pV(t,e,n,s){var r=Ze.T;Ze.T=null;var i=qt.p;try{qt.p=8,V2(t,e,n,s)}finally{qt.p=i,Ze.T=r}}function V2(t,e,n,s){if(sy){var r=Mw(s);if(r===null)m1(t,e,s,ry,n),eN(t,s);else if(gV(r,t,e,n,s))s.stopPropagation();else if(eN(t,s),e&4&&-1<mV.indexOf(t)){for(;r!==null;){var i=Dc(r);if(i!==null)switch(i.tag){case 3:if(i=i.stateNode,i.current.memoizedState.isDehydrated){var a=Ko(i.pendingLanes);if(a!==0){var o=i;for(o.pendingLanes|=2,o.entangledLanes|=2;a;){var l=1<<31-or(a);o.entanglements[1]|=l,a&=~l}Zi(i),!(sn&6)&&(Xg=Mi()+500,Gf(0))}}break;case 13:o=fo(i,2),o!==null&&Ns(o,i,2),tx(),B2(i,2)}if(i=Mw(s),i===null&&m1(t,e,s,ry,n),i===r)break;r=i}r!==null&&s.stopPropagation()}else m1(t,e,s,null,n)}}function Mw(t){return t=s2(t),U2(t)}var ry=null;function U2(t){if(ry=null,t=il(t),t!==null){var e=Rc(t);if(e===null)t=null;else{var n=e.tag;if(n===13){if(t=oE(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null)}}return ry=t,null}function RA(t){switch(t){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(eB()){case uE:return 2;case cE:return 8;case Og:case tB:return 32;case hE:return 268435456;default:return 32}default:return 32}}var Bw=!1,ao=null,oo=null,lo=null,hf=new Map,df=new Map,Xa=[],mV="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function eN(t,e){switch(t){case"focusin":case"focusout":ao=null;break;case"dragenter":case"dragleave":oo=null;break;case"mouseover":case"mouseout":lo=null;break;case"pointerover":case"pointerout":hf.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":df.delete(e.pointerId)}}function fd(t,e,n,s,r,i){return t===null||t.nativeEvent!==i?(t={blockedOn:e,domEventName:n,eventSystemFlags:s,nativeEvent:i,targetContainers:[r]},e!==null&&(e=Dc(e),e!==null&&EA(e)),t):(t.eventSystemFlags|=s,e=t.targetContainers,r!==null&&e.indexOf(r)===-1&&e.push(r),t)}function gV(t,e,n,s,r){switch(e){case"focusin":return ao=fd(ao,t,e,n,s,r),!0;case"dragenter":return oo=fd(oo,t,e,n,s,r),!0;case"mouseover":return lo=fd(lo,t,e,n,s,r),!0;case"pointerover":var i=r.pointerId;return hf.set(i,fd(hf.get(i)||null,t,e,n,s,r)),!0;case"gotpointercapture":return i=r.pointerId,df.set(i,fd(df.get(i)||null,t,e,n,s,r)),!0}return!1}function AA(t){var e=il(t.target);if(e!==null){var n=Rc(e);if(n!==null){if(e=n.tag,e===13){if(e=oE(n),e!==null){t.blockedOn=e,cB(t.priority,function(){if(n.tag===13){var s=lr(),r=fo(n,s);r!==null&&Ns(r,n,s),B2(n,s)}});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function wg(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Mw(t.nativeEvent);if(n===null){n=t.nativeEvent;var s=new n.constructor(n.type,n);rw=s,n.target.dispatchEvent(s),rw=null}else return e=Dc(n),e!==null&&EA(e),t.blockedOn=n,!1;e.shift()}return!0}function tN(t,e,n){wg(t)&&n.delete(e)}function yV(){Bw=!1,ao!==null&&wg(ao)&&(ao=null),oo!==null&&wg(oo)&&(oo=null),lo!==null&&wg(lo)&&(lo=null),hf.forEach(tN),df.forEach(tN)}function Hm(t,e){t.blockedOn===e&&(t.blockedOn=null,Bw||(Bw=!0,Bn.unstable_scheduleCallback(Bn.unstable_NormalPriority,yV)))}var jm=null;function nN(t){jm!==t&&(jm=t,Bn.unstable_scheduleCallback(Bn.unstable_NormalPriority,function(){jm===t&&(jm=null);for(var e=0;e<t.length;e+=3){var n=t[e],s=t[e+1],r=t[e+2];if(typeof s!="function"){if(U2(s||n)===null)continue;break}var i=Dc(n);i!==null&&(t.splice(e,3),e-=3,pw(i,{pending:!0,data:r,method:n.method,action:s},s,r))}}))}function ff(t){function e(l){return Hm(l,t)}ao!==null&&Hm(ao,t),oo!==null&&Hm(oo,t),lo!==null&&Hm(lo,t),hf.forEach(e),df.forEach(e);for(var n=0;n<Xa.length;n++){var s=Xa[n];s.blockedOn===t&&(s.blockedOn=null)}for(;0<Xa.length&&(n=Xa[0],n.blockedOn===null);)AA(n),n.blockedOn===null&&Xa.shift();if(n=(t.ownerDocument||t).$$reactFormReplay,n!=null)for(s=0;s<n.length;s+=3){var r=n[s],i=n[s+1],a=r[Gs]||null;if(typeof i=="function")a||nN(n);else if(a){var o=null;if(i&&i.hasAttribute("formAction")){if(r=i,a=i[Gs]||null)o=a.formAction;else if(U2(r)!==null)continue}else o=a.action;typeof o=="function"?n[s+1]=o:(n.splice(s,3),s-=3),nN(n)}}}function W2(t){this._internalRoot=t}rx.prototype.render=W2.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(ae(409));var n=e.current,s=lr();TA(n,s,t,e,null,null)};rx.prototype.unmount=W2.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;t.tag===0&&Ju(),TA(t.current,2,null,t,null,null),tx(),e[Ac]=null}};function rx(t){this._internalRoot=t}rx.prototype.unstable_scheduleHydration=function(t){if(t){var e=yE();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Xa.length&&e!==0&&e<Xa[n].priority;n++);Xa.splice(n,0,t),n===0&&AA(t)}};var sN=nE.version;if(sN!=="19.0.0")throw Error(ae(527,sN,"19.0.0"));qt.findDOMNode=function(t){var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(ae(188)):(t=Object.keys(t).join(","),Error(ae(268,t)));return t=QM(e),t=t!==null?lE(t):null,t=t===null?null:t.stateNode,t};var xV={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:Ze,findFiberByHostInstance:il,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var qm=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!qm.isDisabled&&qm.supportsFiber)try{Ff=qm.inject(xV),ar=qm}catch{}}Wy.createRoot=function(t,e){if(!sE(t))throw Error(ae(299));var n=!1,s="",r=TR,i=ER,a=RR,o=null;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onUncaughtError!==void 0&&(r=e.onUncaughtError),e.onCaughtError!==void 0&&(i=e.onCaughtError),e.onRecoverableError!==void 0&&(a=e.onRecoverableError),e.unstable_transitionCallbacks!==void 0&&(o=e.unstable_transitionCallbacks)),e=NA(t,1,!1,null,null,n,s,r,i,a,o,null),t[Ac]=e.current,L2(t.nodeType===8?t.parentNode:t),new W2(e)};Wy.hydrateRoot=function(t,e,n){if(!sE(t))throw Error(ae(299));var s=!1,r="",i=TR,a=ER,o=RR,l=null,u=null;return n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(r=n.identifierPrefix),n.onUncaughtError!==void 0&&(i=n.onUncaughtError),n.onCaughtError!==void 0&&(a=n.onCaughtError),n.onRecoverableError!==void 0&&(o=n.onRecoverableError),n.unstable_transitionCallbacks!==void 0&&(l=n.unstable_transitionCallbacks),n.formState!==void 0&&(u=n.formState)),e=NA(t,1,!0,e,n??null,s,r,i,a,o,l,u),e.context=IA(null),n=e.current,s=lr(),r=no(s),r.callback=null,so(n,r,s),e.current.lanes=s,Lf(e,s),Zi(e),t[Ac]=e.current,L2(t),new rx(e)};Wy.version="19.0.0";function DA(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(DA)}catch(t){console.error(t)}}DA(),YT.exports=Wy;var bV=YT.exports;const wV=jv(bV),nr={LEFT:"left",RIGHT:"right",NONE:"none"},vV=3,SV=30,CV=200,kV=1e3/60,vg=.25,$V=0;class rN{constructor(){this.index=0,this.buffer=new Array(CV).fill(null)}addData(e){this.buffer[this.index]=e,this.index=(this.index+1)%this.buffer.length}getMovingAverage(e,n){const s=[];for(let a=0;a<e;a++){const o=(this.index-1-a+this.buffer.length)%this.buffer.length,l=this.buffer[o];l!==null&&!isNaN(l)&&s.unshift(l)}const r=s.length,i=e;return{average:r>=n?s.reduce((a,o)=>a+o,0)/r:null,validCount:r,totalCount:i}}}const iN={side:nr.NONE,angle:null,averageAngle:null,confidence:null,kneePoints:{}},NV=180/Math.PI,IV=t=>{var n,s,r;return[(n=t.hip)==null?void 0:n.score,(s=t.knee)==null?void 0:s.score,(r=t.ankle)==null?void 0:r.score].filter(i=>typeof i=="number").reduce((i,a)=>i+a,0)};class TV{constructor(e,n){this.minimumConfidence=e,this.minimumDistanceRatio=n,this.leftAverager=new rN,this.rightAverager=new rN}calculateDualMetrics(e){return{left:this.calculateKneeMetrics(e,nr.LEFT),right:this.calculateKneeMetrics(e,nr.RIGHT)}}calculateKneeMetrics(e,n){if(n!==nr.LEFT&&n!==nr.RIGHT)return console.warn("Invalid knee side"),{side:n,angle:null,averageAngle:null,confidence:0,kneePoints:{}};const s=e.keypoints.filter(u=>(u.score||0)>this.minimumConfidence);let r={};if(n===nr.LEFT?r={hip:s.find(u=>u.name==="left_hip"),knee:s.find(u=>u.name==="left_knee"),ankle:s.find(u=>u.name==="left_ankle"),nose:s.find(u=>u.name==="nose")}:n===nr.RIGHT&&(r={hip:s.find(u=>u.name==="right_hip"),knee:s.find(u=>u.name==="right_knee"),ankle:s.find(u=>u.name==="right_ankle"),nose:s.find(u=>u.name==="nose")}),!r.hip||!r.knee||!r.ankle)return{side:n,angle:null,averageAngle:null,confidence:0,kneePoints:{}};const i=IV(r),a=this.calculateKneeAngle(r),o=n===nr.LEFT?this.leftAverager:this.rightAverager;o.addData(a);const l=o.getMovingAverage(SV,vV).average;return{side:n,angle:a,averageAngle:l,confidence:i,kneePoints:r}}calculateKneeAngle(e){const n=e.hip,s=e.knee,r=e.ankle;if(!n||!s||!r)return null;const i={x:s.x-n.x,y:s.y-n.y},a={x:s.x-r.x,y:s.y-r.y},o=i.x*a.x+i.y*a.y,l=Math.sqrt(i.x**2+i.y**2),u=Math.sqrt(a.x**2+a.y**2);if(l===0||u===0)return null;const h=180-Math.acos(o/(l*u))*NV;if(h>170)return null;const d=this.calculateDistance(n.x,n.y,s.x,s.y),f=this.calculateDistance(s.x,s.y,r.x,r.y);return Math.min(d,f)/Math.max(d,f)>=this.minimumDistanceRatio?h:null}calculateDistance(e,n,s,r){const i=s-e,a=r-n;return Math.sqrt(i*i+a*a)}}let Xd=null,Sg=!1,Vw=null;const EV=(t,e)=>(Xd||(Xd=new TV(t,e)),Xd),RV=async(t,e)=>{if(!t||t.readyState<HTMLMediaElement.HAVE_CURRENT_DATA)return null;if(!Xd)throw new Error("Tracker not initialized");try{const n=await e.estimatePoses(t);return n.length>0?Xd.calculateDualMetrics(n[0]):null}catch(n){throw console.error("Pose detection error:",n),n}};let Kd=null;const AV=(t,e,n)=>{Cg(),Sg=!0;const s=async()=>{if(Sg)try{if(t.current){const r=await RV(t.current,e);r&&n(r)}}catch(r){console.error("Frame processing error:",r)}finally{Sg&&(Kd=requestAnimationFrame(s))}};return Kd=requestAnimationFrame(s),Vw=Promise.resolve(),Vw},Cg=()=>{Sg=!1,Kd!==null&&(cancelAnimationFrame(Kd),Kd=null),Vw=null};function DV(t,e,n,s,r,i){const[a,o]=Je.useState(iN),l=Je.useRef(s),u=Je.useRef(0),c=Je.useRef(iN),h=Je.useRef(s);return Je.useEffect(()=>(EV(vg,$V),()=>{Cg()}),[]),Je.useEffect(()=>{l.current=s},[s]),Je.useEffect(()=>{if(!e){console.warn("Pose detector not initialized");return}if(n!=="ready"&&n!=="capturing"){console.log(`App status is ${n}, stopping pose detection`),Cg();return}return console.log(`App status is ${n}, effect triggered`),AV(t,e,d=>{if(r){const m=_V(d.left,d.right);m!==h.current&&(h.current=m,i(m))}const f=r?h.current:l.current;c.current=d[f];const p=Date.now();p-u.current>kV&&(u.current=p,o(c.current))}),()=>{Cg()}},[n,e,t,r]),a}function _V(t,e){const n=t.confidence||0,s=e.confidence||0;return console.log(`Left knee confidence: ${n}, Right knee confidence: ${s}`),n>s?"left":"right"}var _A={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},aN=hl.createContext&&hl.createContext(_A),OV=["attr","size","title"];function FV(t,e){if(t==null)return{};var n=zV(t,e),s,r;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)s=i[r],!(e.indexOf(s)>=0)&&Object.prototype.propertyIsEnumerable.call(t,s)&&(n[s]=t[s])}return n}function zV(t,e){if(t==null)return{};var n={};for(var s in t)if(Object.prototype.hasOwnProperty.call(t,s)){if(e.indexOf(s)>=0)continue;n[s]=t[s]}return n}function iy(){return iy=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(t[s]=n[s])}return t},iy.apply(this,arguments)}function oN(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter(function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable})),n.push.apply(n,s)}return n}function ay(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?oN(Object(n),!0).forEach(function(s){LV(t,s,n[s])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):oN(Object(n)).forEach(function(s){Object.defineProperty(t,s,Object.getOwnPropertyDescriptor(n,s))})}return t}function LV(t,e,n){return e=PV(e),e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function PV(t){var e=MV(t,"string");return typeof e=="symbol"?e:e+""}function MV(t,e){if(typeof t!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var s=n.call(t,e);if(typeof s!="object")return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function OA(t){return t&&t.map((e,n)=>hl.createElement(e.tag,ay({key:n},e.attr),OA(e.child)))}function BV(t){return e=>hl.createElement(VV,iy({attr:ay({},t.attr)},e),OA(t.child))}function VV(t){var e=n=>{var{attr:s,size:r,title:i}=t,a=FV(t,OV),o=r||n.size||"1em",l;return n.className&&(l=n.className),t.className&&(l=(l?l+" ":"")+t.className),hl.createElement("svg",iy({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,s,a,{className:l,style:ay(ay({color:t.color||n.color},n.style),t.style),height:o,width:o,xmlns:"http://www.w3.org/2000/svg"}),i&&hl.createElement("title",null,i),t.children)};return aN!==void 0?hl.createElement(aN.Consumer,null,n=>e(n)):e(_A)}function UV(t){return BV({attr:{fill:"currentColor",viewBox:"0 0 16 16"},child:[{tag:"path",attr:{fillRule:"evenodd",d:"M11 1H5a1 1 0 0 0-1 1v6a.5.5 0 0 1-1 0V2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v6a.5.5 0 0 1-1 0V2a1 1 0 0 0-1-1m1 13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-2a.5.5 0 0 0-1 0v2a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2a.5.5 0 0 0-1 0zM1.713 7.954a.5.5 0 1 0-.419-.908c-.347.16-.654.348-.882.57C.184 7.842 0 8.139 0 8.5c0 .546.408.94.823 1.201.44.278 1.043.51 1.745.696C3.978 10.773 5.898 11 8 11q.148 0 .294-.002l-1.148 1.148a.5.5 0 0 0 .708.708l2-2a.5.5 0 0 0 0-.708l-2-2a.5.5 0 1 0-.708.708l1.145 1.144L8 10c-2.04 0-3.87-.221-5.174-.569-.656-.175-1.151-.374-1.47-.575C1.012 8.639 1 8.506 1 8.5c0-.003 0-.059.112-.17.115-.112.31-.242.6-.376Zm12.993-.908a.5.5 0 0 0-.419.908c.292.134.486.264.6.377.113.11.113.166.113.169s0 .065-.13.187c-.132.122-.352.26-.677.4-.645.28-1.596.523-2.763.687a.5.5 0 0 0 .14.99c1.212-.17 2.26-.43 3.02-.758.38-.164.713-.357.96-.587.246-.229.45-.537.45-.919 0-.362-.184-.66-.412-.883s-.535-.411-.882-.571M7.5 2a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z"},child:[]}]})(t)}const WV=({cameraFacingMode:t,handleFlip:e,status:n})=>Oe.jsx("button",{onClick:e,className:"app-button",title:`Switch to ${t==="user"?"Back":"Front"} Camera`,disabled:n!=="ready",children:Oe.jsx(UV,{size:24})}),GV=(t,e)=>t.cameraFacingMode===e.cameraFacingMode&&t.status===e.status&&t.handleFlip===e.handleFlip,HV=Je.memo(WV,GV),x1=(t,e,n,s)=>{const r=e.getBoundingClientRect();e.videoWidth/r.width,e.videoHeight/r.height;const i=t.x/e.videoWidth,a=t.y/e.videoHeight,{devicePixelRatio:o=1}=window;return{x:i*n.width/o,y:a*n.height/o}};function jV(t){const{width:e,height:n}=t.getBoundingClientRect();if(t.width!==e||t.height!==n){const{devicePixelRatio:s=1}=window,r=t.getContext("2d");return t.width=e*s,t.height=n*s,r.scale(s,s),!0}return!1}const qV=({videoRef:t,kneeMetrics:e,isFrontFacing:n})=>{const s=Je.useRef(null),r=Je.useCallback(i=>{var h,d,f;const a=i.canvas;if(jV(a),i.clearRect(0,0,a.width,a.height),!t.current||!e)return;const o=(h=e.kneePoints.hip)!=null&&h.score&&e.kneePoints.hip.score>vg?x1(e.kneePoints.hip,t.current,a):null,l=(d=e.kneePoints.knee)!=null&&d.score&&e.kneePoints.knee.score>vg?x1(e.kneePoints.knee,t.current,a):null,u=(f=e.kneePoints.ankle)!=null&&f.score&&e.kneePoints.ankle.score>vg?x1(e.kneePoints.ankle,t.current,a):null;[o,l,u].forEach((p,m)=>{if(!p)return;const g=new Path2D;g.arc(p.x,p.y,10,0,2*Math.PI),i.fillStyle="#00FF00",i.strokeStyle="#FFFFFF",i.fill(g),i.stroke(g)}),i.beginPath(),i.strokeStyle="#00FF00",i.lineWidth=3,o&&l&&(i.moveTo(o.x,o.y),i.lineTo(l.x,l.y)),l&&u&&(i.moveTo(l.x,l.y),i.lineTo(u.x,u.y)),i.stroke()},[e,t,n]);return Je.useEffect(()=>{const i=s.current;if(!i)return;const a=i.getContext("2d");if(!a)return;let o;const l=()=>{r(a),o=requestAnimationFrame(l)};return l(),()=>{window.cancelAnimationFrame(o)}},[r]),Oe.jsx("canvas",{ref:s,style:{width:"100%",height:"100%",transform:n?"scaleX(-1)":"none"}})},XV=({autoKneeSelection:t,currentKnee:e,handleAutoKneeSelectionChange:n,handleKneeChange:s})=>Oe.jsxs("div",{className:"knee-selection-container",children:[Oe.jsx("div",{className:"auto-knee-selection",children:Oe.jsxs("label",{style:{cursor:"pointer",display:"flex",alignItems:"center",gap:"5px"},children:[Oe.jsx("input",{type:"checkbox",checked:t,onChange:n,style:{cursor:"pointer",width:"16px",height:"32px",zIndex:100,position:"relative"}}),"Auto"]})}),Oe.jsx("div",{className:"knee-selection-compact",children:Oe.jsxs("div",{className:"toggle-group",children:[Oe.jsx("button",{className:e===nr.LEFT?"active":"",onClick:()=>s(nr.LEFT),disabled:t,style:{minWidth:"48px",minHeight:"48px",zIndex:105,opacity:t?.5:1},children:"L"}),Oe.jsx("button",{className:e===nr.RIGHT?"active":"",onClick:()=>s(nr.RIGHT),disabled:t,style:{minWidth:"48px",zIndex:105,minHeight:"48px",opacity:t?.5:1},children:"R"})]})})]}),KV=(t,e)=>t.autoKneeSelection===e.autoKneeSelection&&t.currentKnee===e.currentKnee&&t.handleAutoKneeSelectionChange===e.handleAutoKneeSelectionChange&&t.handleKneeChange===e.handleKneeChange,YV=Je.memo(XV,KV);let Uw=null;const QV=({currentAngle:t})=>(Je.useEffect(()=>{t!==null&&(Uw=t)}),Oe.jsxs("div",{className:"angle-display",children:[t===null?"-":Math.round(t),"°"]})),ZV=(t,e)=>{const n=t.currentAngle,s=e.currentAngle;return n===null||s===null?n===s:Uw!==null?Math.abs(s-Uw)<.5:!1},JV=Je.memo(QV,ZV),eU=({onClose:t})=>Oe.jsxs("div",{className:"history-preview",children:[Oe.jsxs("div",{className:"history-preview-content",children:[Oe.jsx("h3",{children:"Effort History"}),Oe.jsxs("table",{children:[Oe.jsx("thead",{children:Oe.jsxs("tr",{children:[Oe.jsx("th",{children:"Date"}),Oe.jsx("th",{children:"Angle"}),Oe.jsx("th",{children:"Image"})]})}),Oe.jsxs("tbody",{children:[Oe.jsxs("tr",{children:[Oe.jsx("td",{children:"2025-03-10"}),Oe.jsx("td",{children:"45°"}),Oe.jsx("td",{children:Oe.jsx("img",{src:"placeholder.jpg",alt:"Effort capture",width:"50"})})]}),Oe.jsxs("tr",{children:[Oe.jsx("td",{children:"2025-03-09"}),Oe.jsx("td",{children:"42°"}),Oe.jsx("td",{children:Oe.jsx("img",{src:"placeholder.jpg",alt:"Effort capture",width:"50"})})]})]})]})]}),Oe.jsx("button",{className:"history-preview-close-button",onClick:t,children:"Close"})]});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU=1e-7,nU=1e-4;class G2{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ix{refCount(e){return zs("refCount")}incRef(e){return zs("incRef")}timerAvailable(){return!0}time(e){return zs("time")}read(e){return zs("read")}readSync(e){return zs("readSync")}readToGPU(e,n){return zs("readToGPU")}numDataIds(){return zs("numDataIds")}disposeData(e,n){return zs("disposeData")}write(e,n,s){return zs("write")}move(e,n,s,r,i){return zs("move")}createTensorFromGPUData(e,n,s){return zs("createTensorFromGPUData")}memory(){return zs("memory")}floatPrecision(){return zs("floatPrecision")}epsilon(){return this.floatPrecision()===32?tU:nU}dispose(){return zs("dispose")}}function zs(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,Ru(t,e,n)}function El(t,e,n){return Math.max(t,Math.min(e,n))}function H2(t){return t%2===0?t:t+1}function Ru(t,e,n){const s=t[e];t[e]=t[n],t[n]=s}function FA(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function R(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function _s(t,e,n=""){R(Ke(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function zc(t){R(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Y(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function lN(t){return t.length===0}function rU(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function Ke(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function mc(t){return t%1===0}function Ww(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ec(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function uN(t,e=r=>0,n,s){return new Promise((r,i)=>{let a=0;const o=()=>{if(t()){r();return}a++;const l=e(a);if(n!=null&&a>=n){i();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function j2(t,e){let n=1,s=-1;for(let i=0;i<t.length;++i)if(t[i]>=0)n*=t[i];else if(t[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(t[i]<0)throw Error(`Shapes can not be < 0. Found ${t[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function qe(t,e){const n=e.length;return t=t==null?e.map((s,r)=>r):[].concat(t),R(t.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),R(t.every(s=>mc(s)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(s=>s<0?n+s:s)}function Ao(t,e){const n=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||r?null:qe(e,t).sort();let a=0;for(let o=0;o<t.length;++o){if(i!=null){if(i[a]===o&&t[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(i[a]==null||i[a]>o)&&t[o]===1&&(n.push(t[o]),s.push(o)),i[a]<=o&&a++}t[o]!==1&&(n.push(t[o]),s.push(o))}return{newShape:n,keptDims:s}}function Rn(t,e){return rn(t,e)}function rn(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function iU(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function aU(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function q2(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function oy(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function oU(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Lc(t){return typeof t=="string"||t instanceof String}function lU(t){return typeof t=="boolean"}function Gw(t){return typeof t=="number"}function Yl(t){return Array.isArray(t)?Yl(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Gw(t)?"float32":Lc(t)?"string":lU(t)?"bool":"float32"}function Hw(t){return!!(t&&t.constructor&&t.call&&t.apply)}function jw(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function Re(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function zA(t,e,n,s=!1){const r=new Array;if(e.length===1){const i=e[0]*(s?2:1);for(let a=0;a<i;a++)r[a]=n[t+a]}else{const i=e[0],a=e.slice(1),o=a.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<i;l++)r[l]=zA(t+l*o,a,n,s)}return r}function Ur(t,e,n=!1){if(t.length===0)return e[0];const s=t.reduce((r,i)=>r*i)*(n?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return zA(0,t,e,n)}function kg(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function X2(t,e){const n=Kn(t,e);for(let s=0;s<n.length;s++)n[s]=1;return n}function Kn(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function LA(t,e){const n=t.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Ur(t,new Float32Array(n));if(e==="int32")return Ur(t,new Int32Array(n));if(e==="bool")return Ur(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function fr(t){t.forEach(e=>{R(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function Vi(t,e,n){if(e===0)return 0;if(e===1)return t[0];let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=n[r]*t[r];return s}function Pc(t,e,n){if(e===0)return[];if(e===1)return[t];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(t/n[r]),t-=s[r]*n[r];return s[s.length-1]=t,s}function Rl(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN="tfjsflags";class uU{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=cU,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,s){if(this.flagRegistry[e]={evaluationFn:n,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(Rl(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);cN in e&&e[cN].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=dU(r,i)})}}function cU(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(hU(e,s[0],s[1]),s.join("="))),e}function hU(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function dU(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function J(){return PA}let PA=null;function fU(t){PA=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b1;function MA(){if(b1==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");b1=t}return b1}function pU(){const t=MA();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function K2(t,e){const n=pU();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const qf="Abs",Mc="Acos",Bc="Acosh",Ql="Add",Xf="AddN",ax="All",ox="Any",Kf="ArgMax",Yf="ArgMin",Vc="Asin",Uc="Asinh",Wc="Atan",Gc="Atanh",Hc="Atan2",Qf="AvgPool",lx="AvgPoolGrad",Zf="AvgPool3D",ux="AvgPool3DGrad",Jf="BatchMatMul",ep="BatchToSpaceND",cx="Bincount",hx="BitwiseAnd",mU="BroadcastTo",dx="BroadcastArgs",jc="Cast",qc="Ceil",Xc="ClipByValue",fx="Complex",tp="ComplexAbs",np="Concat",sp="Conv2D",px="Conv2DBackpropFilter",rp="Conv2DBackpropInput",ip="Conv3D",mx="Conv3DBackpropFilterV2",gx="Conv3DBackpropInputV2",Kc="Cos",Yc="Cosh",yx="Cumprod",ap="Cumsum",xx="CropAndResize",bx="DenseBincount",wx="DepthToSpace",op="DepthwiseConv2dNative",vx="DepthwiseConv2dNativeBackpropFilter",Sx="DepthwiseConv2dNativeBackpropInput",Cx="Diag",lp="Dilation2D",ly="Dilation2DBackpropInput",uy="Dilation2DBackpropFilter",Y2="Draw",Qc="RealDiv",kx="Einsum",Zc="Elu",$x="EluGrad",Jc="Erf",up="Equal",eh="Exp",cp="ExpandDims",th="Expm1",Nx="FFT",Ix="Fill",Tx="FlipLeftRight",nh="Floor",sh="FloorDiv",hp="FusedBatchNorm",dp="GatherV2",Ex="GatherNd",fp="Greater",rh="GreaterEqual",ih="Identity",Rx="IFFT",Ax="Imag",ah="IsFinite",oh="IsInf",lh="IsNan",pp="LeakyRelu",mp="Less",gp="LessEqual",Dx="LinSpace",uh="Log",ch="Log1p",yp="LogicalAnd",xp="LogicalNot",bp="LogicalOr",gU="LogSoftmax",wp="LRN",_x="LRNGrad",vp="Max",hh="Maximum",Sp="MaxPool",Ox="MaxPoolGrad",Cp="MaxPool3D",Fx="MaxPool3DGrad",zx="MaxPoolWithArgmax",kp="Mean",$p="Min",dh="Minimum",Np="MirrorPad",fh="Mod",Lx="Multinomial",ph="Multiply",Ip="Neg",Tp="NotEqual",Px="NonMaxSuppressionV3",Q2="NonMaxSuppressionV4",Mx="NonMaxSuppressionV5",Ep="OnesLike",Rp="OneHot",Ap="Pack",Dp="PadV2",mh="Pow",_p="Prelu",Op="Prod",Z2="RaggedGather",J2="RaggedRange",eS="RaggedTensorToTensor",Bx="Range",Vx="Real",gh="Reciprocal",yh="Relu",Fp="Reshape",zp="ResizeNearestNeighbor",Ux="ResizeNearestNeighborGrad",Lp="ResizeBilinear",Wx="ResizeBilinearGrad",xh="Relu6",Pp="Reverse",bh="Round",wh="Rsqrt",Gx="ScatterNd",Hx="TensorScatterUpdate",jx="SearchSorted",Mp="Select",vh="Selu",Bp="Slice",Sh="Sin",Ch="Sinh",kh="Sign",$h="Sigmoid",Nh="Softplus",Ih="Sqrt",Vp="Sum",Up="SpaceToBatchND",Wp="SplitV",Gp="Softmax",tS="SparseFillEmptyRows",nS="SparseReshape",qx="SparseSegmentMean",Xx="SparseSegmentSum",Kx="SparseToDense",Th="SquaredDifference",Yx="Square",Qx="StaticRegexReplace",Zx="StridedSlice",Jx="StringNGrams",sS="StringSplit",rS="StringToHashBucketFast",Eh="Sub",Rh="Tan",Ah="Tanh",Dh="Tile",eb="TopK",tb="Transform",xl="Transpose",iS="Unique",Hp="Unpack",jp="UnsortedSegmentSum",qp="ZerosLike",_h="Step",cy="FromPixels",nb="RotateWithOffset",pf="_FusedMatMul",mf="FusedConv2D",gf="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(...t){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...t)}function yU(...t){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy=K2("kernelRegistry",()=>new Map),qw=K2("gradRegistry",()=>new Map);function dy(t,e){const n=BA(t,e);return hy.get(n)}function hN(t){return qw.get(t)}function dN(t){const e=hy.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function aS(t){const{kernelName:e,backendName:n}=t,s=BA(e,n);hy.has(s)&&rr(`The kernel '${e}' for backend '${n}' is already registered`),hy.set(s,t)}function xU(t){const{kernelName:e}=t;qw.has(e)&&J().getBool("DEBUG")&&rr(`Overriding the gradient for '${e}'`),qw.set(e,t)}function BA(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var UA=Ut,zr=null;try{zr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ut(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}Ut.prototype.__isLong__;Object.defineProperty(Ut.prototype,"__isLong__",{value:!0});function Ys(t){return(t&&t.__isLong__)===!0}Ut.isLong=Ys;var fN={},pN={};function Zl(t,e){var n,s,r;return e?(t>>>=0,(r=0<=t&&t<256)&&(s=pN[t],s)?s:(n=Wt(t,(t|0)<0?-1:0,!0),r&&(pN[t]=n),n)):(t|=0,(r=-128<=t&&t<128)&&(s=fN[t],s)?s:(n=Wt(t,t<0?-1:0,!1),r&&(fN[t]=n),n))}Ut.fromInt=Zl;function Lr(t,e){if(isNaN(t))return e?ol:Pr;if(e){if(t<0)return ol;if(t>=WA)return jA}else{if(t<=-9223372036854776e3)return Vs;if(t+1>=wU)return HA}return t<0?Lr(-t,e).neg():Wt(t%gc|0,t/gc|0,e)}Ut.fromNumber=Lr;function Wt(t,e,n){return new Ut(t,e,n)}Ut.fromBits=Wt;var fy=Math.pow;function oS(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Pr;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=t.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return oS(t.substring(1),e,n).neg();for(var r=Lr(fy(n,8)),i=Pr,a=0;a<t.length;a+=8){var o=Math.min(8,t.length-a),l=parseInt(t.substring(a,a+o),n);if(o<8){var u=Lr(fy(n,o));i=i.mul(u).add(Lr(l))}else i=i.mul(r),i=i.add(Lr(l))}return i.unsigned=e,i}Ut.fromString=oS;function bi(t,e){return typeof t=="number"?Lr(t,e):typeof t=="string"?oS(t,e):Wt(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}Ut.fromValue=bi;var mN=65536,bU=1<<24,gc=mN*mN,WA=gc*gc,wU=WA/2,gN=Zl(bU),Pr=Zl(0);Ut.ZERO=Pr;var ol=Zl(0,!0);Ut.UZERO=ol;var Hu=Zl(1);Ut.ONE=Hu;var GA=Zl(1,!0);Ut.UONE=GA;var Xw=Zl(-1);Ut.NEG_ONE=Xw;var HA=Wt(-1,2147483647,!1);Ut.MAX_VALUE=HA;var jA=Wt(-1,-1,!0);Ut.MAX_UNSIGNED_VALUE=jA;var Vs=Wt(0,-2147483648,!1);Ut.MIN_VALUE=Vs;var be=Ut.prototype;be.toInt=function(){return this.unsigned?this.low>>>0:this.low};be.toNumber=function(){return this.unsigned?(this.high>>>0)*gc+(this.low>>>0):this.high*gc+(this.low>>>0)};be.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Vs)){var n=Lr(e),s=this.div(n),r=s.mul(n).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Lr(fy(e,6),this.unsigned),a=this,o="";;){var l=a.div(i),u=a.sub(l.mul(i)).toInt()>>>0,c=u.toString(e);if(a=l,a.isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}};be.getHighBits=function(){return this.high};be.getHighBitsUnsigned=function(){return this.high>>>0};be.getLowBits=function(){return this.low};be.getLowBitsUnsigned=function(){return this.low>>>0};be.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Vs)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};be.isZero=function(){return this.high===0&&this.low===0};be.eqz=be.isZero;be.isNegative=function(){return!this.unsigned&&this.high<0};be.isPositive=function(){return this.unsigned||this.high>=0};be.isOdd=function(){return(this.low&1)===1};be.isEven=function(){return(this.low&1)===0};be.equals=function(e){return Ys(e)||(e=bi(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};be.eq=be.equals;be.notEquals=function(e){return!this.eq(e)};be.neq=be.notEquals;be.ne=be.notEquals;be.lessThan=function(e){return this.comp(e)<0};be.lt=be.lessThan;be.lessThanOrEqual=function(e){return this.comp(e)<=0};be.lte=be.lessThanOrEqual;be.le=be.lessThanOrEqual;be.greaterThan=function(e){return this.comp(e)>0};be.gt=be.greaterThan;be.greaterThanOrEqual=function(e){return this.comp(e)>=0};be.gte=be.greaterThanOrEqual;be.ge=be.greaterThanOrEqual;be.compare=function(e){if(Ys(e)||(e=bi(e)),this.eq(e))return 0;var n=this.isNegative(),s=e.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};be.comp=be.compare;be.negate=function(){return!this.unsigned&&this.eq(Vs)?Vs:this.not().add(Hu)};be.neg=be.negate;be.add=function(e){Ys(e)||(e=bi(e));var n=this.high>>>16,s=this.high&65535,r=this.low>>>16,i=this.low&65535,a=e.high>>>16,o=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,f=0;return f+=i+u,d+=f>>>16,f&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+o,c+=h>>>16,h&=65535,c+=n+a,c&=65535,Wt(d<<16|f,c<<16|h,this.unsigned)};be.subtract=function(e){return Ys(e)||(e=bi(e)),this.add(e.neg())};be.sub=be.subtract;be.multiply=function(e){if(this.isZero())return Pr;if(Ys(e)||(e=bi(e)),zr){var n=zr.mul(this.low,this.high,e.low,e.high);return Wt(n,zr.get_high(),this.unsigned)}if(e.isZero())return Pr;if(this.eq(Vs))return e.isOdd()?Vs:Pr;if(e.eq(Vs))return this.isOdd()?Vs:Pr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(gN)&&e.lt(gN))return Lr(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,i=this.low>>>16,a=this.low&65535,o=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,f=0,p=0;return p+=a*c,f+=p>>>16,p&=65535,f+=i*c,d+=f>>>16,f&=65535,f+=a*u,d+=f>>>16,f&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=a*l,h+=d>>>16,d&=65535,h+=s*c+r*u+i*l+a*o,h&=65535,Wt(f<<16|p,h<<16|d,this.unsigned)};be.mul=be.multiply;be.divide=function(e){if(Ys(e)||(e=bi(e)),e.isZero())throw Error("division by zero");if(zr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?zr.div_u:zr.div_s)(this.low,this.high,e.low,e.high);return Wt(n,zr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ol:Pr;var s,r,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ol;if(e.gt(this.shru(1)))return GA;i=ol}else{if(this.eq(Vs)){if(e.eq(Hu)||e.eq(Xw))return Vs;if(e.eq(Vs))return Hu;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(Pr)?e.isNegative()?Hu:Xw:(r=this.sub(e.mul(s)),i=s.add(r.div(e)),i)}else if(e.eq(Vs))return this.unsigned?ol:Pr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Pr}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(s)/Math.LN2),l=o<=48?1:fy(2,o-48),u=Lr(s),c=u.mul(e);c.isNegative()||c.gt(r);)s-=l,u=Lr(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=Hu),i=i.add(u),r=r.sub(c)}return i};be.div=be.divide;be.modulo=function(e){if(Ys(e)||(e=bi(e)),zr){var n=(this.unsigned?zr.rem_u:zr.rem_s)(this.low,this.high,e.low,e.high);return Wt(n,zr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};be.mod=be.modulo;be.rem=be.modulo;be.not=function(){return Wt(~this.low,~this.high,this.unsigned)};be.and=function(e){return Ys(e)||(e=bi(e)),Wt(this.low&e.low,this.high&e.high,this.unsigned)};be.or=function(e){return Ys(e)||(e=bi(e)),Wt(this.low|e.low,this.high|e.high,this.unsigned)};be.xor=function(e){return Ys(e)||(e=bi(e)),Wt(this.low^e.low,this.high^e.high,this.unsigned)};be.shiftLeft=function(e){return Ys(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Wt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Wt(0,this.low<<e-32,this.unsigned)};be.shl=be.shiftLeft;be.shiftRight=function(e){return Ys(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Wt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Wt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};be.shr=be.shiftRight;be.shiftRightUnsigned=function(e){if(Ys(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var s=this.low;return Wt(s>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?Wt(n,0,this.unsigned):Wt(n>>>e-32,0,this.unsigned)};be.shru=be.shiftRightUnsigned;be.shr_u=be.shiftRightUnsigned;be.toSigned=function(){return this.unsigned?Wt(this.low,this.high,!1):this};be.toUnsigned=function(){return this.unsigned?this:Wt(this.low,this.high,!0)};be.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};be.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};be.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Ut.fromBytes=function(e,n,s){return s?Ut.fromBytesLE(e,n):Ut.fromBytesBE(e,n)};Ut.fromBytesLE=function(e,n){return new Ut(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Ut.fromBytesBE=function(e,n){return new Ut(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const qA=jv(UA),vU=vM({__proto__:null,default:qA},[UA]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const el=qA||vU;function sb(t){return el.fromString(t,!0,16)}const XA=sb("c3a5c85c97cb3127"),Qo=sb("b492b66fbe98f273"),ds=sb("9ae16a3b2f90404f");function Kw(t){return t.xor(t.shru(47))}function KA(t,e,n){const s=t.slice(e,e+n);return el.fromBytes(Array.from(s),!0,!0)}function Ot(t,e){return KA(t,e,8)}function yN(t,e){return KA(t,e,4)}function zn(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function uo(t,e,n=sb("9ddfea08eb382d69")){let s=t.xor(e).mul(n);s=s.xor(s.shru(47));let r=e.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function SU(t,e,n,s,r,i){r=r.add(t),i=zn(i.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(n),i=i.add(zn(r,44)),[r.add(s),i.add(a)]}function Xm(t,e,n,s){return SU(Ot(t,e),Ot(t,e+8),Ot(t,e+16),Ot(t,e+24),n,s)}function CU(t,e=t.length){if(e>=8){const n=ds.add(e*2),s=Ot(t,0).add(ds),r=Ot(t,e-8),i=zn(r,37).mul(n).add(s),a=zn(s,25).add(r).mul(n);return uo(i,a,n)}if(e>=4){const n=ds.add(e*2),s=yN(t,0);return uo(s.shl(3).add(e),yN(t,e-4),n)}if(e>0){const n=t[0],s=t[e>>1],r=t[e-1],i=n+(s<<8),a=e+(r<<2);return Kw(ds.mul(i).xor(XA.mul(a))).mul(ds)}return ds}function kU(t,e=t.length){const n=ds.add(e*2),s=Ot(t,0).mul(Qo),r=Ot(t,8),i=Ot(t,e-8).mul(n),a=Ot(t,e-16).mul(ds);return uo(zn(s.add(r),43).add(zn(i,30)).add(a),s.add(zn(r.add(ds),18)).add(i),n)}function $U(t,e=t.length){const n=ds.add(e*2),s=Ot(t,0).mul(ds),r=Ot(t,8),i=Ot(t,e-8).mul(n),a=Ot(t,e-16).mul(ds),o=zn(s.add(r),43).add(zn(i,30)).add(a),l=uo(o,s.add(zn(r.add(ds),18)).add(i),n),u=Ot(t,16).mul(n),c=Ot(t,24),h=o.add(Ot(t,e-32)).mul(n),d=l.add(Ot(t,e-24)).mul(n);return uo(zn(u.add(c),43).add(zn(h,30)).add(d),u.add(zn(c.add(s),18)).add(h),n)}function NU(t,e=t.length){const n=el.fromNumber(81,!0);if(e<=32)return e<=16?CU(t,e):kU(t,e);if(e<=64)return $U(t,e);let s=n,r=n.mul(Qo).add(113),i=Kw(r.mul(ds).add(113)).mul(ds),a=[el.UZERO,el.UZERO],o=[el.UZERO,el.UZERO];s=s.mul(ds).add(Ot(t,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=zn(s.add(r).add(a[0]).add(Ot(t,l+8)),37).mul(Qo),r=zn(r.add(a[1]).add(Ot(t,l+48)),42).mul(Qo),s=s.xor(o[1]),r=r.add(a[0]).add(Ot(t,l+40)),i=zn(i.add(o[0]),33).mul(Qo),a=Xm(t,l,a[1].mul(Qo),s.add(o[0])),o=Xm(t,l+32,i.add(o[1]),r.add(Ot(t,l+16))),[i,s]=[s,i],l+=64;while(l!==u);const h=Qo.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=zn(s.add(r).add(a[0]).add(Ot(t,l+8)),37).mul(h),r=zn(r.add(a[1]).add(Ot(t,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(Ot(t,l+40))),i=zn(i.add(o[0]),33).mul(h),a=Xm(t,l,a[1].mul(h),s.add(o[0])),o=Xm(t,l+32,i.add(o[1]),r.add(Ot(t,l+16))),[i,s]=[s,i],uo(uo(a[0],o[0],h).add(Kw(r).mul(XA)).add(i),uo(a[1],o[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(t,e){return e==="string"?va(t):Jl([t],e)}function IU(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function Jl(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Ea(t)),J().getBool("DEBUG")&&iU(t,e),IU(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let s=0;s<n.length;++s)Math.round(t[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${e}`)}function vs(){return J().platform.now()}function va(t,e="utf-8"){return e=e||"utf-8",J().platform.encode(t,e)}function ci(t,e="utf-8"){return e=e||"utf-8",J().platform.decode(t,e)}function qr(t){return J().platform.isTypedArray!=null?J().platform.isTypedArray(t):VA(t)}function Ea(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||Rl(t)||t==null||qr(t)&&n)e.push(t);else if(Array.isArray(t)||qr(t))for(let s=0;s<t.length;++s)Ea(t[s],e,n);else{let s=-1;for(const r of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Ea(t[r],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TU{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new RU)}profileKernel(e,n,s){let r;const i=()=>{r=s()};let a;const o=vs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const u of r)u.dataSync();a=Promise.resolve({kernelMs:vs()-o})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{EU(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:n,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:s,timeMs:r,inputs:i,extraInfo:a}=e;s.forEach(o=>{Promise.all([o.data(),r,a]).then(l=>{this.logger.logKernelProfile(n,o,l[0],l[1],i,l[2])})})}}function EU(t,e,n){if(e!=="float32")return!1;for(let s=0;s<t.length;s++){const r=t[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class RU{logKernelProfile(e,n,s,r,i,a){const o=typeof r=="number"?ec(`${r}ms`,9):r.error,l=ec(e,25),u=n.rank,c=n.size,h=ec(n.shape.toString(),14);let d="";for(const f in i){const p=i[f];if(p!=null){const m=p.shape||n.shape,g=m.length;d+=`${f}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${h}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(t,e,n){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<t.length;l++){const u=t[l],c=u.inputs;for(const h in c){const d=c[h];let f=!1;for(let p=0;p<e.length;p++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),f=!0,r[u.id]=!0;break}if(f)break}}const i={};i[n.id]=!0;const a={};for(let l=t.length-1;l>=0;l--){const u=t[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(i[u.outputs[h].id]){for(const d in c)i[c[d].id]=!0,a[u.id]=!0;break}}const o=[];for(let l=0;l<t.length;l++){const u=t[l];if(r[u.id]&&a[u.id]){const c={};for(const d in u.inputs){const f=u.inputs[d];s[f.id]&&(c[d]=f)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,o.push(h)}}return o}function DU(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach(l=>{const u=t[l.id];u!=null?a.push(u):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=n(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=i.inputs[l];if(!Ke(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=u;else{const h=t[c.id];t[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xN=20,pd=3,w1=7;function _U(t,e,n,s){const r=Re(e),i=OU(t,e,n,r),a=e.length,o=$g(t,e,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function OU(t,e,n,s){const r=Y(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l=n==="complex64"?Nd(t):t;if(o>1)for(let u=0;u<r/i;u++){const c=u*i;for(let h=0;h<i;h++)a[h]=Math.max(a[h],$d(l[c+h],0,n).length)}return a}function $d(t,e,n){let s;return Array.isArray(t)?s=`${parseFloat(t[0].toFixed(w1))} + ${parseFloat(t[1].toFixed(w1))}j`:Lc(t)?s=`'${t}'`:n==="bool"?s=YA(t):s=parseFloat(t.toFixed(w1)).toString(),ec(s,e)}function YA(t){return t===0?"false":"true"}function $g(t,e,n,s,r,i=!0){const a=n==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(n==="complex64"){const m=Nd(t);return[$d(m[0],0,n)]}return n==="bool"?[YA(t[0])]:[t[0].toString()]}if(l===1){if(o>xN){const g=pd*a;let y=Array.from(t.slice(0,g)),x=Array.from(t.slice((o-pd)*a,o*a));return n==="complex64"&&(y=Nd(y),x=Nd(x)),["["+y.map((w,v)=>$d(w,r[v],n)).join(", ")+", ..., "+x.map((w,v)=>$d(w,r[o-pd+v],n)).join(", ")+"]"]}return["["+(n==="complex64"?Nd(t):Array.from(t)).map((g,y)=>$d(g,r[y],n)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(o>xN){for(let m=0;m<pd;m++){const g=m*h,y=g+h;d.push(...$g(t.slice(g,y),u,n,c,r,!1))}d.push("...");for(let m=o-pd;m<o;m++){const g=m*h,y=g+h;d.push(...$g(t.slice(g,y),u,n,c,r,m===o-1))}}else for(let m=0;m<o;m++){const g=m*h,y=g+h;d.push(...$g(t.slice(g,y),u,n,c,r,m===o-1))}const f=l===2?",":"";d[0]="["+(o>0?d[0]+f:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+f;let p=`,
`;for(let m=2;m<l;m++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":p),d}function Nd(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class In{constructor(e,n,s){if(this.dtype=n,this.shape=e.slice(),this.size=Y(e),s!=null){const r=s.length;R(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||rn(n,this.size),this.strides=Re(e)}set(e,...n){n.length===0&&(n=[0]),R(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const r of e){if(r<0||r>=this.shape[n]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}n++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(e/this.strides[s]),e-=n[s]*this.strides[s];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return ii().makeTensor(this.values,this.shape,this.dtype)}}let ii=null,Au=null;function FU(t){ii=t}function zU(t){Au=t}class vt{constructor(e,n,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=Y(e),this.strides=Re(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Au.buffer(this.shape,this.dtype,e)}bufferSync(){return Au.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ur(this.shape,e,this.dtype==="complex64")}arraySync(){return Ur(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=ii().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(s=>ci(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ii().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ii().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>ci(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ii().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ii().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Au.print(this,e)}clone(){return this.throwIfDisposed(),Au.clone(this)}toString(e=!1){const n=this.dataSync();return _U(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Au.cast(this,e)}variable(e=!0,n,s){return this.throwIfDisposed(),ii().makeVariable(this,e,n,s)}}Object.defineProperty(vt,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function ne(){return K2("Tensor",()=>vt)}ne();class py extends vt{constructor(e,n,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=n,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ke(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ii().disposeTensor(this),this.dataId=e.dataId,ii().incRef(this,null)}dispose(){ii().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(py,Symbol.hasInstance,{value:t=>t instanceof vt&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bN;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(bN||(bN={}));var Yw;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(Yw||(Yw={}));var Qw;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(Qw||(Qw={}));var Zw;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(Zw||(Zw={}));var Jw;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(Jw||(Jw={}));const LU={float32:Zw,int32:Yw,bool:Qw,complex64:Jw};function Vn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return LU[t][e]}function rb(t){return Vn(t,"int32")}function QA(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function ZA(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(t,e){if(t.dtype===e.dtype)return[t,e];const n=Vn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function PU(t,e){R(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function JA(t){const e=[];return e3(t,e,new Set),e}function e3(t,e,n){if(t==null)return;if(t instanceof vt){e.push(t);return}if(!MU(t))return;const s=t;for(const r in s){const i=s[r];n.has(i)||(n.add(i),e3(i,e,n))}}function MU(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1(t){return t.kernelName!=null}class wN{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class yc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new wN}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,s=1){return e in this.registryFactory?(rr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(e);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new TU(this.backendInstance),!0}setupRegisteredKernels(){dN(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){dN(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof ix)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,rr(`Initialization of backend ${e} failed`),rr(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return rr(`Initialization of backend ${e} failed`),rr(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const s=e[n],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const s=this.state.tensorInfo.get(n),r=s.backend,i=this.readSync(n),a=r.refCount(n);r.disposeData(n,!0),s.backend=e,e.move(n,i,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let s=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=n(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,n,s){e();try{const r=s();return n(),r}catch(r){throw n(),r}}nextTensorId(){return yc.nextTensorId++}nextVariableId(){return yc.nextVariableId++}clone(e){const n=W.runKernel(ih,{x:e}),s={x:e},r=a=>({x:()=>{const o="float32",l={x:a},u={dtype:o};return W.runKernel(jc,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[n],r,i,{}),n}runKernel(e,n,s){if(this.backendName==null&&this.backend,!(dy(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-n-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let n,s=[];const r=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=v1(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(v1(e)){const{kernelName:p,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=dy(p,this.backendName);R(y!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),o=()=>{const x=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,x,w);const v=w.map(S=>S.rank!=null?S:this.makeTensorFromTensorInfo(S));if(r){const S=this.getTensorsForGradient(p,m,v);s=this.saveTensorsForBackwardMode(S)}return v}}else{const{forwardFunc:p}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};o=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}const{inputs:c,attrs:h}=e,d=v1(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=o():(f=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),n=f.outputs)}),r&&this.addTapeNode(u,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(p=>c[p]!=null?c[p].shape:null),outputShapes:n.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,n,s){const r=hN(e);if(r!=null){const i=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(R(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(n).map(u=>n[u])):o=i.map(u=>n[u]);const l=s.filter((u,c)=>a[c]);return o.concat(l)}return[]}makeTensor(e,n,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=e;s==="string"&&Lc(e[0])&&(i=e.map(l=>va(l)));const a=r.write(i,n,s),o=new vt(n,s,a,this.nextTensorId());if(this.trackTensor(o,r),s==="string"){const l=this.state.tensorInfo.get(a),u=oU(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,n,s,r){s=s||"float32";const i={dataId:e,shape:n,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(e,n){const{dataId:s,shape:r,dtype:i}=e,a=new vt(r,i,s,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(e,n=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const i=new py(e,n,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*oy(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof py||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*oy(e.dtype);this.state.numBytes-=s}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,s,r,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:s,saved:i},l=hN(e);l!=null&&(r=l.gradFunc),r!=null&&(o.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],f=Kn(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],i,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=JA(e),s=new Set(n.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(e,n,s,r=!1){if(R(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));R(i instanceof vt,()=>"The result y returned by f() must be a tensor.");const a=AU(this.state.activeTape,n,i);if(!r&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=s??BU(i.shape),DU(o,a,u=>this.tidy(u),VU);const l=n.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return R(Hw(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{R(n.every(o=>o instanceof vt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((o,l)=>{r[l]=o});const i=(o,l)=>(s=e(...n,l),R(s.value instanceof vt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),R(Hw(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(o,l)=>{const u=s.gradFunc(o,l),c=Array.isArray(u)?u:[u];R(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),R(c.every(d=>d instanceof vt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=vs(),s=await this.backend.time(e);return s.wallMs=vs()-n,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new wN;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}yc.nextTensorId=0;yc.nextVariableId=0;function BU(t){const e=X2(Y(t),"float32");return W.makeTensor(e,t,"float32")}function t3(){const t=MA();if(t._tfengine==null){const e=new uU(t);t._tfengine=new yc(e)}return fU(t._tfengine.ENV),FU(()=>t._tfengine),t._tfengine}const W=t3();function VU(t,e){const n={a:t,b:e};return W.runKernel(Ql,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(){return typeof navigator<"u"&&navigator!=null}function n3(t){if(t||UU()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function s3(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=J();Es.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Es.registerFlag("IS_BROWSER",()=>s3());Es.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Es.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Es.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Es.registerFlag("PROD",()=>!1);Es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Es.getBool("DEBUG"));Es.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Es.registerFlag("IS_TEST",()=>!1);Es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Es.getBool("DEBUG"));Es.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Es.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Es.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(t,e){let n=t;if(qr(t))return e==="string"?[]:[t.length];if(QA(t)){const r=t.channels||"RGBA";return[t.height,t.width*r.length]}else if(ZA(t))return[t.buffer.size/(e==null?4:oy(e))];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||qr(n)&&e!=="string";)s.push(n.length),n=n[0];return Array.isArray(t)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&r3(t,s,[]),s}function r3(t,e,n){if(n=n||[],!Array.isArray(t)&&!qr(t)){R(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}R(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),R(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const s=e.slice(1);for(let r=0;r<t.length;++r)r3(t[r],s,n.concat(r))}function vN(t,e,n,s){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function _(t,e,n,s="numeric"){if(t instanceof ne())return vN(s,t.dtype,e,n),t;let r=Yl(t);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),vN(s,r,e,n),t==null||!qr(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const l=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}const i=_o(t,r);!qr(t)&&!Array.isArray(t)&&(t=[t]);const o=r!=="string"?Jl(t,r):Ea(t,[],!0);return W.makeTensor(o,i,r)}function my(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((i,a)=>_(i,`${e}[${a}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3="__op";function V(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+i3;const r=(...i)=>{W.startScope(n);try{const a=s(...i);return Rl(a)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(a),a}catch(a){throw W.endScope(null),a}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(t,e){const n=_(t,"real","complex"),s=_(e,"imag","complex");_s(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return W.runKernel(fx,r)}const yo=V({complex_:WU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(t,e,n,s){if(s==null)s=Yl(t);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ZA(t)||QA(t)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return W.backend.createTensorFromGPUData(t,e||n,s)}if(!qr(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){fr(e);const r=Y(e),i=Y(n);R(r===i,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${i}`);for(let a=0;a<n.length;++a){const o=n[a],l=a===n.length-1?o!==Y(e.slice(a)):!0;R(n[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!qr(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=s!=="string"?Jl(t,s):Ea(t,[],!0),W.makeTensor(t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(t,e,n){const s=_o(t,n);return Oo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Al={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class wi{static join(e){return new wi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>qr(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=n+r.byteLength;this.shards.push({buffer:r,start:n,end:i}),n=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=n-e,i=new ArrayBuffer(r),a=new Uint8Array(i);let o=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+o-u.start,d=o,p=Math.min(n,u.end)-u.start,m=new Uint8Array(u.buffer,h,p-h);if(a.set(m,d),o+=m.length,n<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(r){return e<r.start?-1:e>=r.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=GU(this.shards,n);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function GU(t,e){let n=0,s=t.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,i=e(t[r]);if(i===0)return r;i<0?s=r:n=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(){return W}function ev(){return W.memory()}function Q(t,e){return W.tidy(t,e)}function ze(t){JA(t).forEach(n=>n.dispose())}function Pn(t){return W.keep(t)}function HU(t){return W.setBackend(t)}function jU(){return W.ready()}function xo(){return W.backendName}function lS(t,e,n=1){return W.registerBackend(t,e,n)}function Dl(){return W.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=4;async function tv(t,e){const n=[],s=[],r=Array.isArray(t)?t.map(a=>a.name):Object.keys(t);for(let a=0;a<r.length;++a){const o=r[a],l=Array.isArray(t)?t[a].tensor:t[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((g,y)=>g+y.length,0)+bo*d.length,p=new Uint8Array(f);let m=0;for(let g=0;g<d.length;g++){const y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);p.set(x,m),m+=bo,p.set(y,m),m+=y.length}h(p)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),n.push(u)}const i=await Promise.all(s);return{data:KU(i),specs:n}}function a3(t,e){const n=new wi(t),s={};let r=0;for(const i of e){const a=qU(i,(o,l)=>n.slice(r+o,r+l));s[i.name]=o3(i,n.slice(r,r+a)),r+=a}return s}function qU(t,e){const n=Y(t.shape);let s;if("quantization"in t){const r=t.quantization;s=Al[r.dtype]}else if(t.dtype==="string"){let r=0;for(let i=0;i<n;i++)r+=bo+new Uint32Array(e(r,r+bo))[0];return r}else s=Al[t.dtype];return n*s}async function XU(t,e){const n=Y(t.shape);let s;if("quantization"in t){const r=t.quantization;s=Al[r.dtype]}else if(t.dtype==="string"){let r=0;for(let i=0;i<n;i++)r+=bo+new Uint32Array(await e(r,r+bo))[0];return r}else s=Al[t.dtype];return n*s}function o3(t,e){const n=t.name,s=t.dtype,r=t.shape,i=Y(r);let a,o=0;if("quantization"in t){const l=t.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${t.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${t.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Al[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];a[h]=d*l.scale+l.min}}else if(l.dtype==="float16")a=tW()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];a[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=i*u}else if(s==="string"){const l=Y(t.shape);a=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(o,o+bo))[0];o+=bo;const h=new Uint8Array(e.slice(o,o+c));a.push(h),o+=c}}else{const l=Al[s];if(s==="float32")a=new Float32Array(e);else if(s==="int32")a=new Int32Array(e);else if(s==="bool")a=new Uint8Array(e);else if(s==="complex64"){a=new Float32Array(e);const u=new Float32Array(a.length/2),c=new Float32Array(a.length/2);for(let p=0;p<u.length;p++)u[p]=a[p*2],c[p]=a[p*2+1];const h=li(u,r,"float32"),d=li(c,r,"float32"),f=yo(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${n}': ${s}`);o+=i*l}return li(a,r,s)}async function SN(t,e,n){let s=new Uint8Array(e);for(;s.byteLength<n;){const{done:r,value:i}=await t.read();if(r&&i==null){const o=n-s.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(s.length+i.byteLength);a.set(s,0),a.set(new Uint8Array(i),s.length),s=a}return s.buffer}async function l3(t,e){const n={},s=t.getReader();let r=new ArrayBuffer(0);for(const i of e){const a=await XU(i,async(u,c)=>(r=await SN(s,r,c),r.slice(u,c)));r=await SN(s,r,a);const o=r.slice(0,a);r=r.slice(a);const l=o3(i,o);if(n[i.name]=l,xo()==="webgpu"){const u=Dl();"uploadToGPU"in u&&Y(l.shape)>=J().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return n}function KU(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(i=>{if(e+=i.byteLength,n.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let r=0;return n.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const uS=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function CN(t){return uS?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function YU(t){if(uS)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let s=0,r=e.length;s<r;s++)n+=String.fromCharCode(e[s]);return btoa(n)}function QU(t){if(uS){const s=Buffer.from(t,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let s=0;s<e.length;++s)n.set([e.charCodeAt(s)],s);return n.buffer}function u3(t){return wi.join(t)}function kN(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function c3(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function h3(t,e,n){const s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(s.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=n}return t.signature!=null&&(s.signature=t.signature),t.userDefinedMetadata!=null&&(s.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(s.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(s.initializerSignature=t.initializerSignature),s}async function cS(t,e){let n,s;return t.weightsManifest!=null&&([n,s]=await e(t.weightsManifest)),h3(t,n,s)}function Xp(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:CN(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:CN(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new wi(t.weightData).byteLength}}function nv(t){const e=[];for(const n of t)e.push(...n.weights);return e}function ZU(){const t=n=>{let s=n<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function JU(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function eW(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function tW(){const t=ZU(),e=JU(),n=eW();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const o=s[a],l=t[n[o>>10]+(o&1023)]+e[o>>10];i[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Yt.instance==null&&(Yt.instance=new Yt),Yt.instance}static registerSaveRouter(e){Yt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Yt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Yt.getHandlers(e,"save")}static getLoadHandlers(e,n){return Yt.getHandlers(e,"load",n)}static getHandlers(e,n,s){const r=[];return(n==="load"?Yt.getInstance().loadRouters:Yt.getInstance().saveRouters).forEach(a=>{const o=a(e,s);o!==null&&r.push(o)}),r}}const nW=t=>Yt.registerSaveRouter(t),sW=t=>Yt.registerLoadRouter(t),d3=t=>Yt.getSaveHandlers(t),rW=(t,e)=>Yt.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv="tensorflowjs",rv=1,ll="models_store",Qa="model_info_store";function f3(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function iv(t){const e=t.result;e.createObjectStore(ll,{keyPath:"modelPath"}),e.createObjectStore(Qa,{keyPath:"modelPath"})}class _l{constructor(e){if(this.indexedDB=f3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((s,r)=>{const i=this.indexedDB.open(sv,rv);i.onupgradeneeded=()=>iv(i),i.onsuccess=()=>{const a=i.result;if(n==null){const o=a.transaction(ll,"readonly"),u=o.objectStore(ll).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(a.close(),r(u.error)),o.oncomplete=()=>a.close()}else{n.weightData=wi.join(n.weightData);const o=Xp(n),l=a.transaction(Qa,"readwrite");let u=l.objectStore(Qa),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(d){return r(d)}let h;c.onsuccess=()=>{h=a.transaction(ll,"readwrite");const d=h.objectStore(ll);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:o})}catch(p){return r(p)}f.onsuccess=()=>s({modelArtifactsInfo:o}),f.onerror=p=>{u=l.objectStore(Qa);const m=u.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(f.error)),m.onerror=g=>(a.close(),r(f.error))}},c.onerror=d=>(a.close(),r(c.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},i.onerror=a=>r(i.error)})}}_l.URL_SCHEME="indexeddb://";const p3=t=>J().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_l.URL_SCHEME)?iW(t.slice(_l.URL_SCHEME.length)):null;Yt.registerSaveRouter(p3);Yt.registerLoadRouter(p3);function iW(t){return new _l(t)}function aW(t){return t.startsWith(_l.URL_SCHEME)?t.slice(_l.URL_SCHEME.length):t}class oW{constructor(){this.indexedDB=f3()}async listModels(){return new Promise((e,n)=>{const s=this.indexedDB.open(sv,rv);s.onupgradeneeded=()=>iv(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Qa,"readonly"),o=i.objectStore(Qa).getAll();o.onsuccess=()=>{const l={};for(const u of o.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},o.onerror=l=>(r.close(),n(o.error)),i.oncomplete=()=>r.close()},s.onerror=r=>n(s.error)})}async removeModel(e){return e=aW(e),new Promise((n,s)=>{const r=this.indexedDB.open(sv,rv);r.onupgradeneeded=()=>iv(r),r.onsuccess=()=>{const i=r.result,a=i.transaction(Qa,"readwrite"),o=a.objectStore(Qa),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=o.delete(e),h=()=>{u=i.transaction(ll,"readwrite");const f=u.objectStore(ll).delete(e);f.onsuccess=()=>n(l.result.modelArtifactsInfo),f.onerror=p=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),s(l.error))}},l.onerror=c=>(i.close(),s(l.error)),a.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa="/",Du="tensorflowjs_models",m3="info",lW="model_topology",uW="weight_specs",cW="weight_data",hW="model_metadata";function g3(t){return{info:[Du,t,m3].join(pa),topology:[Du,t,lW].join(pa),weightSpecs:[Du,t,uW].join(pa),weightData:[Du,t,cW].join(pa),modelMetadata:[Du,t,hW].join(pa)}}function y3(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function dW(t){const e=t.split(pa);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(pa)}function fW(t){return t.startsWith(Ol.URL_SCHEME)?t.slice(Ol.URL_SCHEME.length):t}class Ol{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=g3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Xp(e),i=wi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,YU(i));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw y3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);n.format=o.format,n.generatedBy=o.generatedBy,n.convertedBy=o.convertedBy,o.signature!=null&&(n.signature=o.signature),o.userDefinedMetadata!=null&&(n.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(n.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(n.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(n.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=QU(a),n}}Ol.URL_SCHEME="localstorage://";const x3=t=>J().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ol.URL_SCHEME)?pW(t.slice(Ol.URL_SCHEME.length)):null;Yt.registerSaveRouter(x3);Yt.registerLoadRouter(x3);function pW(t){return new Ol(t)}class mW{constructor(){R(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),R(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Du+pa,s=pa+m3;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(n)&&i.endsWith(s)){const a=dW(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=fW(e);const n=g3(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return y3(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tc="://";class hs{constructor(){this.managers={}}static getInstance(){return hs.instance==null&&(hs.instance=new hs),hs.instance}static registerManager(e,n){R(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(tc)&&(e=e.slice(0,e.indexOf(tc))),R(e.length>0,()=>"scheme must not be an empty string.");const s=hs.getInstance();R(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=n}static getManager(e){const n=hs.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(hs.getInstance().managers)}}function Ng(t){if(t.indexOf(tc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${hs.getSchemes().join(",")}`);return{scheme:t.split(tc)[0],path:t.split(tc)[1]}}async function b3(t,e,n=!1){R(t!==e,()=>`Old path and new path are the same: '${t}'`);const s=Yt.getLoadHandlers(t);R(s.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),R(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${t}.`);const r=s[0],i=Yt.getSaveHandlers(e);R(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),R(i.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=i[0],o=Ng(t).scheme,l=Ng(t).path,u=o===Ng(t).scheme,c=await r.load();n&&u&&await hs.getManager(o).removeModel(l);const h=await a.save(c);return n&&!u&&await hs.getManager(o).removeModel(l),h.modelArtifactsInfo}async function gW(){const t=hs.getSchemes(),e={};for(const n of t){const s=await hs.getManager(n).listModels();for(const r in s){const i=n+tc+r;e[i]=s[r]}}return e}async function yW(t){const e=Ng(t);return hs.getManager(e.scheme).removeModel(e.path)}async function xW(t,e){return b3(t,e,!1)}async function bW(t,e){return b3(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wW{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!J().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return VA(e)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new wW);try{hs.registerManager(Ol.URL_SCHEME,new mW)}catch{}try{hs.registerManager(_l.URL_SCHEME,new oW)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={importFetch:()=>require("node-fetch")};let S1;class SW{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return J().global.fetch!=null?J().global.fetch(e,n):(S1==null&&(S1=vW.importFetch()),S1(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new SW);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(t,e="float32",n){return e=e||"float32",fr(t),new In(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(t,e){const n=_(t,"x","cast");if(!aU(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return W.runKernel(jc,s,r)}const pe=V({cast_:CW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(t){const n={x:_(t,"x","clone","string_or_numeric")};return W.runKernel(ih,n)}const Sa=V({clone_:kW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */t3();const $W={buffer:Ge,cast:pe,clone:Sa,print:w3};zU($W);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(t,e){let n=_(t,"a","add"),s=_(e,"b","add");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(Ql,r)}const re=V({add_:NW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(t,e){let n=_(t,"a","floorDiv"),s=_(e,"b","floorDiv");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(sh,r)}const hS=V({floorDiv_:IW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(t,e){let n=_(t,"a","div"),s=_(e,"b","div");if([n,s]=an(n,s),n.dtype==="int32"&&s.dtype==="int32")return hS(n,s);const r={a:n,b:s},i={};return W.runKernel(Qc,r,i)}const we=V({div_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(t,e){let n=_(t,"a","mul"),s=_(e,"b","mul");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(ph,r)}const M=V({mul_:EW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(t){const e=_(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return W.runKernel(tp,n)}else{const n={x:e};return W.runKernel(qf,n)}}const Cn=V({abs_:RW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(t){const n={x:_(t,"x","acos")};return W.runKernel(Mc,n)}const v3=V({acos_:AW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(t){const n={x:_(t,"x","acosh")};return W.runKernel(Bc,n)}const S3=V({acosh_:DW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(t){R(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),R(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((r,i)=>_(r,`tensors${i}`,"addN")),n=e[0];e.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Ke(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return W.runKernel(Xf,s)}const OW=V({addN_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(t,e=null,n=!1){const r={x:_(t,"x","all","bool")},i={axis:e,keepDims:n};return W.runKernel(ax,r,i)}const dS=V({all_:FW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(t,e=null,n=!1){const r={x:_(t,"x","any","bool")},i={axis:e,keepDims:n};return W.runKernel(ox,r,i)}const gy=V({any_:zW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(t,e=0){const s={x:_(t,"x","argMax")},r={axis:e};return W.runKernel(Kf,s,r)}const Fl=V({argMax_:LW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(t,e=0){const s={x:_(t,"x","argMin")},r={axis:e};return W.runKernel(Yf,s,r)}const C3=V({argMin_:PW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(t){const n={x:_(t,"x","asin")};return W.runKernel(Vc,n)}const k3=V({asin_:MW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(t){const n={x:_(t,"x","asinh")};return W.runKernel(Uc,n)}const $3=V({asinh_:BW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(t){const n={x:_(t,"x","atan")};return W.runKernel(Wc,n)}const N3=V({atan_:VW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(t,e){let n=_(t,"a","atan2"),s=_(e,"b","atan2");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(Hc,r)}const I3=V({atan2_:UW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(t){const n={x:_(t,"x","atanh")};return W.runKernel(Gc,n)}const T3=V({atanh_:WW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(t,e,n,s,r="NHWC",i){const a=t[3],o=[...e,a],l=Qs(r);return Lt(t,o,n,i,s,null,null,l)}function as(t,e,n,s,r,i,a="channelsLast"){const[o,l]=yf(e);let u;if(a==="channelsLast")u=[o,l,t[3],t[3]];else if(a==="channelsFirst")u=[o,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Lt(t,u,n,s,r,i,!1,a)}function pr(t,e,n,s,r,i,a="NDHWC"){const[o,l,u]=av(e);let c,h;if(a==="NDHWC")h="channelsLast",c=[o,l,u,t[4],t[4]];else if(a==="NCDHW")h="channelsFirst",c=[o,l,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return vi(t,c,n,s,r,!1,h,i)}function Lt(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h]=t;else if(o==="channelsFirst")[l,h,u,c]=t;else throw new Error(`Unknown dataFormat ${o}`);const[d,f,,p]=e,[m,g]=yf(n),[y,x]=yf(s),w=nc(d,y),v=nc(f,x),{padInfo:S,outHeight:N,outWidth:I}=jW(r,u,c,m,g,w,v,i,o),T=a?p*h:p;let A;return o==="channelsFirst"?A=[l,T,N,I]:o==="channelsLast"&&(A=[l,N,I,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:N,outWidth:I,outChannels:T,padInfo:S,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:x,inShape:t,outShape:A,filterShape:e}}function vi(t,e,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h,d]=t;else if(a==="channelsFirst")[l,d,u,c,h]=t;else throw new Error(`Unknown dataFormat ${a}`);const[f,p,m,,g]=e,[y,x,w]=av(n),[v,S,N]=av(s),I=nc(f,v),T=nc(p,S),A=nc(m,N),{padInfo:D,outDepth:O,outHeight:U,outWidth:B}=qW(r,u,c,h,y,x,w,I,T,A,o),q=i?g*d:g;let H;return a==="channelsFirst"?H=[l,q,O,U,B]:a==="channelsLast"&&(H=[l,O,U,B,q]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:O,outHeight:U,outWidth:B,outChannels:q,padInfo:D,strideDepth:y,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:p,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:T,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:S,dilationWidth:N,inShape:t,outShape:H,filterShape:e}}function GW(t,e,n,s,r){s==null&&(s=fS(t,e,n));const i=t[0],a=t[1],o=xf((i-e+2*s)/n+1,r),l=xf((a-e+2*s)/n+1,r);return[o,l]}function HW(t,e,n,s,r,i){r==null&&(r=fS(t,e[0],s[0]));const a=[0,0,0,n];for(let o=0;o<3;o++)t[o]+2*r>=e[o]&&(a[o]=xf((t[o]-e[o]+2*r)/s[o]+1,i));return a}function fS(t,e,n,s=1){const r=nc(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function yf(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function av(t){return typeof t=="number"?[t,t,t]:t}function nc(t,e){return e<=1?t:t+(t-1)*(e-1)}function jW(t,e,n,s,r,i,a,o,l){let u,c,h;if(typeof t=="number"){u={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const f=GW([e,n],i,s,t,o);c=f[0],h=f[1]}else if(t==="same"){c=Math.ceil(e/s),h=Math.ceil(n/r);const d=Math.max(0,(c-1)*s+i-e),f=Math.max(0,(h-1)*r+a-n),p=Math.floor(d/2),m=d-p,g=Math.floor(f/2),y=f-g;u={top:p,bottom:m,left:g,right:y,type:"SAME"}}else if(t==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/s),h=Math.ceil((n-a+1)/r);else if(typeof t=="object"){const d=l==="channelsLast"?t[1][0]:t[2][0],f=l==="channelsLast"?t[1][1]:t[2][1],p=l==="channelsLast"?t[2][0]:t[3][0],m=l==="channelsLast"?t[2][1]:t[3][1];u={top:d,bottom:f,left:p,right:m,type:d===0&&f===0&&p===0&&m===0?"VALID":"EXPLICIT"},c=xf((e-i+d+f)/s+1,o),h=xf((n-a+p+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:u,outHeight:c,outWidth:h}}function qW(t,e,n,s,r,i,a,o,l,u,c){let h,d,f,p;if(t==="valid"&&(t=0),typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const g=HW([e,n,s,1],[o,l,u],1,[r,i,a],t,c);d=g[0],f=g[1],p=g[2]}else if(t==="same"){d=Math.ceil(e/r),f=Math.ceil(n/i),p=Math.ceil(s/a);const m=(d-1)*r+o-e,g=(f-1)*i+l-n,y=(p-1)*a+u-s,x=Math.floor(m/2),w=m-x,v=Math.floor(g/2),S=g-v,N=Math.floor(y/2),I=y-N;h={top:v,bottom:S,left:N,right:I,front:x,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function xf(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function wo(t){const[e,n,s]=yf(t);return e===1&&n===1&&s===1}function Dn(t,e){return wo(t)||wo(e)}function zl(t){return yf(t).every(e=>e>0)}function Qs(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function bs(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")R(mc(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{R(mc(r),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(t,e){const s={x:_(t,"x","reshape","string_or_numeric")},r={shape:e};return W.runKernel(Fp,s,r)}const G=V({reshape_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(t,e,n,s,r){const i=_(t,"x","avgPool","float32"),a=1;R(Dn(n,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),R(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),bs("avgPool",s,r);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let h=W.runKernel(Qf,u,c);return h=pe(h,i.dtype),l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ib=V({avgPool_:KW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(t,e,n,s,r,i="NDHWC"){const a=_(t,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),R(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),R(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),R(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),bs("avgPool3d",s,r);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=W.runKernel(Zf,u,c);return h=pe(h,o.dtype),l?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const E3=V({avgPool3d_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(t,e=0){R(t.length>=1,()=>"Pass at least one tensor to concat");const n=my(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),n.length===1)return Sa(n[0]);const s=n,r={axis:e};return W.runKernel(np,s,r)}const Jt=V({concat_:QW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(t,e,n=!1,s=!1){let r=_(t,"a","matMul"),i=_(e,"b","matMul");[r,i]=an(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return W.runKernel(Jf,a,o)}const rt=V({matMul_:ZW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(t){const n={x:_(t,"x","sigmoid","float32")};return W.runKernel($h,n)}const ur=V({sigmoid_:JW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(t,e,n){const s=_(t,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:n};return W.runKernel(Bp,r,i)}const Be=V({slice_:eG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(t){const n={x:_(t,"x","tanh","float32")};return W.runKernel(Ah,n)}const Ll=V({tanh_:tG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(t,e,n,s,r,i){const a=_(t,"forgetBias","basicLSTMCell"),o=_(e,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),u=_(s,"data","basicLSTMCell"),c=_(r,"c","basicLSTMCell"),h=_(i,"h","basicLSTMCell"),d=Jt([u,h],1),f=rt(d,o),p=re(f,l),m=p.shape[0],g=p.shape[1]/4,y=[m,g],x=Be(p,[0,0],y),w=Be(p,[0,g],y),v=Be(p,[0,g*2],y),S=Be(p,[0,g*3],y),N=re(M(ur(x),Ll(w)),M(c,ur(re(a,v)))),I=M(Ll(N),ur(S));return[N,I]}const sG=V({basicLSTMCell_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(t,e,n){const s=_(t,"x","batchToSpaceND"),r=e.reduce((o,l)=>o*l);R(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),R(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),R(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const i={x:s},a={blockShape:e,crops:n};return W.runKernel(ep,i,a)}const ab=V({batchToSpaceND_:rG});function iG(t){let e;return t.rank===0||t.rank===1?e=G(t,[1,1,1,t.size]):t.rank===2?e=G(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(t,e,n,s,r,i){i==null&&(i=.001);const a=_(t,"x","batchNorm"),o=_(e,"mean","batchNorm"),l=_(n,"variance","batchNorm");let u;r!=null&&(u=_(r,"scale","batchNorm"));let c;s!=null&&(c=_(s,"offset","batchNorm")),R(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),R(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),R(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:iG(a),scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:i},p=W.runKernel(hp,d,f);return G(p,a.shape)}const Kp=V({batchNorm_:aG});function oG(t,e,n,s,r,i){const a=_(t,"x","batchNorm"),o=_(e,"mean","batchNorm"),l=_(n,"variance","batchNorm");let u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),R(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),R(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),R(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&R(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&R(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Kp(a,o,l,c,u,i)}const R3=V({batchNorm2d_:oG});function lG(t,e,n,s,r,i){const a=_(t,"x","batchNorm"),o=_(e,"mean","batchNorm"),l=_(n,"variance","batchNorm");let u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),R(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),R(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),R(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&R(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&R(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Kp(a,o,l,c,u,i)}const A3=V({batchNorm3d_:lG});function uG(t,e,n,s,r,i){const a=_(t,"x","batchNorm"),o=_(e,"mean","batchNorm"),l=_(n,"variance","batchNorm");let u;r!=null&&(u=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),R(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),R(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),R(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&R(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&R(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Kp(a,o,l,c,u,i)}const D3=V({batchNorm4d_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(t,e,n){const s=_(t,"x","bincount"),r=_(e,"weights","bincount");R(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),R(n>=0,()=>`size must be non-negative, but got ${n}.`),R(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},a={size:n};return W.runKernel(cx,i,a)}const _3=V({bincount_:cG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(t,e){const n=_(t,"x","bitwiseAnd"),s=_(e,"y","bitwiseAnd");if(!Ke(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if(n.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const r={a:n,b:s};return W.runKernel(hx,r)}const dG=V({bitwiseAnd_:hG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(t,e){const n=_(t,"s0","broadcastArgs","int32"),s=_(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return W.runKernel(dx,r)}const pG=V({broadcastArgs_:fG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(t,e){let n=_(t,"broadcastTo","x");const s=n.shape;if(fr(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const u=n.shape.slice();for(;u.length<e.length;)u.unshift(1);n=G(n,u)}const r=n.shape,i=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])i[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Sa(n);const o={x:n},l={reps:i};return W.runKernel(Dh,o,l)}const sc=V({broadcastTo_:mG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(t){const n={x:_(t,"x","ceil","float32")};return W.runKernel(qc,n)}const O3=V({ceil_:gG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(t,e,n){fr(t),n=n||Yl(e);const s={shape:t,value:e,dtype:n};return W.runKernel(Ix,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(t,e,n){const s=_(t,"x","clipByValue");if(R(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Oh(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:n};return W.runKernel(Xc,r,i)}const Rs=V({clipByValue_:yG});function xG(t){return Jt(t,0)}const F3=V({concat1d_:xG});function bG(t,e){return Jt(t,e)}const z3=V({concat2d_:bG});function wG(t,e){return Jt(t,e)}const L3=V({concat3d_:wG});function vG(t,e){return Jt(t,e)}const P3=V({concat4d_:vG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(t,e,n,s,r="NHWC",i=[1,1],a){const o=_(t,"x","conv2d","float32"),l=_(e,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),R(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),R(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),bs("conv2d",s,a);const h=r==="NHWC"?u.shape[3]:u.shape[1];R(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),R(Dn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),R(zl(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),R(zl(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},f={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},p=W.runKernel(sp,d,f);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const vo=V({conv2d_:SG});function CG(t,e,n,s,r="NWC",i=1,a){const o=_(t,"x","conv1d"),l=_(e,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=G(o,[1,o.shape[0],o.shape[1]])),R(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),R(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),bs("conv1d",s,a),R(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),R(Dn(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),R(zl(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),R(zl(n),()=>"Error in conv1D: Stride should be larger than 0."),R(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=G(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=G(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=vo(d,h,[1,n],s,"NHWC",[1,i],a);return c?G(g,[g.shape[2],g.shape[3]]):G(g,[g.shape[0],g.shape[2],g.shape[3]])}const pS=V({conv1d_:CG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(t,e,n,s,r,i="NHWC",a){R(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;e.rank===3&&(u=!0,l=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),R(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),R(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),R(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=i==="NHWC"?o[3]:o[1],h=i==="NHWC"?l.shape[3]:l.shape[1];R(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),R(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),bs("conv2dDerInput",r,a);const d={dy:l,filter:n},f={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},p=W.runKernel(rp,d,f);return u?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const mS=V({conv2DBackpropInput_:kG});function $G(t,e,n,s,r,i){const a=_(t,"x","conv2dTranspose"),o=_(e,"filter","conv2dTranspose");return mS(n,a,o,s,r,"NHWC",i)}const gS=V({conv2dTranspose_:$G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=_(t,"x","conv3d"),o=_(e,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),R(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),R(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),R(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),R(Dn(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),R(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),R(zl(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),R(zl(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},d=W.runKernel(ip,c,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const M3=V({conv3d_:NG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(t,e,n,s,r){R(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,a=e,o=!1;e.rank===4&&(o=!0,a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];R(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),R(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),R(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),R(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),R(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:i},d=W.runKernel(gx,c,h);return o?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const B3=V({conv3DBackpropInput_:IG});function TG(t,e,n,s,r){const i=_(t,"x","conv3dTranspose"),a=_(e,"filter","conv3dTranspose");return B3(n,i,a,s,r)}const V3=V({conv3dTranspose_:TG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(t){const n={x:_(t,"x","cos","float32")};return W.runKernel(Kc,n)}const ob=V({cos_:EG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(t){const n={x:_(t,"x","cosh","float32")};return W.runKernel(Yc,n)}const yS=V({cosh_:RG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(t,e=0,n=!1,s=!1){const i={x:_(t,"x","cumprod")},a={axis:e,exclusive:n,reverse:s};return W.runKernel(yx,i,a)}const yy=V({cumprod_:AG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(t,e=0,n=!1,s=!1){const i={x:_(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:s};return W.runKernel(ap,i,a)}const xS=V({cumsum_:DG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(t,e,n,s=!1){const r=_(t,"x","denseBincount"),i=_(e,"weights","denseBincount");R(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),R(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),R(n>=0,()=>`size must be non-negative, but got ${n}.`),R(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const a={x:r,weights:i},o={size:n,binaryOutput:s};return W.runKernel(bx,a,o)}const ov=V({denseBincount_:_G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OG(t,e,n="NHWC"){const s=_(t,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],i=n==="NHWC"?s.shape[2]:s.shape[3],a=n==="NHWC"?s.shape[3]:s.shape[1];R(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),R(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),R(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),R(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:e,dataFormat:n};return W.runKernel(wx,o,l)}const U3=V({depthToSpace_:OG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(t,e,n,s,r="NHWC",i=[1,1],a){const o=_(t,"x","depthwiseConv2d","float32"),l=_(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),R(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),R(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];R(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),bs("depthwiseConv2d",s,a);const d={x:u,filter:l},f={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},p=W.runKernel(op,d,f);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Yp=V({depthwiseConv2d_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(t){const n={x:_(t,"x","diag")};return W.runKernel(Cx,n)}const LG=V({diag_:zG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(t,e,n,s,r=[1,1],i="NHWC"){const a=_(t,"x","dilation2d"),o=_(e,"filter","dilation2d");R(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),R(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),R(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;a.rank===3&&(l=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),R(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=W.runKernel(lp,c,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const W3=V({dilation2d_:PG});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=t[i]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(i)}return s}function An(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(r==null||r===1&&a>1)&&n.unshift(i)}return n}function Pe(t,e){const n=Math.max(t.length,e.length),s=new Array(n);for(let r=0;r<n;r++){let i=t[t.length-r-1];i==null&&(i=1);let a=e[e.length-r-1];if(a==null&&(a=1),i===1)s[n-r-1]=a;else if(a===1)s[n-r-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(o)}else s[n-r-1]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(t,e){let n=_(t,"a","equal","string_or_numeric"),s=_(e,"b","equal","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(up,r)}const hi=V({equal_:MG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(t,e,n){const s=_(e,"a","where"),r=_(n,"b","where"),i=_(t,"condition","where","bool"),a=Pe(Pe(i.shape,s.shape),r.shape),o=sc(i,a),l=sc(s,a),u=sc(r,a),c={condition:o,t:l,e:u};return W.runKernel(Mp,c)}const is=V({where_:BG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(t){const n={x:_(t,"x","zerosLike")};return W.runKernel(qp,n)}const ct=V({zerosLike_:VG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(t,e){let n=_(t,"a","div"),s=_(e,"b","div");[n,s]=an(n,s);const r=we(n,s),i=ct(r),a=hi(s,i);return is(a,i,r)}const G3=V({divNoNan_:UG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(t,e){const n=_(t,"t1","dot"),s=_(e,"t2","dot");R((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1],i=s.rank===1?s.size:s.shape[0];if(R(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),n.rank===1&&s.rank===1){const a=G(n,[1,-1]),o=G(s,[-1,1]),l=rt(a,o);return G(l,[])}else if(n.rank===1&&s.rank===2){const a=G(n,[1,-1]),o=G(s,[s.shape[0],s.shape[1]]),l=rt(a,o);return G(l,[l.size])}else if(n.rank===2&&s.rank===1){const a=G(s,[-1,1]),o=rt(n,a);return G(o,[o.size])}else{const a=G(s,[s.shape[0],s.shape[1]]);return rt(n,a)}}const H3=V({dot_:WG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(t,...e){const n=e.map((r,i)=>_(r,`tensors${i}`,"einsum")),s={equation:t};return W.runKernel(kx,n,s)}const _u=V({einsum_:GG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(t){const n={x:_(t,"x","elu","float32")};return W.runKernel(Zc,n)}const Qp=V({elu_:HG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(t,e){const n=_(t,"x","ensureShape","string_or_numeric");if(!rU(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const qG=V({ensureShape_:jG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(t){let e=_(t,"x","erf");R(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=pe(e,"float32"));const n={x:e};return W.runKernel(Jc,n)}const bS=V({erf_:XG});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function j3(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?r.push(t[i++]):r.push(e[a++]);return r}function dn(t,e){const n=[],s=t.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&n.push(t[i]);const r=e.map(i=>t[i]);return[n,r]}function on(t,e){const n=e.map(s=>1);return j3(t,n,e)}function wn(t,e,n){R(wS(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function It(t,e){if(wS(t,e))return null;const n=[];for(let s=0;s<e;++s)t.indexOf(s)===-1&&n.push(s);return t.forEach(s=>n.push(s)),n}function Ji(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function Pt(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(t,e=null,n=!1){const r={x:_(t,"x","max")},i={reductionIndices:e,keepDims:n};return W.runKernel(vp,r,i)}const Wr=V({max_:KG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(t,e=null,n=!1){const r={x:_(t,"x","min")},i={axis:e,keepDims:n};return W.runKernel($p,r,i)}const bf=V({min_:YG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(t,e){let n=_(t,"base","pow"),s=_(e,"exp","pow");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(mh,r)}const Ra=V({pow_:QG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(t,e){if((qr(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&qr(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Oo(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(t){const n={x:_(t,"x","sqrt","float32")};return W.runKernel(Ih,n)}const Yn=V({sqrt_:ZG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(t){const e=_(t,"x","square"),n={};return W.runKernel("Square",{x:e},n)}const $t=V({square_:JG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(t,e=null,n=!1){let s=_(t,"x","sum");s.dtype==="bool"&&(s=pe(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return W.runKernel(Vp,r,i)}const Ie=V({sum_:eH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(t,e="euclidean",n=null,s=!1){t=_(t,"x","norm");const r=q3(t,e,n);let i=r.shape;if(s){const a=qe(n,t.shape);i=on(r.shape,a)}return G(r,i)}function q3(t,e,n=null){if(t.rank===0)return Cn(t);if(t.rank!==1&&n===null)return q3(G(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return Ie(Cn(t),n);if(e===1/0)return Wr(Cn(t),n);if(e===-1/0)return bf(Cn(t),n);if(e==="euclidean"||e===2)return Yn(Ie(Ra(Cn(t),Ae(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Wr(Ie(Cn(t),n[0]),n[1]-1);if(e===1/0)return Wr(Ie(Cn(t),n[1]),n[0]);if(e===-1/0)return bf(Ie(Cn(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return Yn(Ie($t(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zp=V({norm_:tH});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(t,e=null,n=!1){return Zp(t,"euclidean",e,n)}const X3=V({euclideanNorm_:nH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(t){const n={x:_(t,"x","exp")};return W.runKernel(eh,n)}const ys=V({exp_:sH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(t,e=0){const n=_(t,"x","expandDims","string_or_numeric");R(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},r={dim:e};return W.runKernel(cp,s,r)}const xn=V({expandDims_:rH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(t){const n={x:_(t,"x","expm1")};return W.runKernel(th,n)}const K3=V({expm1_:iH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(t,e){const n=_(t,"x","tile","string_or_numeric");R(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const s={x:n},r={reps:e};return W.runKernel(Dh,s,r)}const Mr=V({tile_:aH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(t,e,n,s="float32"){e==null&&(e=t);const r=Ge([t,e],s),i=t<=e?t:e;for(let o=0;o<i;++o)r.set(1,o,o);const a=G(r.toTensor(),[t,e]);if(n==null)return a;if(n.length===1)return Mr(xn(a,0),[n[0],1,1]);if(n.length===2)return Mr(xn(xn(a,0),0),[n[0],n[1],1,1]);if(n.length===3)return Mr(xn(xn(xn(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const vS=V({eye_:oH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(t){const n={x:_(t,"x","floor","float32")};return W.runKernel(nh,n)}const Jp=V({floor_:lH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(t,e,n=0,s=0){const r=_(t,"x","gather"),i=_(e,"indices","gather","int32"),a={x:r,indices:i},o={axis:n,batchDims:s};return W.runKernel(dp,a,o)}const em=V({gather_:uH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(t,e){let n=_(t,"a","greater","string_or_numeric"),s=_(e,"b","greater","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(fp,r)}const Zs=V({greater_:cH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(t,e){let n=_(t,"a","greaterEqual","string_or_numeric"),s=_(e,"b","greaterEqual","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(rh,r)}const zo=V({greaterEqual_:hH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(t){const n={input:_(t,"input","imag")};return W.runKernel(Ax,n)}const lb=V({imag_:dH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(t){const n={x:_(t,"x","isFinite")};return W.runKernel(ah,n)}const Y3=V({isFinite_:fH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(t){const n={x:_(t,"x","isInf")};return W.runKernel(oh,n)}const Q3=V({isInf_:pH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(t){const n={x:_(t,"x","isNaN")};return W.runKernel(lh,n)}const Z3=V({isNaN_:mH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(t,e=.2){const s={x:_(t,"x","leakyRelu")},r={alpha:e};return W.runKernel(pp,s,r)}const ub=V({leakyRelu_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(t,e){let n=_(t,"a","less","string_or_numeric"),s=_(e,"b","less","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(mp,r)}const wf=V({less_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(t,e){let n=_(t,"a","lessEqual","string_or_numeric"),s=_(e,"b","lessEqual","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(gp,r)}const eu=V({lessEqual_:xH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return W.runKernel(Dx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(t,e=5,n=1,s=1,r=.5){const i=_(t,"x","localResponseNormalization");R(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),R(mc(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},c=W.runKernel(wp,l,u);return o?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const J3=V({localResponseNormalization_:wH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(t){const n={x:_(t,"x","log","float32")};return W.runKernel(uh,n)}const hr=V({log_:vH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(t){const n={x:_(t,"x","log1p")};return W.runKernel(ch,n)}const cb=V({log1p_:SH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(t,e){R(Hw(t),()=>"The f passed in variableGrads(f) must be a function"),R(e==null||Array.isArray(e)&&e.every(u=>u instanceof py),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const u in W.registeredVariables)e.push(W.registeredVariables[u])}const s=n?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),R(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:a,grads:o}=W.gradients(t,e,null,i);R(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),R(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Aa(t){return W.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(t){const n={x:_(t,"x","neg")};return W.runKernel(Ip,n)}const Gt=V({neg_:kH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(t){const n={x:_(t,"x","softplus")};return W.runKernel(Nh,n)}const Fh=V({softplus_:$H});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(t){const e=_(t,"x","logSigmoid");return Aa(s=>({value:Gt(Fh(Gt(s))),gradFunc:a=>M(a,ur(Gt(s)))}))(e)}const eD=V({logSigmoid_:NH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(t,e){let n=_(t,"a","sub"),s=_(e,"b","sub");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(Eh,r)}const ve=V({sub_:IH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(t,e=-1){const n=_(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Aa((r,i)=>{const o=Wr(r,e,!0),l=ve(r,o),u=ve(pe(l,"float32"),hr(Ie(ys(l),e,!0)));return i([u]),{value:u,gradFunc:(h,d)=>{const[f]=d,p=!0,m=ys(f);return ve(h,M(Ie(h,e,p),m))}}})(n)}const SS=V({logSoftmax_:TH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(t,e=null,n=!1){const s=_(t,"x","logSumExp"),r=qe(e,s.shape),i=Wr(s,r,!0),a=ve(s,i),o=ys(a),l=Ie(o,r),u=hr(l),c=re(G(i,u.shape),u);if(n){const h=on(c.shape,r);return G(c,h)}return c}const hb=V({logSumExp_:EH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(t,e){const n=_(t,"a","logicalAnd","bool"),s=_(e,"b","logicalAnd","bool");Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(yp,r)}const ji=V({logicalAnd_:RH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(t){const n={x:_(t,"x","logicalNot","bool")};return W.runKernel(xp,n)}const db=V({logicalNot_:AH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(t,e){const n=_(t,"a","logicalOr","bool"),s=_(e,"b","logicalOr","bool");Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(bp,r)}const CS=V({logicalOr_:DH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(t,e){const n=_(t,"a","logicalXor","bool"),s=_(e,"b","logicalXor","bool");return Pe(n.shape,s.shape),ji(CS(t,e),db(ji(t,e)))}const tD=V({logicalXor_:_H});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Km=2147483648;function OH(t,e,n="left"){const s=_(t,"sortedSequence","searchSorted"),r=_(e,"values","searchSorted"),i=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],o=G(s,[-1,i]),l=G(r,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Y(l.shape)>=Km)throw new Error(`values tensor size must less than ${Km}`);if(o.shape[1]>=Km)throw new Error(`trailing dim_size must less than ${Km} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return W.runKernel(jx,u,c)}const kS=V({searchSorted_:OH});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(t,e){return kS(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(t,e,n,s,r){const i=_(t,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),R(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),R(Dn(n,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),bs("maxPool",s,r);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r},h=W.runKernel(Sp,u,c);return l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fb=V({maxPool_:zH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(t,e=[1,1,1],n,s,r,i="NDHWC"){const a=_(t,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),R(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),R(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),bs("maxPool3d",s,r);const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=W.runKernel(Cp,u,c);return l?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nD=V({maxPool3d_:LH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(t,e,n,s,r=!1){const a={x:_(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},l=W.runKernel(zx,a,o);return{result:l[0],indexes:l[1]}}const MH=V({maxPoolWithArgmax_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(t,e){let n=_(t,"a","maximum"),s=_(e,"b","maximum");[n,s]=an(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(hh,r)}const _a=V({maximum_:BH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(t,e=null,n=!1){const r={x:_(t,"x","mean")},i={axis:e,keepDims:n};return W.runKernel(kp,r,i)}const tn=V({mean_:VH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(t,e="float32"){if(fr(t),e==="complex64"){const s=cn(t,"float32"),r=cn(t,"float32");return yo(s,r)}const n=Kn(Y(t),e);return W.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(t,e="float32"){if(fr(t),e==="complex64"){const s=Us(t,"float32"),r=cn(t,"float32");return yo(s,r)}const n=X2(Y(t),e);return W.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let s=_(t,"x","meshgrid",t instanceof vt?t.dtype:"float32");if(e===void 0)return[s];let r=_(e,"y","meshgrid",e instanceof vt?e.dtype:"float32");const i=Y(s.shape),a=Y(r.shape);return n==="xy"?(s=G(s,[1,-1]),r=G(r,[-1,1]),[rt(Us([a,1],s.dtype),s),rt(r,Us([1,i],r.dtype))]):(s=G(s,[-1,1]),r=G(r,[1,-1]),[rt(s,Us([1,a],s.dtype)),rt(Us([i,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(t,e){let n=_(t,"a","minimum"),s=_(e,"b","minimum");[n,s]=an(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(dh,r)}const Co=V({minimum_:WH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(t,e,n){R(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=_(t,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");R(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)R(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),R(e[o][0]>=0&&e[o][0]<=s.shape[o]-r&&e[o][1]>=0&&e[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:n},a={x:s};return W.runKernel(Np,a,i)}const $S=V({mirrorPad_:GH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(t,e){let n=_(t,"a","mod"),s=_(e,"b","mod");[n,s]=an(n,s);const r={a:n,b:s};return W.runKernel(fh,r)}const sD=V({mod_:HH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(t,e=null,n=!1){t=_(t,"x","moments");const s=qe(e,t.shape),r=tn(t,s,n);let i=r.shape;n||(i=on(r.shape,s));const a=$t(ve(pe(t,"float32"),G(r,i))),o=tn(a,s,n);return{mean:r,variance:o}}const pb=V({moments_:jH});function qH(t,e,n,s){const r=_(e,"data","multiRNNCell"),i=my(n,"c","multiRNNCell"),a=my(s,"h","multiRNNCell");let o=r;const l=[];for(let h=0;h<t.length;h++){const d=t[h](o,i[h],a[h]);l.push(d[0]),l.push(d[1]),o=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const XH=V({multiRNNCell_:qH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(t,e,n,s=!1){const r=_(t,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const l={logits:a===1?G(r,[1,-1]):r},u={numSamples:e,seed:n,normalized:s},c=W.runKernel(Lx,l,u);return a===1?G(c,[c.size]):c}const YH=V({multinomial_:KH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(t,e){let n=_(t,"a","notEqual","string_or_numeric"),s=_(e,"b","notEqual","string_or_numeric");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s};return W.runKernel(Tp,r)}const xc=V({notEqual_:QH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(t,e,n=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:_(t,"indices","oneHot","int32")},o={dtype:r,depth:e,onValue:n,offValue:s};return W.runKernel(Rp,a,o)}const NS=V({oneHot_:ZH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(t){const n={x:_(t,"x","onesLike")};return W.runKernel(Ep,n)}const dr=V({onesLike_:JH});function e6(t,e){const n=_(t,"v1","outerProduct"),s=_(e,"v2","outerProduct");R(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);const r=G(n,[-1,1]),i=G(s,[1,-1]);return rt(r,i)}const t6=V({outerProduct_:e6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(t,e,n=0){const s=_(t,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return W.runKernel(Dp,i,r)}const di=V({pad_:n6});function s6(t,e,n=0){return R(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),di(t,[e],n)}const r6=V({pad1d_:s6});function i6(t,e,n=0){return R(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),di(t,e,n)}const a6=V({pad2d_:i6});function o6(t,e,n=0){return R(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),di(t,e,n)}const l6=V({pad3d_:o6});function u6(t,e,n=0){return R(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),di(t,e,n)}const c6=V({pad4d_:u6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(t,e,n){const s=_(t,"x","spaceToBatchND");R(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),R(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),R(s.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+n[l-1][0]+n[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},i={blockShape:e,paddings:n};return W.runKernel(Up,r,i)}const mb=V({spaceToBatchND_:h6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(t,e,n,s,r,i,a){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const o=_(t,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),R(Dn(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const c=as(l.shape,e,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=p6([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,m]=f6([c.inHeight,c.inWidth],h,d),g=f?s:"valid",y=f?l:mb(l,h,p),w=(n==="avg"?()=>ib(y,e,i,g,a):()=>fb(y,e,i,g,a))(),v=f?w:ab(w,h,m);return u?G(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function f6(t,e,n){const s=n.map(c=>c[0]),r=n.map(c=>c[1]),i=t.concat(s,r),a=e.map((c,h)=>(c-i[h]%c)%c),o=r.map((c,h)=>c+a[h]),l=e.map((c,h)=>[s[h],o[h]]),u=e.map((c,h)=>[0,a[h]]);return[l,u]}function p6(t,e){const s=t.map((a,o)=>a+(a-1)*(e[o]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),i=s.map((a,o)=>a-r[o]);return s.map((a,o)=>[r[o],i[o]])}const rD=V({pool_:d6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(t,e){const n=_(t,"x","prelu"),s=_(e,"alpha","prelu"),r={x:n,alpha:s};return W.runKernel(_p,r)}const gb=V({prelu_:m6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(t,e=null,n=!1){let s=_(t,"x","prod");s.dtype==="bool"&&(s=pe(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return W.runKernel(Op,r,i)}const iD=V({prod_:g6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(t,e,n,s){const r=t.map((c,h)=>_(c,`tensors${h}`,"raggedGather","int32")),i=_(e,"paramsDenseValues","raggedGather"),a=_(n,"indices","raggedGather","int32"),o={paramsNestedSplits:r,paramsDenseValues:i,indices:a},l={outputRaggedRank:s},u=W.runKernel(Z2,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const x6=V({raggedGather_:y6});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(t,e,n){const s=_(t,"starts","raggedRange"),r=_(e,"limits","raggedRange",s.dtype),i=_(n,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:i},o=W.runKernel(J2,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const w6=V({raggedRange_:b6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(t,e,n,s,r){const i=_(t,"shape","raggedTensorToTensor","int32"),a=_(e,"values","raggedTensorToTensor"),o=_(n,"defaultValue","raggedTensorToTensor",a.dtype),l=s.map((h,d)=>_(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:r};return W.runKernel(eS,u,c)}const S6=V({raggedTensorToTensor_:v6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(t,e,n){fr(t);const s=Y(t);let r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let i=0;i<s;i++)r[i]=e();return W.makeTensor(r,t,n)}const k6=V({rand_:C6});var IS={exports:{}};IS.exports;(function(t){(function(e,n,s){function r(l){var u=this,c=o();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function a(l,u){var c=new r(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function o(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=a:this.alea=a})(Li,t)})(IS);var $6=IS.exports,TS={exports:{}};TS.exports;(function(t){(function(e,n,s){function r(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var u=new r(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}n&&n.exports?n.exports=a:this.xor128=a})(Li,t)})(TS);var N6=TS.exports,ES={exports:{}};ES.exports;(function(t){(function(e,n,s){function r(o){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var u=new r(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}n&&n.exports?n.exports=a:this.xorwow=a})(Li,t)})(ES);var I6=ES.exports,RS={exports:{}};RS.exports;(function(t){(function(e,n,s){function r(o){var l=this;l.next=function(){var c=l.x,h=l.i,d,f;return d=c[h],d^=d>>>7,f=d^d<<24,d=c[h+1&7],f^=d^d>>>10,d=c[h+3&7],f^=d^d>>>3,d=c[h+4&7],f^=d^d<<7,d=c[h+7&7],d=d^d<<13,f^=d^d<<9,c[h]=f,l.i=h+1&7,f};function u(c,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],c.x=f,c.i=0,d=256;d>0;--d)c.next()}u(l,o)}function i(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var u=new r(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(c.x&&i(c,u),h.state=function(){return i(u,{})}),h}n&&n.exports?n.exports=a:this.xorshift7=a})(Li,t)})(RS);var T6=RS.exports,AS={exports:{}};AS.exports;(function(t){(function(e,n,s){function r(o){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,f,p;return l.w=c=c+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(c^c>>>16)|0};function u(c,h){var d,f,p,m,g,y=[],x=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,x=Math.max(x,h.length)),p=0,m=-32;m<x;++m)h&&(f^=h.charCodeAt((m+32)%h.length)),m===0&&(g=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=f+g,p=d==0?p+1:0);for(p>=128&&(y[(h&&h.length||0)&127]=-1),p=127,m=4*128;m>0;--m)f=y[p+34&127],d=y[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,y[p]=f^d;c.w=g,c.X=y,c.i=p}u(l,o)}function i(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var u=new r(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(c.X&&i(c,u),h.state=function(){return i(u,{})}),h}n&&n.exports?n.exports=a:this.xor4096=a})(Li,t)})(AS);var E6=AS.exports,DS={exports:{}};DS.exports;(function(t){(function(e,n,s){function r(o){var l=this,u="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function i(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var u=new r(o),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}n&&n.exports?n.exports=a:this.tychei=a})(Li,t)})(DS);var R6=DS.exports,aD={exports:{}};const A6={},D6=Object.freeze(Object.defineProperty({__proto__:null,default:A6},Symbol.toStringTag,{value:"Module"})),_6=SM(D6);(function(t){(function(e,n,s){var r=256,i=6,a=52,o="random",l=s.pow(r,i),u=s.pow(2,a),c=u*2,h=r-1,d;function f(v,S,N){var I=[];S=S==!0?{entropy:!0}:S||{};var T=y(g(S.entropy?[v,w(n)]:v??x(),3),I),A=new p(I),D=function(){for(var O=A.g(i),U=l,B=0;O<u;)O=(O+B)*r,U*=r,B=A.g(1);for(;O>=c;)O/=2,U/=2,B>>>=1;return(O+B)/U};return D.int32=function(){return A.g(4)|0},D.quick=function(){return A.g(4)/4294967296},D.double=D,y(w(A.S),n),(S.pass||N||function(O,U,B,q){return q&&(q.S&&m(q,A),O.state=function(){return m(A,{})}),B?(s[o]=O,U):O})(D,T,"global"in S?S.global:this==s,S.state)}function p(v){var S,N=v.length,I=this,T=0,A=I.i=I.j=0,D=I.S=[];for(N||(v=[N++]);T<r;)D[T]=T++;for(T=0;T<r;T++)D[T]=D[A=h&A+v[T%N]+(S=D[T])],D[A]=S;(I.g=function(O){for(var U,B=0,q=I.i,H=I.j,L=I.S;O--;)U=L[q=h&q+1],B=B*r+L[h&(L[q]=L[H=h&H+U])+(L[H]=U)];return I.i=q,I.j=H,B})(r)}function m(v,S){return S.i=v.i,S.j=v.j,S.S=v.S.slice(),S}function g(v,S){var N=[],I=typeof v,T;if(S&&I=="object")for(T in v)try{N.push(g(v[T],S-1))}catch{}return N.length?N:I=="string"?v:v+"\0"}function y(v,S){for(var N=v+"",I,T=0;T<N.length;)S[h&T]=h&(I^=S[h&T]*19)+N.charCodeAt(T++);return w(S)}function x(){try{var v;return d&&(v=d.randomBytes)?v=v(r):(v=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(v)),w(v)}catch{var S=e.navigator,N=S&&S.plugins;return[+new Date,e,N,e.screen,w(n)]}}function w(v){return String.fromCharCode.apply(0,v)}if(y(s.random(),n),t.exports){t.exports=f;try{d=_6}catch{}}else s["seed"+o]=f})(typeof self<"u"?self:Li,[],Math)})(aD);var O6=aD.exports,F6=$6,z6=N6,L6=I6,P6=T6,M6=E6,B6=R6,tu=O6;tu.alea=F6;tu.xor128=z6;tu.xorwow=L6;tu.xorshift7=P6;tu.xor4096=M6;tu.tychei=B6;var yb=tu;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _S{constructor(e,n,s,r,i){this.mean=e,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=yb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,n,s=!1;for(;!s;){let r,i,a;do r=2*this.random()-1,i=2*this.random()-1,a=r*r+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,n=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class V6{constructor(e,n,s,r){this.alpha=e,this.beta=1/n,this.dtype=s;const i=r||Math.random();this.randu=yb.alea(i.toString()),this.randn=new _S(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,s,r,i,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,n=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<n||Math.log(i)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class U6{constructor(e=0,n=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=yb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(t,e,n=1,s="float32",r){if(fr(t),n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const i=new V6(e,n,s,r),a=Ge(t,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const G6=V({randomGamma_:W6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(t,e=0,n=1,s,r){if(fr(t),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new _S(e,n,s,!1,r),a=Ge(t,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const OS=V({randomNormal_:H6});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return OS(t,0,1,e,n)}const q6=V({randomStandardNormal_:j6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(t,e=0,n=1,s="float32",r){fr(t);const i=Ge(t,s),a=new U6(e,n,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const nu=V({randomUniform_:X6});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(t,e,n,s){return nu(t,e,n,"int32",s)}const Y6=V({randomUniformInt_:K6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(t,e,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return W.runKernel(Bx,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(t){const n={input:_(t,"input","real")};return W.runKernel(Vx,n)}const vf=V({real_:Q6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(t){const n={x:_(t,"x","reciprocal")};return W.runKernel(gh,n)}const oD=V({reciprocal_:Z6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(t){const n={x:_(t,"x","relu")};return W.runKernel(yh,n)}const ea=V({relu_:J6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(t){const n={x:_(t,"x","relu6")};return W.runKernel(xh,n)}const FS=V({relu6_:ej});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(t,e){const s={x:_(t,"x","reverse")},r={dims:e};return W.runKernel(Pp,s,r)}const Xr=V({reverse_:tj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(t){const e=_(t,"x","reverse");return R(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Xr(e,0)}const sj=V({reverse1d_:nj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rj(t,e){const n=_(t,"x","reverse");return R(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Xr(n,e)}const ij=V({reverse2d_:rj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(t,e){const n=_(t,"x","reverse");return R(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Xr(n,e)}const oj=V({reverse3d_:aj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(t,e){const n=_(t,"x","reverse");return R(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Xr(n,e)}const uj=V({reverse4d_:lj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cj(t){const n={x:_(t,"x","round")};return W.runKernel(bh,n)}const zS=V({round_:cj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(t){const n={x:_(t,"x","rsqrt","float32")};return W.runKernel(wh,n)}const LS=V({rsqrt_:hj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(t){const n={x:_(t,"x","selu")};return W.runKernel(vh,n)}const PS=V({selu_:dj});function fj(t,e,n,s,r,i=[1,1],a="NHWC"){const o=_(t,"x","separableConv2d"),l=_(e,"depthwiseFilter","separableConv2d"),u=_(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(o.rank===3&&(h=!0,c=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");R(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),R(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),R(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),R(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),R(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],f=l.shape[3];R(u.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`);const p=Yp(c,l,s,r,a,i),g=vo(p,u,1,"valid",a);return h?G(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const MS=V({separableConv2d_:fj});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pj(t,e){const n=_(t,"x","setdiff1d"),s=_(e,"y","setdiff1d");R(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),R(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),R(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await n.data(),i=await s.data(),a=new Set(i);let o=0;for(let c=0;c<r.length;c++)a.has(r[c])||o++;const l=new In([o],n.dtype),u=new In([o],"int32");for(let c=0,h=0;c<r.length;c++)a.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const mj=pj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(t){const n={x:_(t,"x","sign")};return W.runKernel(kh,n)}const lD=V({sign_:gj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(t){const n={x:_(t,"x","sin","float32")};return W.runKernel(Sh,n)}const BS=V({sin_:yj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(t){const n={x:_(t,"x","sinh")};return W.runKernel(Ch,n)}const VS=V({sinh_:xj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(t,e,n){const s=_(t,"x","slice1d");return R(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Be(s,[e],[n])}const xb=V({slice1d_:bj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(t,e,n){const s=_(t,"x","slice2d");return R(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Be(s,e,n)}const US=V({slice2d_:wj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(t,e,n){const s=_(t,"x","slice3d");return R(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Be(s,e,n)}const bb=V({slice3d_:vj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(t,e,n){const s=_(t,"x","slice4d");return R(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Be(s,e,n)}const Sf=V({slice4d_:Sj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(t,e=-1){const n=_(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return W.runKernel(Gp,s,r)}const wb=V({softmax_:Cj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(t){R(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return W.runKernel(Nx,e)}const vb=V({fft_:kj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(t){R(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return W.runKernel(Rx,e)}const Cf=V({ifft_:$j});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=G(t,[n,e]);s=Cf(r)}else{const r=[n,2*(e-1)],i=G(vf(t),[n,e]),a=G(lb(t),[n,e]),o=Xr(Be(i,[0,1],[n,e-2]),1),l=M(Xr(Be(a,[0,1],[n,e-2]),1),Ae(-1)),u=Jt([i,o],1),c=Jt([a,l],1),h=G(yo(u,c),[r[0],r[1]]);s=Cf(h)}if(s=vf(s),t.rank===3&&t.shape[0]!==0){const r=s,i=t.shape[0];s=G(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const WS=V({irfft_:Nj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(t,e,n=0){const r={x:_(t,"x","split")},i={numOrSizeSplits:e,axis:n};return W.runKernel(Wp,r,i)}const Ws=V({split_:Ij});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tj(t,e){R(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(e!=null&&e<n){const p=t.shape.map(g=>0),m=t.shape.map(g=>g);m[t.shape.length-1]=e,r=Be(t,p,m),n=e}else if(e!=null&&e>n){const p=t.shape.map(m=>m);p[t.shape.length-1]=e-n,r=Jt([t,cn(p)],t.shape.length-1),n=e}else r=t;const i=ct(r),a=G(yo(r,i),[s,n]),o=vb(a),l=Math.floor(n/2)+1,u=vf(o),c=lb(o),h=Ws(u,[l,n-l],u.shape.length-1),d=Ws(c,[l,n-l],c.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=l,G(yo(h[0],d[0]),f)}const Sb=V({rfft_:Tj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(t,e){let n=_(t,"a","squaredDifference"),s=_(e,"b","squaredDifference");[n,s]=an(n,s),Pe(n.shape,s.shape);const r={a:n,b:s},i={};return W.runKernel(Th,r,i)}const GS=V({squaredDifference_:Ej});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(t,e){const n=_(t,"x","squeeze","string_or_numeric");return G(n,Ao(n.shape,e).newShape)}const gt=V({squeeze_:Rj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(t,e=0){const n=my(t,"tensors","stack","string_or_numeric");R(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&R(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,r={axis:e};return W.runKernel(Ap,s,r)}const Hs=V({stack_:Aj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(t,e=0){const s={x:_(t,"x","step")},r={alpha:e};return W.runKernel(_h,s,r)}const zh=V({step_:Dj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(t,e,n,s,r=0,i=0,a=0,o=0,l=0){const c={x:_(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return W.runKernel(Zx,c,h)}const uD=V({stridedSlice_:_j});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oj(t){const n={x:_(t,"x","tan","float32")};return W.runKernel(Rh,n)}const cD=V({tan_:Oj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(t,e){zc(t);const n=_o(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Oo(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(t,e,n){if(zc(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=_o(t,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Oo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(t,e,n){if(zc(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=_o(t,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Oo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(t,e,n){if(zc(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=_o(t,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Oo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zj(t,e,n){if(zc(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=_o(t,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Oo(t,e,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj(t,e,n){if(zc(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=_o(t,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Oo(t,e,s,n)}function dD(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(i+` update.rank != ${r+t.length-s}`);for(let a=0;a<r;++a)if(n.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-r;++a)if(n.shape[a+r]!==t[a+s])throw new Error(i+` updates.shape[${a+r}] (${n.shape[a+r]}) != shape[${a+r}] (${t[a+r]})`)}function HS(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}dD(n,e,t)}function ta(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=n.length;let a=1;for(let h=r;h<i;++h)a*=n[h];const o=r<1?1:r,l=Y(e.shape)/o,u=[...Re(n.slice(0,r)),1],c=Y(n);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(t,e,n){const s=_(t,"tensor","tensorScatterupdate"),r=_(e,"indices","tensorScatterupdate","int32"),i=_(n,"updates","tensorScatterupdate");if(HS(i,r,s.shape),s.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${i.dtype}.`);const a={tensor:s,indices:r,updates:i},o={};return W.runKernel(Hx,a,o)}const Mj=V({tensorScatterUpdate_:Pj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(t,e=1,n=!0){const s=_(t,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:n},[o,l]=W.runKernel(eb,i,a);return{values:o,indices:l}}const fD=V({topk_:Bj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(t,e=0,n=1,s,r){if(fr(t),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new _S(e,n,s,!0,r),a=Ge(t,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const jS=V({truncatedNormal_:Vj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(t,e=0){const n=_(t,"x","unique","string_or_numeric");R(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},r={axis:e},[i,a]=W.runKernel(iS,s,r);return{values:i,indices:a}}const pD=V({unique_:Uj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(t,e,n){const s=_(t,"x","unsortedSegmentSum"),r=_(e,"segmentIds","unsortedSegmentSum","int32");R(mc(n),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},a={numSegments:n};return W.runKernel(jp,i,a)}const qS=V({unsortedSegmentSum_:Wj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(t,e=0){const n=_(t,"x","unstack","string_or_numeric");R(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},r={axis:e};return W.runKernel(Hp,s,r)}const Kr=V({unstack_:Gj});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(t,e){return kS(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(t,e=!0,n,s){return W.makeVariable(t,e,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(t,e){const n=[];for(let i=0;i<e.length;i++)e[i]&&n.push(i);const s=Ge(t,"int32"),r=Ge([n.length,t.length],"int32");for(let i=0;i<n.length;i++){const a=s.indexToLoc(n[i]),o=i*t.length;r.values.set(a,o)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jj(t){const e=_(t,"condition","whereAsync","bool"),n=await e.data(),s=XS(e.shape,n);return t!==e&&e.dispose(),s}const gD=jj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qj(t,e,n){const s=_(t,"tensor","boolMask"),r=_(e,"mask","boolMask","bool"),i=n??0,a=r.rank,o=s.shape;R(a>0,()=>"mask cannot be scalar"),_s(o.slice(i,i+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=i;m<i+a;m++)l*=o[m];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=G(s,u),h=G(r,[-1]),d=await gD(h),f=gt(d,[1]),p=em(c,f,i);return t!==s&&s.dispose(),e!==r&&r.dispose(),f.dispose(),c.dispose(),h.dispose(),d.dispose(),p}const Xj=qj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(t,e,n){const s=_(t,"x","transpose");if(e==null&&(e=s.shape.map((a,o)=>o).reverse()),R(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{R(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return s.dtype==="complex64"?Q(()=>{let a=vf(s),o=lb(s);return a=W.runKernel(xl,{x:a},i),o=W.runKernel(xl,{x:o},i),n&&(o=Gt(o)),yo(a,o)}):W.runKernel(xl,r,i)}const ut=V({transpose_:Kj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(t,e,n,s,r=!0){const i=_(t,"v","movingAverage"),a=_(e,"x","movingAverage"),o=_(n,"decay","movingAverage");PU(i,a),R(Ke(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=Ae(1),u=ve(l,o);let c=M(ve(a,i),u);if(r){R(s!=null,()=>"When using zeroDebias: true, step is required.");const h=_(s,"step","movingAverage");c=we(c,ve(l,Ra(o,h)))}return re(i,c)}const Qj=V({movingAverage_:Yj});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zj(t,e,n){fr(n);const s=_(t,"indices","scatterND","int32"),r=_(e,"updates","scatterND");HS(r,s,n);const i={indices:s,updates:r},a={shape:n};return W.runKernel(Gx,i,a)}const Jj=V({scatterND_:Zj});function e5(t,e,n,s){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(t,e,n,s=0){fr(n);const r=_(t,"sparseIndices","sparseToDense","int32"),i=_(e,"sparseValues","sparseToDense","string_or_numeric"),a=_(s,"defaultValue","sparseToDense",i.dtype);e5(r,i,n,a);const o={sparseIndices:r,sparseValues:i,defaultValue:a},l={outputShape:n};return W.runKernel(Kx,o,l)}const n5=V({sparseToDense_:t5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(t,e){const n=_(e,"indices","gatherND","int32"),r={params:_(t,"x","gatherND","string_or_numeric"),indices:n};return W.runKernel(Ex,r)}const r5=V({gatherND_:s5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(t,e){if(e==null)return t.shape.slice();if(Ke(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)e[s]==null&&t.shape[s]!=null?n.push(t.shape[s]):n.push(e[s]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(t,e,n,s){const r=_(t,"x","dropout");if(R(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),R(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof vt?r.clone():r;const i=i5(r,n),a=1-e,o=we(Jp(re(nu(i,0,1,"float32",s),a)),a);return M(r,o)}const yD=V({dropout_:a5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function KS(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return bn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function o5(t,e,n=1){const s=_(t,"predictions","inTopK"),r=_(e,"targets","inTopK");R(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),R(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),_s(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=s.shape[s.shape.length-1];R(n>0&&n<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);const a=await s.data(),o=await r.data(),[l,u]=[a.length/i,i],c=Rn("bool",l);for(let h=0;h<l;h++){const d=h*u,f=a.subarray(d,d+u),p=[];for(let m=0;m<f.length;m++)p.push({value:f[m],index:m});p.sort((m,g)=>g.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(p[m].index===o[h]){c[h]=1;break}}return t!==s&&s.dispose(),e!==r&&r.dispose(),li(c,r.shape,"bool")}const l5=o5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(t,e,n,s,r,i="NHWC",a){let o=t;t.rank===3&&(o=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=G(e,[1,e.shape[0],e.shape[1],e.shape[2]])),R(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),R(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),R(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=i==="NHWC"?o.shape[3]:o.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];R(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),R(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),bs("conv2dDerFilter",r,a);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return W.runKernel(px,h,d)}const YS=V({conv2DBackpropFilter_:u5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return M(t,zh(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function kb(t,e){let n=e;const s=An(t.shape,e.shape);return s.length>0&&(n=Ie(n,s)),G(n,t.shape)}function $b(t,e,n,s){if(e==="linear")return t;if(e==="relu")return ea(t);if(e==="elu")return Qp(t);if(e==="relu6")return FS(t);if(e==="prelu")return gb(t,n);if(e==="leakyrelu")return ub(t,s);if(e==="sigmoid")return ur(t);throw new Error(`Unknown fused activation ${e}.`)}const Nb=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Nb(W.state.gradientDepth,l)===!1){R(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=vo(t,e,n,s,r,i,a);return o!=null&&(N=re(N,o)),$b(N,l,u,c)}const h=_(t,"x","conv2d","float32"),d=_(e,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=G(h,[1,h.shape[0],h.shape[1],h.shape[2]])),R(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),R(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),bs("fused conv2d",s,a);const m=r==="NHWC"?f.shape[3]:f.shape[1];R(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),R(Dn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const g=Lt(f.shape,d.shape,n,i,s,a);let y;o!=null&&(y=_(o,"bias","fused conv2d"),[y]=an(y,h),r==="NHWC"?Pe(g.outShape,y.shape):(R(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),R(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){const N=u.shape;if(R(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)R(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{Pe(N,g.outShape)}catch{const T=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(T)}x=_(u,"prelu weights","fused conv2d")}const w=(N,I)=>{R(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[T,A,D,O]=I,U=Cb(N,D,l);R(wo(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const B=mS(A.shape,U,T,n,s),q=YS(A,U,T.shape,n,s),H=[B,q];if(O!=null){const L=kb(O,U);H.push(L)}return H},v={x:f,filter:d,bias:y,preluActivationWeights:x},S={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?Aa((I,T,A)=>{let D=W.runKernel(mf,v,S);return A([T,I,D]),p&&(D=G(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:w}})(f,d):Aa((I,T,A,D)=>{let O=W.runKernel(mf,v,S);return D([T,I,O,A]),p&&(O=G(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:w}})(f,d,y)}const bD=V({fusedConv2d_:c5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(t,e,n,s,r,i=[1,1],a){let o=t;t.rank===3&&(o=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;l.rank===3&&(l=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return W.runKernel(vx,u,c)}const wD=V({depthwiseConv2dNativeBackpropFilter_:h5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(t,e,n,s,r,i=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:t},h=W.runKernel(Sx,u,c);return l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vD=V({depthwiseConv2dNativeBackpropInput_:d5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Nb(W.state.gradientDepth,l)===!1){let S=Yp(t,e,n,s,r,i,a);return o!=null&&(S=re(S,o)),$b(S,l,u,c)}const h=_(t,"x","depthwiseConv2d","float32"),d=_(e,"filter","depthwiseConv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=G(h,[1,h.shape[0],h.shape[1],h.shape[2]])),R(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),R(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),R(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),R(Dn(n,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),bs("fused depthwiseConv2d",s,a);const m=Lt(f.shape,d.shape,n,i,s,a,!0);let g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=an(g,h),Pe(m.outShape,g.shape));let y;u!=null&&(y=_(u,"prelu weights","fused depthwiseConv2d"));const x=(S,N)=>{R(wo(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[I,T,A,D]=N,O=Cb(S,A,l),U=vD(T.shape,O,I,n,s,i,a),B=wD(T,O,I.shape,n,s,i,a);if(D!=null){const q=kb(g,O);return[U,B,q]}return[U,B]},w={x:f,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?Aa((N,I,T)=>{let A=W.runKernel(gf,w,v);return T([I,N,A]),p&&(A=G(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(f,d):Aa((N,I,T,A)=>{let D=W.runKernel(gf,w,v);return A([I,N,D,T]),p&&(D=G(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:x}})(f,d,g)}const p5=V({fusedDepthwiseConv2d_:f5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(Nb(W.state.gradientDepth,i)===!1){let O=rt(t,e,n,s);return r!=null&&(O=re(O,r)),$b(O,i,a,o)}let l=_(t,"a","fused matMul"),u=_(e,"b","fused matMul");[l,u]=an(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],p=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Y(p),y=Y(m);R(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=Pe(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,f]),v=n?G(l,[g,c,d]):G(l,[g,d,c]),S=s?G(u,[y,f,h]):G(u,[y,h,f]);let N;r!=null&&(N=_(r,"bias","fused matMul"),[N]=an(N,l),Pe(w,N.shape));let I;a!=null&&(I=_(a,"prelu weights","fused matMul"));const T=(O,U)=>{const[B,q,H,L]=U,Z=Cb(G(O,H.shape),H,i);let K,ee;if(!n&&!s?(K=rt(Z,q,!1,!0),ee=rt(B,Z,!0,!1)):!n&&s?(K=rt(Z,q,!1,!1),ee=rt(Z,B,!0,!1)):n&&!s?(K=rt(q,Z,!1,!0),ee=rt(B,Z,!1,!1)):(K=rt(q,Z,!0,!0),ee=rt(Z,B,!0,!0)),r!=null){const se=kb(L,Z);return[K,ee,se]}else return[K,ee]},A={a:v,b:S,bias:N,preluActivationWeights:I},D={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};return r==null?Aa((U,B,q)=>{const H=W.runKernel(pf,A,D);return q([U,B,H]),{value:G(H,w),gradFunc:T}})(v,S):Aa((U,B,q,H)=>{const L=W.runKernel(pf,A,D);return H([U,B,L,q]),{value:G(L,w),gradFunc:T}})(v,S,N)}const lv=V({fusedMatMul_:m5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=Object.freeze(Object.defineProperty({__proto__:null,conv2d:bD,depthwiseConv2d:p5,matMul:lv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(t){return KS(t,.54,.46)}const x5=V({hammingWindow_:y5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(t){return KS(t,.5,.5)}const SD=V({hannWindow_:b5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Be(t,i,e)),i+=n;if(s)for(;i<t.size;){const o=i+e-t.size,l=Jt([Be(t,i,e-o),Oh([o],r)]);a.push(l),i+=n}return a.length===0?Gr([],[0,e]):G(Jt(a),[a.length,e])}const CD=V({frame_:w5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(t,e,n,s,r=SD){s==null&&(s=xD(e));const i=CD(t,e,n),a=M(i,r(e));return Sb(a,s)}const S5=V({stft_:v5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(t,e,n,s,r="bilinear",i=0){const a=_(t,"image","cropAndResize"),o=_(e,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),u=o.shape[0];R(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),R(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),R(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),R(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),R(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),R(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return W.runKernel(xx,c,h)}const k5=V({cropAndResize_:C5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(t){const e=_(t,"image","flipLeftRight","float32");R(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return W.runKernel(Tx,n,{})}const N5=V({flipLeftRight_:$5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(t){const e=_(t,"image","grayscaleToRGB"),n=e.rank-1,s=e.shape[n];R(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),R(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,n),r[n]=3,Mr(e,r)}const T5=V({grayscaleToRGB_:I5});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(t){const e=_(t,"image","RGBToGrayscale"),n=e.rank-1,s=e.shape[n];R(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),R(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,i=pe(e,"float32"),a=bn([.2989,.587,.114]);let o;switch(e.rank){case 2:o=_u("ij,j->i",i,a);break;case 3:o=_u("ijk,k->ij",i,a);break;case 4:o=_u("ijkl,l->ijk",i,a);break;case 5:o=_u("ijklm,m->ijkl",i,a);break;case 6:o=_u("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=xn(o,-1),pe(o,r)}const R5=V({rgbToGrayscale_:E5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(t,e,n=0,s=.5){const r=_(t,"image","rotateWithOffset","float32");R(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},a={radians:e,fillValue:n,center:s};return W.runKernel(nb,i,a)}const D5=V({rotateWithOffset_:A5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lh(t,e,n,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=t.shape[0];return n=Math.min(n,a),R(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),R(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),R(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),R(e.rank===1,()=>"scores must be a 1D tensor"),R(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),R(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=_(t,"boxes","nonMaxSuppression","float32"),a=_(e,"scores","nonMaxSuppression","float32"),o=Lh(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return W.runKernel(Px,{boxes:i,scores:a},l)}const O5=V({nonMaxSuppression_:_5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(t,e,n){const s=z5(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function z5(t,e,n){return P5(t,e,n||L5)}function L5(t,e){return t>e?1:t<e?-1:0}function P5(t,e,n){let s=0,r=t.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(e,t[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ib(t,e,n,s,r){return ZS(t,e,n,s,r,0)}function QS(t,e,n,s,r,i){return ZS(t,e,n,s,r,0,!1,i,!0)}function Tb(t,e,n,s,r,i){return ZS(t,e,n,s,r,i,!0)}function ZS(t,e,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>r&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort($N);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:w}=g;if(y<r)break;let v=!1;for(let S=h.length-1;S>=w;--S){const N=M5(t,x,h[S]);if(N>=s){v=!0;break}if(g.score=g.score*B5(s,c,N),g.score<=r)break}g.suppressBeginIndex=h.length,v||(g.score===y?(h.push(x),d.push(g.score)):g.score>r&&F5(u,g,$N))}const f=h.length,p=n-f;o&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=f),m}function M5(t,e,n){const s=t.subarray(e*4,e*4+4),r=t.subarray(n*4,n*4+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),f=(o-i)*(l-a),p=(h-u)*(d-c);if(f<=0||p<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),y=Math.min(o,h),x=Math.min(l,d),w=Math.max(y-m,0)*Math.max(x-g,0);return w/(f+p-w)}function B5(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function $N(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function V5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=_(t,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),o=Lh(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ib(u,c,n,s,r);return i!==t&&i.dispose(),a!==e&&a.dispose(),bn(h,"int32")}const U5=V5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=_(t,"boxes","nonMaxSuppression"),o=_(e,"scores","nonMaxSuppression"),l=Lh(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=W.runKernel(Mx,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const G5=V({nonMaxSuppressionWithScore_:W5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function H5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=_(t,"boxes","nonMaxSuppressionAsync"),o=_(e,"scores","nonMaxSuppressionAsync"),l=Lh(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:f}=Tb(c,h,n,s,r,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:bn(d,"int32"),selectedScores:bn(f)}}const j5=H5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=_(t,"boxes","nonMaxSuppression"),o=_(e,"scores","nonMaxSuppression"),l=Lh(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},p=W.runKernel(Q2,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const X5=V({nonMaxSuppressionPadded_:q5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function K5(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=_(t,"boxes","nonMaxSuppressionAsync"),o=_(e,"scores","nonMaxSuppressionAsync"),l=Lh(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([a.data(),o.data()]),{selectedIndices:p,validOutputs:m}=QS(d,f,u,c,h,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:bn(p,"int32"),validOutputs:Ae(m,"int32")}}const Y5=K5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(t,e,n=!1,s=!1){const r=_(t,"images","resizeBilinear");R(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),R(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),R(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=W.runKernel(Lp,o,l);return a?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const kD=V({resizeBilinear_:Q5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(t,e,n=!1,s=!1){const r=_(t,"images","resizeNearestNeighbor");R(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),R(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),R(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),R(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:n,halfPixelCenters:s,size:e},u=W.runKernel(zp,o,l);return a?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const $D=V({resizeNearestNeighbor_:Z5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(t,e="binary",n=!1,s=.5){const r=_(t,"image","threshold"),i=.2989,a=.587,o=.114,l=r.shape[0]*r.shape[1];let u=M(bn([s]),255),c,h,d,f;if(R(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),R(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),R(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),R(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=Ws(r,[1,1,1],-1);const g=M(c,i),y=M(h,a),x=M(d,o);f=re(re(g,y),x)}else f=t;if(e==="otsu"){const g=_3(pe(zS(f),"int32"),li([]),256);u=e8(g,l)}const p=n?eu(f,u):Zs(f,u);return pe(M(p,255),"int32")}function e8(t,e){let n=bn([-1]),s=bn([0]),r=bn([0]),i,a,o,l,u,c;for(let h=0;h<t.size-1;h++){i=Be(t,0,h+1),a=Be(t,h+1),u=we(Ie(i),e),c=we(Ie(a),e);const d=Ie(M(i,bc(0,i.size)));o=we(d,Ie(i));const f=Oh(a.shape,i.size),p=re(bc(0,a.size),f),m=M(a,p);l=we(Ie(m),Ie(a));const g=ve(o,l),y=ve(o,l),x=M(u,c);r=M(M(x,g),y);const w=Zs(r,s);s=is(w,r,s),n=is(w,bn([h]),n)}return n}const t8=V({threshold_:J5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(t,e,n="nearest",s="constant",r=0,i){const a=_(t,"image","transform","float32"),o=_(e,"transforms","transform","float32");R(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),R(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),R(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return W.runKernel(tb,l,u)}const s8=V({transform_:n8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(t,e,n){const s=_(t,"a","bandPart");R(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,a]=s.shape.slice(-2);let o,l;typeof e=="number"?(R(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),R(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),o=_(e<0?i:e,"numLower","bandPart")):(R(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=is(wf(e,0),i,Co(e,i))),typeof n=="number"?(R(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),R(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),l=_(n<0?a:n,"numUpper","bandPart")):(R(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=is(wf(n,0),a,Co(n,a)));const u=G(bc(0,i,1,"int32"),[-1,1]),c=bc(0,a,1,"int32"),h=ve(u,c),d=ji(eu(h,o),zo(h,Gt(l))),f=cn([i,a],s.dtype);return G(Hs(Kr(G(s,[-1,i,a])).map(p=>is(d,p,f))),r)}const i8=V({bandPart_:r8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(t){let e;if(Array.isArray(t)){e=!1,R(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=t[0].shape[0];for(let i=1;i<t.length;++i)R(t[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[i].shape[0]} vs. ${r})`)}else e=!0,t=Ws(t,t.shape[0],0).map(r=>gt(r,[0]));R(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],s=t;for(let r=0;r<t.length;++r)n.push(W.tidy(()=>{let i=s[r];if(r>0)for(let a=0;a<r;++a){const o=M(Ie(M(n[a],i)),n[a]);i=ve(i,o)}return we(i,Zp(i,"euclidean"))}));return e?Hs(n,0):n}const o8=V({gramSchmidt_:a8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(t,e=!1){if(R(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return NN(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((l,u)=>l*u),s=Kr(G(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[u,c]=NN(l,e);r.push(u),i.push(c)});const a=G(Hs(r,0),t.shape),o=G(Hs(i,0),t.shape);return[a,o]}}function NN(t,e=!1){return W.tidy(()=>{R(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],s=t.shape[1];let r=vS(n),i=Sa(t);const a=Gr([[1]],[1,1]);let o=Sa(a);const l=n>=s?s:n;for(let u=0;u<l;++u){const c=i,h=o,d=r;[o,i,r]=W.tidy(()=>{const f=Be(i,[u,u],[n-u,1]),p=Zp(f),m=Be(i,[u,u],[1,1]),g=is(Zs(m,0),Gr([[-1]]),Gr([[1]])),y=ve(m,M(g,p)),x=we(f,y);x.shape[0]===1?o=Sa(a):o=Jt([a,Be(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=Gt(we(rt(g,y),p)),v=Be(i,[u,0],[n-u,s]),S=M(w,o),N=ut(o);if(u===0)i=ve(v,rt(S,rt(N,v)));else{const A=ve(v,rt(S,rt(N,v)));i=Jt([Be(i,[0,0],[u,s]),A],0)}const I=ut(S),T=Be(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=ve(T,rt(rt(T,o),I));else{const A=ve(T,rt(rt(T,o),I));r=Jt([Be(r,[0,0],[n,u]),A],1)}return[o,i,r]}),ze([c,h,d])}return!e&&n>s&&(r=Be(r,[0,0],[n,s]),i=Be(i,[0,0],[s,s])),[r,i]})}const u8=V({qr_:l8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ks;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ks||(ks={}));function c8(t,e,n=ks.SUM_BY_NONZERO_WEIGHTS){const s=_(t,"losses","computeWeightedLoss");let r=null;e!=null&&(r=_(e,"weights","computeWeightedLoss"));const i=r==null?s:M(s,r);if(n===ks.NONE)return i;if(n===ks.SUM)return Ie(i);if(n===ks.MEAN){if(r==null)return tn(i);{const a=s.size/r.size,o=we(Ie(i),Ie(r));return a>1?we(o,Ae(a)):o}}if(n===ks.SUM_BY_NONZERO_WEIGHTS){if(r==null)return we(Ie(i),Ae(s.size));{const a=M(r,Us(s.shape)),o=pe(Ie(xc(a,Ae(0))),"float32");return we(Ie(i),o)}}throw Error(`Unknown reduction: ${n}`)}const Oa=V({computeWeightedLoss_:c8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(t,e,n,s=ks.SUM_BY_NONZERO_WEIGHTS){const r=_(t,"labels","absoluteDifference"),i=_(e,"predictions","absoluteDifference");let a=null;n!=null&&(a=_(n,"weights","absoluteDifference")),_s(r.shape,i.shape,"Error in absoluteDifference: ");const o=Cn(ve(r,i));return Oa(o,a,s)}const d8=V({absoluteDifference_:h8});function f8(t,e,n,s,r=ks.SUM_BY_NONZERO_WEIGHTS){const i=_(t,"labels","cosineDistance"),a=_(e,"predictions","cosineDistance");let o=null;s!=null&&(o=_(s,"weights","cosineDistance")),_s(i.shape,a.shape,"Error in cosineDistance: ");const l=Ae(1),u=ve(l,Ie(M(i,a),n,!0));return Oa(u,o,r)}const p8=V({cosineDistance_:f8});function m8(t,e,n,s=ks.SUM_BY_NONZERO_WEIGHTS){let r=_(t,"labels","hingeLoss");const i=_(e,"predictions","hingeLoss");let a=null;n!=null&&(a=_(n,"weights","hingeLoss")),_s(r.shape,i.shape,"Error in hingeLoss: ");const o=Ae(1);r=ve(M(Ae(2),r),o);const l=ea(ve(o,M(r,i)));return Oa(l,a,s)}const g8=V({hingeLoss_:m8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(t,e,n,s=1,r=ks.SUM_BY_NONZERO_WEIGHTS){const i=_(t,"labels","huberLoss"),a=_(e,"predictions","huberLoss");let o=null;n!=null&&(o=_(n,"weights","huberLoss")),_s(i.shape,a.shape,"Error in huberLoss: ");const l=Ae(s),u=Cn(ve(a,i)),c=Co(u,l),h=ve(u,c),d=re(M(Ae(.5),$t(c)),M(l,h));return Oa(d,o,r)}const x8=V({huberLoss_:y8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(t,e,n,s=1e-7,r=ks.SUM_BY_NONZERO_WEIGHTS){const i=_(t,"labels","logLoss"),a=_(e,"predictions","logLoss");let o=null;n!=null&&(o=_(n,"weights","logLoss")),_s(i.shape,a.shape,"Error in logLoss: ");const l=Ae(1),u=Ae(s),c=Gt(M(i,hr(re(a,u)))),h=M(ve(l,i),hr(re(ve(l,a),u))),d=ve(c,h);return Oa(d,o,r)}const w8=V({logLoss_:b8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(t,e,n,s=ks.SUM_BY_NONZERO_WEIGHTS){const r=_(t,"labels","meanSquaredError"),i=_(e,"predictions","meanSquaredError");let a=null;n!=null&&(a=_(n,"weights","meanSquaredError")),_s(r.shape,i.shape,"Error in meanSquaredError: ");const o=GS(r,i);return Oa(o,a,s)}const S8=V({meanSquaredError_:v8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(t,e){const n=_(t,"labels","sigmoidCrossEntropyWithLogits"),s=_(e,"logits","sigmoidCrossEntropyWithLogits");_s(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=ea(s),i=M(s,n),a=cb(ys(Gt(Cn(s))));return re(ve(r,i),a)}function k8(t,e,n,s=0,r=ks.SUM_BY_NONZERO_WEIGHTS){let i=_(t,"multiClassLabels","sigmoidCrossEntropy");const a=_(e,"logits","sigmoidCrossEntropy");let o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),_s(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Ae(s),c=Ae(1),h=Ae(.5);i=re(M(i,ve(c,u)),M(h,u))}const l=C8(i,a);return Oa(l,o,r)}const $8=V({sigmoidCrossEntropy_:k8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Aa((r,i,a)=>{const l=hb(i,[n],!0),u=ve(pe(i,"float32"),l);a([r,u]);const c=Gt(M(u,r));return{value:Ie(c,[n]),gradFunc:(f,p)=>{const[m,g]=p,y=on(f.shape,[n]);return[M(G(f,y),ve(pe(m,"float32"),ys(g))),M(G(f,y),ve(ys(g),pe(m,"float32")))]}}})(t,e)}function I8(t,e,n,s=0,r=ks.SUM_BY_NONZERO_WEIGHTS){let i=_(t,"onehotLabels","softmaxCrossEntropy");const a=_(e,"logits","softmaxCrossEntropy");let o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),_s(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Ae(s),c=Ae(1),h=Ae(i.shape[1]);i=re(M(i,ve(c,u)),we(u,h))}const l=N8(i,a);return Oa(l,o,r)}const T8=V({softmaxCrossEntropy_:I8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(t,e,n,s){const r=_(t,"indices","sparseFillEmptyRows","int32"),i=_(e,"values","sparseFillEmptyRows"),a=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:i,denseShape:a,defaultValue:o},u=W.runKernel(tS,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const R8=V({sparseFillEmptyRows_:E8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A8(t,e,n){const s=_(t,"inputIndices","sparseReshape","int32"),r=_(e,"inputShape","sparseReshape","int32"),i=_(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:s,inputShape:r,newShape:i},o=W.runKernel(nS,a);return{outputIndices:o[0],outputShape:o[1]}}const D8=V({sparseReshape_:A8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _8(t,e,n){const s=_(t,"data","sparseSegmentMean"),r=_(e,"indices","sparseSegmentMean","int32"),i=_(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return W.runKernel(qx,a)}const O8=V({sparseSegmentMean_:_8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(t,e,n){const s=_(t,"data","sparseSegmentSum"),r=_(e,"indices","sparseSegmentSum","int32"),i=_(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return W.runKernel(Xx,a)}const z8=V({sparseSegmentSum_:F8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(t,e,n,s,r,i,a,o){const l=_(t,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=_(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=W.runKernel(Jx,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const P8=V({stringNGrams_:L8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(t,e,n=!0){const s=_(t,"input","stringSplit","string"),r=_(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:n},a={input:s,delimiter:r},o=W.runKernel(sS,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const B8=V({stringSplit_:M8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(t,e){const n=_(t,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return W.runKernel(rS,r,s)}const U8=V({stringToHashBucketFast_:V8});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(t,e,n,s=!0){const r=_(t,"input","staticRegexReplace","string"),i={pattern:e,rewrite:n,replaceGlobal:s};return W.runKernel(Qx,{x:r},i)}const G8=V({staticRegexReplace_:W8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8={fft:vb,ifft:Cf,rfft:Sb,irfft:WS},j8={hammingWindow:x5,hannWindow:SD,frame:CD,stft:S5},gs={flipLeftRight:N5,grayscaleToRGB:T5,resizeNearestNeighbor:$D,resizeBilinear:kD,rgbToGrayscale:R5,rotateWithOffset:D5,cropAndResize:k5,nonMaxSuppression:O5,nonMaxSuppressionAsync:U5,nonMaxSuppressionWithScore:G5,nonMaxSuppressionWithScoreAsync:j5,nonMaxSuppressionPadded:X5,nonMaxSuppressionPaddedAsync:Y5,threshold:t8,transform:s8},ND={bandPart:i8,gramSchmidt:o8,qr:u8},q8={absoluteDifference:d8,computeWeightedLoss:Oa,cosineDistance:p8,hingeLoss:g8,huberLoss:x8,logLoss:w8,meanSquaredError:S8,sigmoidCrossEntropy:$8,softmaxCrossEntropy:T8},X8={sparseFillEmptyRows:R8,sparseReshape:D8,sparseSegmentMean:O8,sparseSegmentSum:z8},K8={stringNGrams:P8,stringSplit:B8,stringToHashBucketFast:U8,staticRegexReplace:G8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8=new Map,Q8=new Map;class Ph{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class _r{constructor(){this.classNameMap={}}static getMap(){return _r.instance==null&&(_r.instance=new _r),_r.instance}static register(e){_r.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function oe(t,e,n){R(t.className!=null,()=>"Class being registered does not have the static className property defined."),R(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),R(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const s=n,r=e+">"+s;return _r.register(t),Y8.set(r,t),Q8.set(t,r),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lo extends Ph{minimize(e,n=!1,s){const{value:r,grads:i}=this.computeGradients(e,s);if(s!=null){const a=s.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return ze(i),n?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return CH(e,n)}dispose(){this.iterations_!=null&&ze(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ae(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Lo,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ID extends Lo{static get className(){return"Adadelta"}constructor(e,n,s=null){super(),this.learningRate=e,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=W.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Q(()=>ct(i).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Q(()=>ct(i).variable(a))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;Q(()=>{const c=re(M(l,this.rho),M($t(o),1-this.rho)),h=M(we(Yn(re(u,this.epsilon)),Yn(re(l,this.epsilon))),o),d=re(M(u,this.rho),M($t(h),1-this.rho));l.assign(c),u.assign(d);const f=re(M(h,-this.learningRate),i);i.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ze(this.accumulatedGrads.map(e=>e.variable)),ze(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TD extends Lo{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=W.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Q(()=>Oh(i.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const o=this.accumulatedGrads[r].variable;Q(()=>{const l=re(o,$t(a));o.assign(l);const u=re(M(we(a,Yn(re(l,W.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ze(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ED extends Lo{static get className(){return"Adam"}constructor(e,n,s,r=null){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=Ae(n).variable(),this.accBeta2=Ae(s).variable()}),r==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=ve(1,this.accBeta1),r=ve(1,this.accBeta2);n.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:Q(()=>ct(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:Q(()=>ct(o).variable(l))});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=re(M(c,this.beta1),M(u,1-this.beta1)),f=re(M(h,this.beta2),M($t(u),1-this.beta2)),p=we(d,s),m=we(f,r);c.assign(d),h.assign(f);const g=re(M(we(p,re(Yn(m),this.epsilon)),-this.learningRate),o);o.assign(g)}),this.accBeta1.assign(M(this.accBeta1,this.beta1)),this.accBeta2.assign(M(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ze(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ze(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),Q(()=>{this.accBeta1.assign(Ra(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ra(this.beta2,this.iterations_+1))});const n=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RD extends Lo{static get className(){return"Adamax"}constructor(e,n,s,r=null,i=0){super(),this.learningRate=e,this.beta1=n,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=Ae(0).variable(),this.accBeta1=Ae(n).variable()}),r==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Q(()=>{const s=ve(1,this.accBeta1),r=we(-this.learningRate,re(M(this.iteration,this.decay),1));n.forEach((i,a)=>{const o=W.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:ct(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:ct(o).variable(l)});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=re(M(c,this.beta1),M(u,1-this.beta1)),f=M(h,this.beta2),p=Cn(u),m=_a(f,p);c.assign(d),h.assign(m);const g=re(M(we(r,s),we(d,re(m,this.epsilon))),o);o.assign(g)}),this.iteration.assign(re(this.iteration,1)),this.accBeta1.assign(M(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ze(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ze(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JS extends Lo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=W.registeredVariables[s];Q(()=>{const o=re(M(this.c,i),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Pn(Ae(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AD extends JS{static get className(){return"Momentum"}constructor(e,n,s=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=Ae(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=W.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Q(()=>ct(i).variable(!1))});const a=this.accumulations[r].variable,o=Array.isArray(e)?e[r].tensor:e[s];o!=null&&Q(()=>{let l;const u=re(M(this.m,a),o);this.useNesterov?l=re(M(this.c,re(o,M(u,this.m))),i):l=re(M(this.c,u),i),a.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ze(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DD extends Lo{static get className(){return"RMSProp"}constructor(e,n=.9,s=0,r=null,i=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=W.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Q(()=>ct(i).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Q(()=>ct(i).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Q(()=>ct(i).variable(a))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;Q(()=>{const c=re(M(l,this.decay),M($t(o),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=re(M(h,this.decay),M(o,1-this.decay)),f=we(M(o,this.learningRate),Yn(ve(c,re($t(d),this.epsilon)))),p=re(M(u,this.momentum),f);l.assign(c),h.assign(d),u.assign(p);const m=ve(i,p);i.assign(m)}else{const h=re(M(l,this.decay),M($t(o),1-this.decay)),d=re(M(u,this.momentum),we(M(o,this.learningRate),Yn(re(h,this.epsilon))));l.assign(h),u.assign(d);const f=ve(i,d);i.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ze(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ze(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ze(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8=[ID,TD,ED,RD,AD,DD,JS];function J8(){for(const t of Z8)oe(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq="model",tq=".json",nq=".weights.bin";function IN(t){return new Promise(e=>setTimeout(e)).then(t)}class Pl{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Pl.URL_SCHEME)&&(e=e.slice(Pl.URL_SCHEME.length)),(e==null||e.length===0)&&(e=eq),this.modelJsonFileName=e+tq,this.weightDataFileName=e+nq}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=wi.join(e.weightData),s=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=c3(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await IN(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await IN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Xp(e)}}}}Pl.URL_SCHEME="downloads://";class sq{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const s=new FileReader;s.onload=r=>{const i=JSON.parse(r.target.result),a=i.modelTopology;if(a==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const l=cS(i,u=>this.loadWeights(u));e(l)},s.onerror=r=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const n=[],s=[];for(const a of e)n.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),i=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(i).then(a=>[n,a])}loadWeightsFile(e,n){return new Promise((s,r)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;s(o)},i.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],s=this.weightsFiles.map(i=>kN(i.name)),r={};for(const i of e)i.paths.forEach(a=>{const o=kN(a);if(n.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(o)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const rq=t=>J().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Pl.URL_SCHEME)?iq(t.slice(Pl.URL_SCHEME.length)):null;Yt.registerSaveRouter(rq);function iq(t="model"){return new Pl(t)}function aq(t){return new sq(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(t,e,n,s){a(t),n=n??0,s=s??1,o(n,s);let r=0;const i=l=>(l.then(u=>{const c=n+ ++r/t.length*(s-n);return e(c),u}),l);function a(l){R(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){R(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),R(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),R(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(t.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _D(t,e){e==null&&(e={});const n=e.fetchFunc==null?J().platform.fetch:e.fetchFunc,s=t.map(h=>n(h,e.requestInit,{isBinary:!0})),o=(e.onProgress==null?await Promise.all(s):await TN(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(o):await TN(o,e.onProgress,.5,1)}function oq(t,e){var n;const s=e.fetchFunc==null?J().platform.fetch:e.fetchFunc;let r=0,i;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async a=>{for(var o;r<t.length;){i||(i=(await s(t[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){r++,i=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,r/t.length);continue}a.enqueue(u);return}a.close()}})}async function lq(t,e="",n,s){return OD(a=>_D(a,{requestInit:s}))(t,e,n)}function OD(t){return async(e,n="",s)=>{const r=e.map(()=>!1),i={},a=s!=null?s.map(()=>!1):[],o=[];if(e.forEach((f,p)=>{let m=0;f.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,x=Al[y]*Y(g.shape),w=()=>{r[p]=!0,i[p]==null&&(i[p]=[]),i[p].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((v,S)=>{v===g.name&&(w(),a[S]=!0)}):w(),o.push(g.name),m+=x})}),!a.every(f=>f)){const f=s.filter((p,m)=>!a[m]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce((f,p,m)=>(p&&f.push(m),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(p=>{const m=n+(n.endsWith("/")?"":"/")+p;u.push(m)})});const c=await t(u),h={};let d=0;return l.forEach(f=>{const p=e[f].paths.length,m=new wi(c.slice(d,d+p));i[f].forEach(y=>{const x=m.slice(y.groupOffset,y.groupOffset+y.sizeBytes),w=a3(x,[y.manifestEntry]);for(const v in w)h[v]=w[v]}),d+=p}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq="application/octet-stream",cq="application/json";class eC{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(R(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=J().platform.fetch,R(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&R(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=c3(e,s);if(n.body.append("model.json",new Blob([JSON.stringify(r)],{type:cq}),"model.json"),e.weightData!=null){const a=wi.join(e.weightData);n.body.append("model.weights.bin",new Blob([a],{type:uq}),"model.weights.bin")}const i=await this.fetch(this.path,n);if(i.ok)return{modelArtifactsInfo:Xp(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=n.modelTopology,r=n.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return cS(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),s=nv(e.weightsManifest),r=()=>oq(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=hq(n),i=this.weightPathPrefix||s,a=[],o=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):a.push(i+u+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const n=await this.getWeightUrls(e),s=nv(e),r=await _D(n,this.loadOptions);return[s,r]}}eC.URL_SCHEME_REGEX=/^https?:\/\//;function hq(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),s=t.substring(0,e),r=n>e?t.substring(n):"";return[s+"/",r]}function uv(t){return t.match(eC.URL_SCHEME_REGEX)!=null}const FD=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(s=>uv(s)):n=uv(t),n)return tC(t,e)}return null};Yt.registerSaveRouter(FD);Yt.registerLoadRouter(FD);function tC(t,e){return new eC(t,e)}function dq(t,e){return tC(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C1{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class zD{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class fq{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function pq(t,e,n,s){const r=arguments;return new fq(LD(...r))}function LD(t,e,n,s){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new C1(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new C1({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new C1({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:s}))}function mq(t){return new zD(t)}function gq(t){return new zD(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:wi,browserFiles:aq,browserHTTPRequest:dq,concatenateArrayBuffers:u3,copyModel:xW,decodeWeights:a3,decodeWeightsStream:l3,encodeWeights:tv,fromMemory:pq,fromMemorySync:LD,getLoadHandlers:rW,getModelArtifactsForJSON:cS,getModelArtifactsForJSONSync:h3,getModelArtifactsInfoForJSON:Xp,getSaveHandlers:d3,getWeightSpecs:nv,http:tC,isHTTPScheme:uv,listModels:gW,loadWeights:lq,moveModel:bW,registerLoadRouter:sW,registerSaveRouter:nW,removeModel:yW,weightsLoaderFactory:OD,withSaveHandler:mq,withSaveHandlerSync:gq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jo,EN=!1;function yq(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)i=!0;else if(t.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(dy(cy,W.backendName)!=null){const p={pixels:t},m={numChannels:e};return W.runKernel(cy,p,m)}const[u,c]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h;if(a)h=t.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)h=t.data;else if(i||r||o){if(jo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")jo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else jo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});jo.canvas.width=u,jo.canvas.height=c,jo.drawImage(t,0,0,u,c),h=jo.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const p=u*c;d=new Int32Array(p*e);for(let m=0;m<p;m++)for(let g=0;g<e;++g)d[m*e+g]=h[m*4+g]}return hD(d,[c,u,e],"int32")}function xq(t){if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const e=t.rank===2?1:t.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`)}async function nC(t,e){let n=_(t,"img","toPixels");if(!(t instanceof vt)){const u=n;n=pe(u,"int32"),u.dispose()}xq(n);const[s,r]=n.shape.slice(0,2),i=n.rank===2?1:n.shape[2],a=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<i;d++){const f=a[u*i+d];if(n.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(n.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);i===1?(c[0]=f*o,c[1]=f*o,c[2]=f*o):c[d]=f*o}const h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(e!=null){EN||dy(Y2,W.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),EN=!0),e.width=r,e.height=s;const u=e.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return n!==t&&n.dispose(),l}const MD=V({fromPixels_:yq});function Eb(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(Y(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,i=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const o=t.shape,l=r.slice();l.pop();let u=1;for(let h=i;h<n;++h)u*=o[h],l.push(o[h]);const c=[...Re(t.shape).map(h=>h/u),1].slice(0,i);return[l,a,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=-2,bq=-1;function Rb(t,e,n){const s=t.shape.length;R(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),R(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)R(e[r]+n[r]<=t.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}function wq(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Ab(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function BD(t,e,n,s){const r=[...t];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<n;i++)i===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function VD(t,e,n){return n<=t?n:n-(e-1)}function UD(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function vq(t,e,n,s,r,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const f=e[0],p=n+1;c=WD(a,f,p,s,t),h=GD(o,f,p,r,t),d=BD(i,f,p,t)}else for(let f=0;f<u;f++)c[f]=jD(a,s,i,t,f,l),h[f]=qD(o,r,i,t,f,l),d[f]=HD(i,f,l);return{begin:c,end:h,strides:d}}function WD(t,e,n,s,r){const i=[...r],a=UD(n,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const l=VD(e,n,o);let u=s[l];t&1<<l&&(u=0),i[o]=u}return i}function GD(t,e,n,s,r){const i=[...r],a=UD(n,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const l=VD(e,n,o);let u=s[l];t&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[o]=u}for(let o=0;o<i.length;o++){const l=r[o];i[o]<0&&(i[o]+=l),i[o]=El(0,i[o],r[o])}return i}function HD(t,e,n){let s=t[e];return(n&1<<e||s==null)&&(s=1),s}function jD(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=El(0,a,l-1),a}function qD(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),o>0?a=El(0,a,l):a=El(-1,a,l-1),a}function sC(t,e,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function rC(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function tm(t,e,n){let s;const r=t.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{R(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return n==null?i=new Array(r).fill(-1):typeof n=="number"?i=[n,...new Array(r-1).fill(-1)]:n.length<r?i=n.concat(new Array(r-n.length).fill(-1)):i=n,i=i.map((a,o)=>a>=0?a:(R(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),t.shape[o]-s[o])),[s,i]}function Db(t,e,n,s,r,i,a,o,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)c&&1<<w&o&&h.numAddAxisAfterEllipsis++,1<<w&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Sq(h,d);let f=!0,p=!0,m=!0;const g=[],y=[];for(let w=0;w<t.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const v=!!(d.shrinkAxisMask&1<<w),S=t[w];if(S===-1){g.push(v?1:-1);continue}const N=[d.beginMask&1<<w,d.endMask&1<<w],I=[d.strides[w]>0?0:-1,d.strides[w]>0?S:S-1];if(v&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const T=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(v){const U=d.begin[w]<0?S+d.begin[w]:d.begin[w];if(d.begin[w]=U,d.end[w]=d.begin[w]+1,U<0||U>=S)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=RN(d.begin[w],0,d.strides[w],S,N,I),d.end[w]=RN(d.end[w],1,d.strides[w],S,N,I);const O=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===S;f=f&&O,p=p&&(w===0&&d.strides[w]===1||O)}else f=f&&d.strides[w]===1&&T,p=p&&(w===0&&d.strides[w]===1||T);let A,D=!1;if(d.beginValid&&d.endValid?(A=d.end[w]-d.begin[w],D=!0):v?(A=1,D=!0):T&&S>=0&&(d.strides[w]<0?A=-S:A=S,D=!0),D){let O;A===0||A<0!=d.strides[w]<0?O=0:O=Math.trunc(A/d.strides[w])+(A%d.strides[w]!==0?1:0),g.push(O)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const v=d.finalShapeGatherIndices[w];v>=0?y.push(g[v]):v===cv&&y.push(1)}return{finalShapeSparse:y.filter((w,v)=>d.finalShapeGatherIndices[v]!==cv),finalShape:y,isIdentity:f,sliceDim0:p,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Sq(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<t.dims;s++)if(1<<s&t.ellipsisMask){const r=Math.min(e.dims-(t.dims-s)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<r;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&t.newAxisMask)e.finalShapeGatherIndices.push(cv),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[s]),t.end!=null&&(e.end[n]=t.end[s]),e.strides[n]=t.strides[s],t.beginMask&1<<s&&(e.beginMask|=1<<n),t.endMask&1<<s&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(bq),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[n]=s,n++}}function RN(t,e,n,s,r,i){if(r[e])return n>0?i[e]:i[e+1&1];{const a=t<0?s+t:t;return a<i[0]?i[0]:a>i[1]?i[1]:a}}const Cq=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Rb,computeFlatOffset:rC,computeOutShape:Ab,getNormalizedAxes:vq,isSliceContinous:sC,maskToAxes:wq,parseSliceParams:tm,sliceInfo:Db,startForAxis:jD,startIndicesWithElidedDims:WD,stopForAxis:qD,stopIndicesWithElidedDims:GD,stridesForAxis:HD,stridesWithElidedDims:BD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kq{static sgd(e){return new JS(e)}static momentum(e,n,s=!1){return new AD(e,n,s)}static rmsprop(e,n=.9,s=0,r=null,i=!1){return new DD(e,n,s,r,i)}static adam(e=.001,n=.9,s=.999,r=null){return new ED(e,n,s,r)}static adadelta(e=.001,n=.95,s=null){return new ID(e,n,s)}static adamax(e=.002,n=.9,s=.999,r=null,i=0){return new RD(e,n,s,r,i)}static adagrad(e,n=.1){return new TD(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wu=kq;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t();function XD(){return new Promise(t=>$q(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(t,e){const n=t[0].length;t.forEach((r,i)=>{R(r.length===n,()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`)}),R(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=t[0];t.forEach((r,i)=>{for(let a=0;a<n;a++)R(a===e||r[a]===s[a],()=>`Error in concat${n}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function Is(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ai;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(ai||(ai={}));function KD(t,e,n){let s=new Array;if(n==null&&e==null)return s;if(e==null)for(;s.length<t+n.length;)s.push(-1);else s=e.slice();if(n==null)return s;if(t+n.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],a=s[s.length-n.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+t}] = ${i} but shape[${r+t}] = ${o}`)}else s[a]=i}return s}function YD(t){const e={FIRST_DIM_SIZE:ai.FIRST_DIM_SIZE,VALUE_ROWIDS:ai.VALUE_ROWIDS,ROW_LENGTHS:ai.ROW_LENGTHS,ROW_SPLITS:ai.ROW_SPLITS,ROW_LIMITS:ai.ROW_LIMITS,ROW_STARTS:ai.ROW_STARTS},n=[];for(const s of t)if(s in e)n.push(e[s]);else break;return n}function QD(t){return t.length===0?0:t[0]===ai.FIRST_DIM_SIZE?t.length-1:t.length}function ZD(t,e){if(t==null||e==null)return;const n=t.length,s=e.length;if(n>=s)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const i=t[r],a=e[r+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-t.length}] = ${i} but ragged tensor input.flatValues.shape[${r-t.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=30;function Ob(t){return t<=iC?t:jw(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(t,e,n){const s=n*(typeof t=="number"?t:t[0]),r=e*(typeof t=="number"?t:t[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const i=e.length;for(let a=0;a<i;++a)r=r.concat([t[a+1]/e[a],e[a]]);r=r.concat(t.slice(i+1))}return r}function ru(t,e,n=!0){const s=[];if(n){s.push(e);for(let r=e+1;r<t;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],i=[];for(let a=1;a<t;++a)a>=e*2+1||a%2===1?i.push(a):r.push(a);s.push(...r),s.push(0),s.push(...i)}return s}function iu(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let i=1;i<t.length;++i)i<=e.length?s?r.push(e[i-1]*t[i]):r.push(t[i]/e[i-1]):r.push(t[i]);return r}function zb(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function Lb(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nm=1.7580993408473768,sm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pb=.3275911,Mb=.254829592,Bb=-.284496736,Vb=1.421413741,Ub=-1.453152027,Wb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function JD(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function e_(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function t_(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],s[Math.floor(r/4)]=t[r+1];return{real:n,imag:s}}function aC(t,e){const n=t[e*2],s=t[e*2+1];return{real:n,imag:s}}function n_(t,e,n,s){t[s*2]=e,t[s*2+1]=n}function s_(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const i=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function r_(t,e,n){const s=(n?2:-2)*Math.PI*(t/e),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k1="->",Nq=/->/g,AN=",",DN="...";function Gb(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(Nq,"").length)/k1.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${k1}").`);const[s,r]=t.split(k1);R(s.indexOf(DN)===-1,()=>`The ellipsis notation ("${DN}") is not supported yet.`);const i=s.split(AN),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<r.length;++d){const f=r[d];if(!i.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);o.indexOf(f)===-1&&o.push(f)}for(let d=0;d<s.length;++d){const f=s[d];o.indexOf(f)===-1&&f!==AN&&o.push(f)}const l=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<i[d].length;++f)l[d].push(o.indexOf(i[d][f]))}const u=o.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function Hb(t,e){let n=new Array(t);n.fill(-1);for(let r=0;r<e.length;++r)n[e[r]]=r;const s=[];for(let r=0;r<t;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function jb(t,e,n){const s=new Array(t);for(let r=0;r<n.length;++r){const i=n[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=i[a]:R(s[e[r][a]]===i[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(i)}, but got dimension ${i[a]}`)}}function qb(t,e){const n=t,s=[];let r=0;t.length===0&&n.push(-1),r=t.length+1;for(let a=0;a<r;++a)s.push([]);const i=[];for(let a=0;a<n.length;++a){const o=n[a],l=Iq(e,o);for(const u of l)i.indexOf(u)===-1&&(s[a].push(u),i.push(u))}return{path:n,steps:s}}function Xb(t){return t.every((e,n)=>e===n)}function Iq(t,e){const n=[];for(let s=0;s<t.length;++s)(t[s].length===0||t[s].indexOf(e)!==-1||e===-1)&&n.push(s);return n}function Kb(t,e,n=0){let s=[];if(typeof e=="number")R(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);R(r<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[i]=t.shape[n]-a}R(t.shape[n]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function a_(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function o_(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function u_(t,e){return`size ${t} must be non-negative, not ${e}`}function c_(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function h_(t,e){const n=Y(t),s=Y(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${t} outputShape= ${e}`}function d_(t,e){const n=Y(t),s=Y(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(){return"segment ids must be >= 0"}function f_(){return"segment ids are not increasing"}function p_(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function m_(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(t,e){let n=!1,s;for(t<=iC?(s=t,n=!0):s=jw(t,Math.floor(Math.sqrt(t)));!n;)s>e||s===t?n=!0:s=jw(t,s+1);return s}function oC(t,e,n){const s=[],r=t.length;for(let i=0;i<r;i++)i!==e?s.push(t[i]):s.push(n);return s}function Yb(t,e,n,s){const r=e.shape.length,i=t.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(t.shape[h]),l*=t.shape[h];for(let h=s;h<n;h++)o.push(t.shape[h]),u*=t.shape[h];for(let h=s;h<r;h++)o.push(e.shape[h]);for(let h=n+1;h<i;h++)o.push(t.shape[h]),c*=t.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}const Tq=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Yb,computeOutShape:oC,segOpComputeOptimalWindowSize:g_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(t){try{return t.map(e=>ci(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function y_(t){return t.map(e=>va(e))}const Eq=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Mb,ERF_A2:Bb,ERF_A3:Vb,ERF_A4:Ub,ERF_A5:Wb,ERF_P:Pb,PARALLELIZE_THRESHOLD:iC,get RowPartitionType(){return ai},SELU_SCALE:sm,SELU_SCALEALPHA:nm,applyActivation:$b,assertAndGetBroadcastShape:Pe,assertAxesAreInnerMostDims:wn,assertParamsConsistent:_b,assignToTypedArray:n_,axesAreInnerMostDims:wS,calculateShapes:ta,checkEinsumDimSizes:jb,checkPadOnDimRoundingMode:bs,combineLocations:j3,combineRaggedTensorToTensorShapes:KD,complexWithEvenIndex:e_,complexWithOddIndex:t_,computeConv2DInfo:Lt,computeConv3DInfo:vi,computeDefaultPad:fS,computeDilation2DInfo:Fo,computeOptimalWindowSize:Ob,computeOutAndReduceShapes:dn,computeOutShape:Is,computePool2DInfo:as,computePool3DInfo:pr,convertConv2DDataFormat:Qs,decodeEinsumEquation:Gb,eitherStridesOrDilationsAreOne:Dn,expandShapeToKeepDim:on,exponent:r_,exponents:s_,fromStringArrayToUint8:y_,fromUint8ToStringArray:pi,getAxesPermutation:It,getBroadcastDims:So,getComplexWithIndex:aC,getEinsumComputePath:qb,getEinsumPermutation:Hb,getFusedBiasGradient:kb,getFusedDyActivation:Cb,getImageCenter:Fb,getInnerMostAxes:Pt,getPermuted:ru,getRaggedRank:QD,getReductionAxes:An,getReshaped:su,getReshapedPermuted:iu,getRowPartitionTypesHelper:YD,getSliceBeginCoords:zb,getSliceSize:Lb,getSparseFillEmptyRowsIndicesDenseShapeMismatch:i_,getSparseFillEmptyRowsNegativeIndexErrorMessage:a_,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:o_,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:c_,getSparseReshapeInputOutputMismatchErrorMessage:d_,getSparseReshapeInputOutputMultipleErrorMessage:h_,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:l_,getSparseReshapeNegativeOutputDimErrorMessage:u_,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:m_,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:hv,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:f_,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:p_,getUndoAxesPermutation:Ji,isIdentityPermutation:Xb,log:yU,mergeRealAndImagArrays:fi,prepareAndValidate:Eb,prepareSplitSize:Kb,segment_util:Tq,shouldFuse:Nb,slice_util:Cq,splitRealAndImagArrays:JD,stridesOrDilationsArePositive:zl,tupleValuesAreOne:wo,upcastType:Vn,validateDefaultValueShape:ZD,validateInput:HS,validateUpdateShape:dD,warn:rr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */J8();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x_={kernelName:qf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,zh(pe(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq={kernelName:Mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=$t(pe(n,"float32")),r=Yn(ve(Ae(1),s));return Gt(we(t,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq={kernelName:Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Yn(ve($t(pe(n,"float32")),1));return we(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq={kernelName:Ql,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{let o=t;const l=An(n.shape,r);return l.length>0&&(o=Ie(o,l)),G(o,n.shape)},b:()=>{let o=t;const l=An(s.shape,r);return l.length>0&&(o=Ie(o,l)),G(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q={kernelName:Xf,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((s,r)=>{n[r]=()=>t.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:Kf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ct(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq={kernelName:Yf,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ct(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq={kernelName:Vc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,Yn(ve(Ae(1),$t(pe(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq={kernelName:Uc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Yn(re(Ae(1),$t(pe(n,"float32"))));return we(t,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq={kernelName:Hc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{const o=re($t(n),$t(s));let l=M(t,we(s,o));const u=An(n.shape,r);return u.length>0&&(l=Ie(l,u)),G(l,n.shape)},b:()=>{const o=re($t(n),$t(s));let l=Gt(M(t,we(n,o)));const u=An(s.shape,r);return u.length>0&&(l=Ie(l,u)),G(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:Wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,re($t(pe(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq={kernelName:Gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,ve(Ae(1),$t(pe(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(t,e,n,s,r,i){const a=_(t,"dy","avgPool3dGrad"),o=_(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;o.rank===4&&(c=!0,l=G(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),R(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),R(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),bs("avgPool3dGrad",r,i);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},f=W.runKernel(ux,h,d);return c?G(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const Uq=V({avgPool3dGrad_:Vq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq={kernelName:Zf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Uq(t,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gq(t,e,n,s,r){const i=_(t,"dy","avgPoolGrad"),a=_(e,"input","avgPoolGrad");R(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;a.rank===3&&(u=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),R(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),R(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=W.runKernel(lx,c,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Hq=V({avgPoolGrad_:Gq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq={kernelName:Qf,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>Hq(t,s,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq={kernelName:Jf,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return!i&&!a?{a:()=>rt(t,r,!1,!0),b:()=>rt(s,t,!0,!1)}:!i&&a?{a:()=>rt(t,r,!1,!1),b:()=>rt(t,s,!0,!1)}:i&&!a?{a:()=>rt(r,t,!1,!0),b:()=>rt(s,t,!1,!1)}:{a:()=>rt(r,t,!0,!0),b:()=>rt(t,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq={kernelName:ep,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>mb(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq={kernelName:mU,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Ie(t,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq={kernelName:jc,gradFunc:t=>({x:()=>t.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq={kernelName:qc,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq={kernelName:Xc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>is(ji(zo(s,r),eu(s,i)),t,ct(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq={kernelName:tp,inputsToSave:["x"],gradFunc:x_.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX={kernelName:np,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map(l=>l.shape),{axis:r}=n,i=qe(r,e[0].shape)[0],a=s.map(l=>l[i]);return Ws(t,a,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX={kernelName:sp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return R(wo(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>mS(s.shape,t,r,a,o,l),filter:()=>YS(s,t,r.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nX={kernelName:rp,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>vo(t,r,i,a,o,1,l),filter:()=>YS(t,s,r.shape,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(t,e,n,s,r){let i=t;t.rank===4&&(i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;a.rank===4&&(a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),R(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),R(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),R(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),R(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),R(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return W.runKernel(mx,o,l)}const rX=V({conv3DBackpropFilter_:sX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iX={kernelName:ip,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;R(wo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,o]=e;return{x:()=>B3(a.shape,t,o,r,i),filter:()=>rX(a,t,o.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aX={kernelName:Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(Gt(BS(pe(n,"float32"))),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX={kernelName:Yc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(VS(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lX={kernelName:ap,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const o=It([r],s.rank);let l=xS(t,r,i,!a);return o!=null&&(l=ut(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX={kernelName:op,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=s??[1,1];R(wo(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return R(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),R(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),R(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),R(Dn(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),bs("depthwiseConv2d",i,a),{x:()=>vD(l.shape,t,u,r,i,o,a),filter:()=>wD(l,t,u.shape,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cX={kernelName:lp,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>W.runKernel(ly,i,n),filter:()=>W.runKernel(uy,a,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX={kernelName:Zc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>W.runKernel($x,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dX={kernelName:Jc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=M(ys(Gt($t(n))),2/Math.sqrt(Math.PI));return{x:()=>M(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX={kernelName:eh,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX={kernelName:cp,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>G(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX={kernelName:th,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,ys(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX={kernelName:nh,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX={kernelName:sh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{const o=we(t,pe(s,"float32")),l=An(n.shape,r);return l.length>0?G(Ie(o,l),n.shape):o},b:()=>{let o=M(t,pe(n,"float32"));const l=An(s.shape,r);l.length>0&&(o=G(Ie(o,l),s.shape));const u=$t(s);return Gt(we(o,pe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xX={kernelName:hp,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=o??Ae(1),u=An(i.shape,r.shape),c=[];if(i.rank===1){for(let v=0;v<r.shape.length-1;++v)c.push(r.shape[v]);c.push(1)}const h=ve(r,i),d=M(t,l),f=LS(re(a,Ae(s))),p=M(M(M(f,f),f),Ae(-.5));return{x:()=>i.rank===1?G(M(M(t,Mr(G(f,[1,1,1,i.shape[0]]),c)),l),r.shape):G(M(M(t,f),l),r.shape),mean:()=>{let v=M(M(f,Ae(-1)),d);return i.rank===1&&(v=Ie(v,u)),G(v,i.shape)},variance:()=>{let v=M(M(p,h),d);return i.rank===1&&(v=Ie(v,u)),G(v,i.shape)},scale:()=>{const v=M(h,f);let S=M(t,v);return i.rank===1&&(S=Ie(S,u)),G(S,i.shape)},offset:()=>{let v=t;return i.rank===1&&(v=Ie(v,u)),G(v,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX={kernelName:dp,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i,batchDims:a}=n,o=qe(i,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,f=c.size,p=d.slice(0,o),m=p.length,g=d.slice(i,d.length).slice(1),y=g.length,x=_N(0,m),w=_N(m+1,m+1+y),v=ON([p,[f],g]),S=G(h,v),N=G(c,[f]),I=ON([[m],x,w]),T=ut(S,I);let A=qS(T,N,u.shape[o]);const D=Ji(I);return A=ut(A,D),A};if(a===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>Hs(c.map((f,p)=>l(f,r.slice(p,1),t.slice(p,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,t),indices:()=>r}}};function _N(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function ON(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX={kernelName:rh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>ct(n),b:()=>ct(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX={kernelName:ih,gradFunc:t=>({x:()=>pe(t,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX={kernelName:ah,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX={kernelName:oh,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX={kernelName:lh,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X={kernelName:pp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,i=Zs(s,0);return{x:()=>is(i,t,M(t,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX={kernelName:ch,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,re(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX={kernelName:uh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,pe(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX={kernelName:gU,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const a=ys(s);return ve(t,M(Ie(t,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return W.runKernel(_x,o,l)}const RX=V({localResponseNormalizationBackprop_:EX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX={kernelName:wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>RX(s,r,t,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(t,e,n,s){return e.rank<n.rank&&(e=G(e,on(e.shape,s))),t.rank<n.rank&&(t=G(t,on(t.shape,s))),{x:()=>M(t,pe(hi(n,e),t.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN={kernelName:vp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,i=e[0],a=e[1],o=qe(r,i.shape),l=b_(t,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX={kernelName:hh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>M(t,pe(zo(n,s),"float32")),b:()=>M(t,pe(wf(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(t,e,n,s,r,i,a){const o=_(t,"dy","maxPool3dGrad"),l=_(e,"input","maxPool3dGrad"),u=_(n,"output","maxPool3dGrad");let c=o,h=l,d=u,f=!1;l.rank===4&&(f=!0,c=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=G(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),R(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),R(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),R(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),bs("maxPool3dGrad",i,a);const p={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:i,dimRoundingMode:a},g=W.runKernel(Fx,p,m);return f?G(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const OX=V({maxPool3dGrad_:_X});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX={kernelName:Cp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>OX(t,s,r,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(t,e,n,s,r,i,a){const o=_(t,"dy","maxPoolGrad"),l=_(e,"input","maxPoolGrad"),u=_(n,"output","maxPoolGrad");R(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),R(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),R(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),bs("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return W.runKernel(Ox,c,h)}const LX=V({maxPoolGrad_:zX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX={kernelName:Sp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>LX(t,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MX={kernelName:kp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,i=qe(r,s.shape),o=dn(s.shape,i)[1],l=Y(o);return{x:()=>{const c=s.shape.slice();i.forEach(f=>{c[f]=1});const h=G(t,c);return we(M(h,Us(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX={kernelName:$p,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=qe(r,i.shape),l=b_(t,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX={kernelName:dh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>M(t,pe(eu(n,s),"float32")),b:()=>M(t,pe(Zs(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX={kernelName:Np,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map(a=>a[0]);return{x:()=>Be(t,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX={kernelName:fh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{const o=An(n.shape,r);return o.length>0?G(Ie(t,o),n.shape):t},b:()=>{const o=M(t,Gt(Jp(we(n,s)))),l=An(s.shape,r);return l.length>0?G(Ie(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX={kernelName:ph,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{const o=M(t,pe(s,"float32")),l=An(n.shape,r);return l.length>0?G(Ie(o,l),n.shape):o},b:()=>{const o=M(t,pe(n,"float32")),l=An(s.shape,r);return l.length>0?G(Ie(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX={kernelName:Ip,gradFunc:t=>({x:()=>Gt(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX={kernelName:Rp,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>cn(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX={kernelName:Ep,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX={kernelName:Ap,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Kr(t,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN={kernelName:Dp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map(a=>a[0]);return{x:()=>Be(t,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX={kernelName:mh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=Pe(i.shape,a.shape);return{a:()=>{const c=pe(a,"float32");let h=M(t,M(c,Ra(i,ve(c,Ae(1)))));const d=An(i.shape,o);return d.length>0&&(h=Ie(h,d)),G(h,i.shape)},b:()=>{const c=Zs(i,0),h=is(c,hr(i),ct(i));let d=M(t,M(r,h));const f=An(a.shape,o);return f.length>0&&(d=Ie(d,f)),G(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX={kernelName:_p,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Zs(n,0);return{x:()=>is(r,t,M(t,s)),alpha:()=>{let i=is(r,ct(t),M(t,n));const a=An(s.shape,t.shape);return a.length>0&&(i=Ie(i,a)),G(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(t,e,n){const s=t.shape.slice();s[n]=1;const r=G(e,s),i=yy(t,n,!0,!1),a=yy(t,n,!0,!0),o=M(i,a);return M(r,o)}function ZX(t,e,n){const s=t.shape.length,r=s-n.length,i=It(n,s);let a=t;i!=null&&(a=ut(t,i));const o=a.shape.slice(),u=o.splice(s-n.length,n.length).reduce((d,f)=>d*f,1);o.push(u);const c=a.reshape(o);let h=QX(c,e,r);if(h=h.reshape(a.shape),i!=null){const d=Ji(i);h=ut(h,d)}return h}const JX={kernelName:Op,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;let i=[];return r==null?i=s.shape.map((a,o)=>o):typeof r=="number"?i=[r]:i=r,{x:()=>ZX(s,t,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK={kernelName:Qc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{const o=we(t,pe(s,"float32")),l=An(n.shape,r);return l.length>0?G(Ie(o,l),n.shape):o},b:()=>{let o=M(t,pe(n,"float32"));const l=An(s.shape,r);l.length>0&&(o=G(Ie(o,l),s.shape));const u=$t(s);return Gt(we(o,pe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK={kernelName:gh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,Gt($t(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK={kernelName:xh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=M(eu(n,6),zh(n));return{x:()=>M(t,pe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK={kernelName:yh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,pe(zh(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rK={kernelName:Fp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>G(t,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK={kernelName:Lp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>W.runKernel(Wx,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK={kernelName:zp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>W.runKernel(Ux,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK={kernelName:Pp,gradFunc:(t,e,n)=>{const{dims:s}=n,r=qe(s,t.shape);return{x:()=>Xr(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK={kernelName:bh,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK={kernelName:wh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Gt(we(t,M(Ra(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK={kernelName:Mp,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>pe(ct(n),"float32"),t:()=>M(t,pe(n,t.dtype)),e:()=>M(t,pe(db(n),t.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK={kernelName:vh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const s=Zs(n,Ae(0)),r=Ae(nm),i=Ae(sm),a=M(t,i),o=M(M(t,r),ys(pe(n,"float32")));return is(s,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK={kernelName:$h,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,M(n,ve(Ae(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK={kernelName:kh,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK={kernelName:Sh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(ob(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK={kernelName:Ch,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(yS(pe(n,"float32")),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK={kernelName:Bp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=tm(s,r,i),u=[];for(let c=0;c<t.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>di(t,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK={kernelName:Gp,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=!0,a=M(t,s);return{logits:()=>ve(a,M(Ie(a,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK={kernelName:Nh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,ur(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN={kernelName:Up,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>ab(t,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN={kernelName:Wp,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Jt(t,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK={kernelName:Ih,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,M(Yn(pe(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK={kernelName:Yx,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(t,M(pe(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK={kernelName:Th,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ae(2);return{a:()=>M(t,M(r,ve(n,s))),b:()=>M(t,M(r,ve(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK={kernelName:_h,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Pe(n.shape,s.shape);return{a:()=>{let o=t;const l=An(n.shape,r);return l.length>0&&(o=Ie(o,l)),G(o,n.shape)},b:()=>{let o=t;const l=An(s.shape,r);return l.length>0&&(o=Ie(o,l)),G(Gt(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK={kernelName:Vp,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;qe(i,s.shape).forEach(u=>{r[u]=1});const o=G(t,r),l=M(o,Us(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K={kernelName:Rh,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>we(t,$t(ob(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK={kernelName:Ah,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>M(ve(Ae(1),$t(n)),t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK={kernelName:Dh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let a=ct(s);if(s.rank===1)for(let o=0;o<r[0];++o)a=re(a,Be(t,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)a=re(a,Be(t,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)a=re(a,Be(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)a=re(a,Be(t,[o*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK={kernelName:xl,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=Ji(r);return{x:()=>ut(t,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK={kernelName:Hp,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Hs(t,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:jp,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>AK(t,n)}}};function AK(t,e){const n=_a(e,ct(e)),s=em(t,n);let r=zo(e,Ae(0,"int32"));const i=s.rank-r.rank;for(let o=0;o<i;++o)r=xn(r,o+1);r=ji(r,Us(s.shape,"bool"));const a=ct(s);return is(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK={kernelName:qp,gradFunc:t=>({x:()=>ct(t)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K=[x_,Rq,Aq,Dq,_q,Oq,Fq,zq,Lq,Pq,Mq,Bq,Wq,jq,qq,Xq,Kq,Yq,Qq,Zq,Jq,eX,nX,tX,iX,aX,oX,lX,uX,cX,eK,hX,dX,fX,pX,mX,yX,gX,xX,bX,wX,vX,SX,CX,kX,$X,NX,IX,TX,AX,FN,FN,DX,FX,PX,MX,BX,VX,UX,WX,GX,HX,jX,qX,XX,zN,zN,KX,YX,JX,tK,nK,sK,rK,iK,aK,oK,lK,uK,cK,hK,dK,fK,pK,mK,gK,yK,xK,LN,LN,PN,PN,bK,vK,wK,SK,CK,kK,$K,NK,IK,TK,EK,RK,DK];for(const t of _K)xU(t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.abs=function(){return this.throwIfDisposed(),Cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.acos=function(){return this.throwIfDisposed(),v3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.acosh=function(){return this.throwIfDisposed(),S3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.add=function(t){return this.throwIfDisposed(),re(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.all=function(t,e){return this.throwIfDisposed(),dS(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.any=function(t,e){return this.throwIfDisposed(),gy(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.argMax=function(t){return this.throwIfDisposed(),Fl(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.argMin=function(t){return this.throwIfDisposed(),C3(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.asScalar=function(){return this.throwIfDisposed(),R(this.size===1,()=>"The array must have only 1 element."),G(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.asType=function(t){return this.throwIfDisposed(),pe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.as1D=function(){return this.throwIfDisposed(),G(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.as2D=function(t,e){return this.throwIfDisposed(),G(this,[t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),G(this,[t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),G(this,[t,e,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),G(this,[t,e,n,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.asin=function(){return this.throwIfDisposed(),k3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.asinh=function(){return this.throwIfDisposed(),$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.atan=function(){return this.throwIfDisposed(),N3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.atan2=function(t){return this.throwIfDisposed(),I3(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.atanh=function(){return this.throwIfDisposed(),T3(this)};ne().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),ib(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),ab(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),Kp(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.broadcastTo=function(t){return this.throwIfDisposed(),sc(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.cast=function(t){return this.throwIfDisposed(),pe(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.ceil=function(){return this.throwIfDisposed(),O3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Rs(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof vt&&(t=[t]),Jt([this,...t],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.conv1d=function(t,e,n,s,r,i){return this.throwIfDisposed(),pS(this,t,e,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),gS(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.conv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),vo(this,t,e,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.cos=function(){return this.throwIfDisposed(),ob(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.cosh=function(){return this.throwIfDisposed(),yS(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),yy(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),xS(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),U3(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.depthwiseConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),Yp(this,t,e,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),W3(this,t,e,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.divNoNan=function(t){return this.throwIfDisposed(),G3(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.div=function(t){return this.throwIfDisposed(),we(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.dot=function(t){return this.throwIfDisposed(),H3(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.elu=function(){return this.throwIfDisposed(),Qp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.equal=function(t){return this.throwIfDisposed(),hi(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.erf=function(){return this.throwIfDisposed(),bS(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),X3(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.exp=function(){return this.throwIfDisposed(),ys(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.expandDims=function(t){return this.throwIfDisposed(),xn(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.expm1=function(){return this.throwIfDisposed(),K3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.fft=function(){return this.throwIfDisposed(),vb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.flatten=function(){return this.throwIfDisposed(),G(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.floor=function(){return this.throwIfDisposed(),Jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.floorDiv=function(t){return this.throwIfDisposed(),hS(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.gather=function(t,e,n){return this.throwIfDisposed(),em(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.greaterEqual=function(t){return this.throwIfDisposed(),zo(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.greater=function(t){return this.throwIfDisposed(),Zs(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.ifft=function(){return this.throwIfDisposed(),Cf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.irfft=function(){return this.throwIfDisposed(),WS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.isFinite=function(){return this.throwIfDisposed(),Y3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.isInf=function(){return this.throwIfDisposed(),Q3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.isNaN=function(){return this.throwIfDisposed(),Z3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.leakyRelu=function(t){return this.throwIfDisposed(),ub(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.lessEqual=function(t){return this.throwIfDisposed(),eu(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.less=function(t){return this.throwIfDisposed(),wf(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),J3(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logSigmoid=function(){return this.throwIfDisposed(),eD(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logSoftmax=function(t){return this.throwIfDisposed(),SS(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),hb(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.log=function(){return this.throwIfDisposed(),hr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.log1p=function(){return this.throwIfDisposed(),cb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logicalAnd=function(t){return this.throwIfDisposed(),ji(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logicalNot=function(){return this.throwIfDisposed(),db(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logicalOr=function(t){return this.throwIfDisposed(),CS(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.logicalXor=function(t){return this.throwIfDisposed(),tD(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),rt(this,t,e,n)};ne().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),fb(this,t,e,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.max=function(t,e){return this.throwIfDisposed(),Wr(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.maximum=function(t){return this.throwIfDisposed(),_a(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.mean=function(t,e){return this.throwIfDisposed(),tn(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.min=function(t,e){return this.throwIfDisposed(),bf(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.minimum=function(t){return this.throwIfDisposed(),Co(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),$S(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.mod=function(t){return this.throwIfDisposed(),sD(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.mul=function(t){return this.throwIfDisposed(),M(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.neg=function(){return this.throwIfDisposed(),Gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Zp(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.notEqual=function(t){return this.throwIfDisposed(),xc(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),NS(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.onesLike=function(){return this.throwIfDisposed(),dr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.pad=function(t,e){return this.throwIfDisposed(),di(this,t,e)};ne().prototype.pool=function(t,e,n,s,r,i){return this.throwIfDisposed(),rD(this,t,e,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.pow=function(t){return this.throwIfDisposed(),Ra(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.prelu=function(t){return this.throwIfDisposed(),gb(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.prod=function(t,e){return this.throwIfDisposed(),iD(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.reciprocal=function(){return this.throwIfDisposed(),oD(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.relu=function(){return this.throwIfDisposed(),ea(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.relu6=function(){return this.throwIfDisposed(),FS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.reshapeAs=function(t){return this.throwIfDisposed(),G(this,t.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.reshape=function(t){return this.throwIfDisposed(),G(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),kD(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),$D(this,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.reverse=function(t){return this.throwIfDisposed(),Xr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.rfft=function(){return this.throwIfDisposed(),Sb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.round=function(){return this.throwIfDisposed(),zS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.rsqrt=function(){return this.throwIfDisposed(),LS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.selu=function(){return this.throwIfDisposed(),PS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.separableConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),MS(this,t,e,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sigmoid=function(){return this.throwIfDisposed(),ur(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sign=function(){return this.throwIfDisposed(),lD(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sin=function(){return this.throwIfDisposed(),BS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sinh=function(){return this.throwIfDisposed(),VS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.slice=function(t,e){return this.throwIfDisposed(),Be(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.softmax=function(t){return this.throwIfDisposed(),wb(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.softplus=function(){return this.throwIfDisposed(),Fh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),mb(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.split=function(t,e){return this.throwIfDisposed(),Ws(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sqrt=function(){return this.throwIfDisposed(),Yn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.square=function(){return this.throwIfDisposed(),$t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.squaredDifference=function(t){return this.throwIfDisposed(),GS(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.squeeze=function(t){return this.throwIfDisposed(),gt(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof vt?[this,t]:[this,...t];return Hs(n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.step=function(t){return this.throwIfDisposed(),zh(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.stridedSlice=function(t,e,n,s,r,i,a,o){return this.throwIfDisposed(),uD(this,t,e,n,s,r,i,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sub=function(t){return this.throwIfDisposed(),ve(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.sum=function(t,e){return this.throwIfDisposed(),Ie(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.tan=function(){return this.throwIfDisposed(),cD(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.tanh=function(){return this.throwIfDisposed(),Ll(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.tile=function(t){return this.throwIfDisposed(),Mr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.toBool=function(){return this.throwIfDisposed(),pe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.toFloat=function(){return this.throwIfDisposed(),pe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.toInt=function(){return this.throwIfDisposed(),pe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.topk=function(t,e){return this.throwIfDisposed(),fD(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.transpose=function(t){return this.throwIfDisposed(),ut(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.unique=function(t){return this.throwIfDisposed(),pD(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),qS(this,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.unstack=function(t){return this.throwIfDisposed(),Kr(this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.where=function(t,e){return this.throwIfDisposed(),is(t,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ne().prototype.zerosLike=function(){return this.throwIfDisposed(),ct(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ai extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ai.prototype)}}class Br extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Br.prototype)}}class j extends Error{constructor(e){super(e),Object.setPrototypeOf(this,j.prototype)}}class Qe extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qe.prototype)}}class lC extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lC.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class w_{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let n;return this.cache.has(e)&&(n=this.cache.get(e),this.cache.delete(e),this.cache.set(e,n)),n}put(e,n){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let n=0;n<this.maxEntries-e;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ml(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}else{const n=new Array(e);return n.fill(t),n}}function Di(t,e){if(!t)throw new lC(e)}function MN(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Ss(t){return t.length===1?t[0]:t}function Ct(t){return Array.isArray(t)?t:[t]}function la(t){const n=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function tl(t){return t.length<=1||t.indexOf("_")===-1?t:t.replace(/[_]+(\w|$)/g,(e,n)=>n.toUpperCase())}let Cr={};function uC(t){if(t==null)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function dv(t){if(!(t==null||typeof t!="object"))if(Array.isArray(t))t.forEach(e=>dv(e));else{const e=Object.keys(t);for(const n of e){const s=t[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?t[n]=s.value:dv(s))}}}function rm(t,e={},n={},s="object",r=!1){if(typeof t=="string"){const i=t;let a;if(i in n)a=n[i];else if(i in Cr)a=Cr[i];else if(a=e[i],a==null)throw new j(`Unknown ${s}: ${t}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=t;if(i.className==null||i.config==null)throw new j(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Cr?[o,l]=Cr.className:a in e&&([o,l]=e[a]),o==null)throw new j(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const f of Object.keys(Cr))u[f]=Cr[f];for(const f of Object.keys(n))u[f]=n[f];const c=i.config;c.customObjects=u;const h=Object.assign({},Cr);for(const f of Object.keys(n))Cr[f]=n[f];dv(i.config);const d=l(o,i.config,n,r);return Cr=Object.assign({},h),d}else{const u=Object.assign({},Cr);for(const h of Object.keys(n))Cr[h]=n[h];const c=new o(i.config);return Cr=Object.assign({},u),c}}}function OK(t,e){return t<e?-1:t>e?1:0}function Ym(t,e){return-1*OK(t,e)}function co(t){if(t==null)return t;const e=[];for(const n of t)e.indexOf(n)===-1&&e.push(n);return e}function FK(t){if(t==null)throw new j(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function au(t,e,n){if(n!=null&&t.indexOf(n)<0)throw new j(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function cC(t,e,n=0,s=1/0){return Di(n>=0),Di(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every(r=>typeof r===e)}function Mn(t,e){Array.isArray(t)?(R(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((n,s)=>Mn(n,`element ${s+1} of ${e}`))):R(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${v_(t)}.`)}function v_(t){return t===null?"null":Array.isArray(t)?"["+t.map(e=>v_(e)).join(",")+"]":typeof t=="string"?`"${t}"`:`${t}`}function zK(t,e,n){let s=n!=null?n():vs(),r;return(...a)=>{const o=n!=null?n():vs();return o-s<e||(s=o,r=t(...a)),r}}function S_(t){return t==="relu"?"relu":t==="linear"?"linear":t==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let LK=0;function C_(){return LK++}const Qm={};function Qb(t=""){return t in Qm||(Qm[t]=0),Qm[t]+=1,t+Qm[t].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const PK=["channelsFirst","channelsLast"],MK=["nearest","bilinear"],BK=["valid","same","causal"],VK=["max","avg"],UK=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const vu=new Map;function fn(t){au(PK,"DataFormat",t)}function WK(t){au(MK,"InterpolationFormat",t)}function mr(t){au(BK,"PaddingMode",t)}function k_(t){au(VK,"PoolMode",t)}const Yd=[],BN="/";function bl(t,e){Yd.push(t);try{const n=e();return Yd.pop(),n}catch(n){throw Yd.pop(),n}}function GK(){return Yd.length===0?"":Yd.join(BN)+BN}function $_(t){if(!I_(t))throw new Error("Not a valid tensor name: '"+t+"'");return GK()+t}function N_(t){if(!I_(t))throw new Error("Not a valid tensor name: '"+t+"'");vu.has(t)||vu.set(t,0);const e=vu.get(t);if(vu.set(t,vu.get(t)+1),e>0){const n=`${t}_${e}`;return vu.set(n,1),n}else return t}const HK=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function I_(t){return!!t.match(HK)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jK(t){return t===parseInt(t.toString(),10)}function ho(t,e,n){e==null&&(e=0),n==null&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function wc(t){if(t.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s<e&&(e=s)}return e}function ko(t){if(t.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const s=t[n];s>e&&(e=s)}return e}function mi(t,e){if(e<t)throw new j(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let $1;function kn(){return $1==null&&($1=Dl().epsilon()),$1}function gi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ui(t,e){return pe(t,e)}function im(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),G(t,n)}function qK(t,e){return Q(()=>{if(t.shape.length!==2)throw new j(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=im(t,1);return fv(n,[1,e,1])})}function XK(t){const e=[ho(t.shape)];return G(t,e)}function KK(t){if(t.rank<=1)throw new j(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],ho(t.shape,1)];return G(t,e)}function wl(t,e,n){return Q(()=>{switch(t.rank){case 1:return xb(t,e,n);case 2:return US(t,[e,0],[n,t.shape[1]]);case 3:return bb(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Sf(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Be(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Be(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new j(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function N1(t,e,n){return Q(()=>{switch(t.rank){case 1:return xb(t,e,n);case 2:return US(t,[0,e],[t.shape[0],n]);case 3:return bb(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Sf(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Zm(t,e,n,s){return Q(()=>{switch(t.rank){case 1:return xb(t,e,n);case 2:switch(s){case 1:return wl(t,e,n);case 2:return N1(t,e,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wl(t,e,n);case 2:return bb(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return N1(t,e,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wl(t,e,n);case 2:return Sf(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Sf(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return N1(t,e,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function hC(t,e=-1){let n;return e<0&&(n=t[0].rank,n!==0?e=n:e=0),e===t[0].rank&&(e=-1),Jt(t,e)}function VN(t,e){switch(t.rank){case 1:return F3([t,e]);case 2:return z3([t,e],0);case 3:return L3([t,e],0);case 4:return P3([t,e],0);default:throw new j(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function fv(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new j(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Mr(t,e)}function Zb(t,e=0,n=1,s,r){return OS(t,e,n,s,r)}function Wi(t,e,n,s){if(t.rank<2||e.rank<2)throw new Qe(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=t.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(r!==i)throw new Qe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(t.rank===2&&e.rank===2)return lv({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?pv(t.rank,s,gi()):null,activation:n});{const r=t.shape.slice(),i=r.pop();t=G(t,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},(p,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=G(ut(e,c),[l,-1]);const h=[...r,...u];return G(lv({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?pv(t.rank,s,gi()):null,activation:n}),h)}}function T_(t,e,n){return Q(()=>(Array.isArray(e)?e=bn(e,"int32"):e=pe(e,"int32"),em(t,e,n)))}function am(t){return M(t,t)}function pv(t,e,n){const s=e.shape;if(e.rank!==1&&e.rank!==t)throw new j(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(t===5){if(n==="channelsFirst")return s.length===1?G(e,[1,s[0],1,1,1]):G(e,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?G(e,[1,1,1,1,s[0]]):G(e,[1].concat(s))}else if(t===4){if(n==="channelsFirst")return s.length===1?G(e,[1,s[0],1,1]):G(e,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?G(e,[1,1,1,s[0]]):G(e,[1].concat(s))}else if(t===3){if(n==="channelsFirst")return s.length===1?G(e,[1,s[0],1]):G(e,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?G(e,[1,1,s[0]]):G(e,[1].concat(s))}else if(t<3)return e;throw new j(`Unsupported input rank by biasAdd: ${e.rank}`)}function Si(t,e,n){return Q(()=>(n==null&&(n=gi()),fn(n),re(t,pv(t.rank,e,n))))}function YK(t,e=1){if(e!==1)throw new Qe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Qp(t)}function QK(t){return Q(()=>we(t,re(Cn(t),1)))}function E_(t,e,n,s){return Q(()=>yD(t,e,n,s))}function ZK(t){return Q(()=>{const e=re(.5,M(.2,t));return Rs(e,0,1)})}function om(t,e,n=!1){return n?t():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JK=["fanIn","fanOut","fanAvg"],e7=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function t7(t){au(JK,"FanMode",t)}function n7(t){au(e7,"Distribution",t)}class Yr extends Ph{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class R_ extends Yr{apply(e,n){return cn(e,n)}}R_.className="Zeros";oe(R_);class dC extends Yr{apply(e,n){return Us(e,n)}}dC.className="Ones";oe(dC);class A_ extends Yr{constructor(e){if(super(),typeof e!="object")throw new j(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new j(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return Q(()=>M(Ae(this.value),Us(e,n)))}getConfig(){return{value:this.value}}}A_.className="Constant";oe(A_);class D_ extends Yr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return nu(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}D_.className="RandomUniform";oe(D_);class __ extends Yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Qe(`randomNormal does not support dType ${n}.`);return Zb(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}__.className="RandomNormal";oe(__);class O_ extends Yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Qe(`truncatedNormal does not support dType ${n}.`);return jS(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}O_.className="TruncatedNormal";oe(O_);class F_ extends Yr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return Q(()=>{if(e.length!==2||e[0]!==e[1])throw new j("Identity matrix initializer can only be used for 2D square matrices.");return M(this.gain,vS(e[0]))})}getConfig(){return{gain:this.gain}}}F_.className="Identity";oe(F_);function s7(t,e="channelsLast"){let n,s;if(fn(e),t.length===2)n=t[0],s=t[1];else if([3,4,5].indexOf(t.length)!==-1){if(e==="channelsFirst"){const r=ho(t,2);n=t[1]*r,s=t[0]*r}else if(e==="channelsLast"){const r=ho(t,0,t.length-2);n=t[t.length-2]*r,s=t[t.length-1]*r}}else{const r=ho(t);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}class js extends Yr{constructor(e){if(super(),e.scale<0)throw new j(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,t7(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,n7(this.distribution),this.seed=e.seed}apply(e,n){const s=s7(e),r=s[0],i=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(r+i)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Qe(`${this.getClassName()} does not support dType ${n}.`);return jS(e,0,o,n,this.seed)}else{const o=Math.sqrt(3*a);return nu(e,-o,o,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}js.className="VarianceScaling";oe(js);class fC extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return js.className}}fC.className="GlorotUniform";oe(fC);class pC extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return js.className}}pC.className="GlorotNormal";oe(pC);class mC extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return js.className}}mC.className="HeNormal";oe(mC);class gC extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return js.className}}gC.className="HeUniform";oe(gC);class yC extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return js.className}}yC.className="LeCunNormal";oe(yC);class xC extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return js.className}}xC.className="LeCunUniform";oe(xC);class z_ extends Yr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return Q(()=>{if(e.length<2)throw new Qe("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;const s=Y(e.slice(0,-1)),r=e[e.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],o=Zb(a,0,1,n,this.seed),l=ND.qr(o,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=M(u,h.sign()),s<r&&(u=u.transpose()),M(Ae(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}z_.className="Orthogonal";oe(z_);const UN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function WN(t,e={}){return rm(t,_r.getMap().classNameMap,e,"initializer")}function Zt(t){return uC(t)}function jt(t){if(typeof t=="string"){const e=t in UN?UN[t]:t;if(e==="GlorotNormal")return new pC;if(e==="GlorotUniform")return new fC;if(e==="HeNormal")return new mC;if(e==="HeUniform")return new gC;if(e==="LeCunNormal")return new yC;if(e==="LeCunUniform")return new xC;{const n={};return n.className=e,n.config={},WN(n)}}else return t instanceof Yr?t:WN(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mv(t){return Array.isArray(t)&&Array.isArray(t[0])}function xy(t){return t.length===0?[]:Array.isArray(t[0])?t:[t]}function Ve(t){let e;if(Array.isArray(t)){if(t.length!==1)throw new j(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function mt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(t.length===1)return t=t,t[0];throw new j(`Expected exactly 1 Shape; got ${t.length}`)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function by(t){let e=0;for(const n of t)n.shape.length===0?e+=1:e+=n.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GN="Variable";class r7{constructor(e,n="float32",s=GN,r=!0,i=null){this.dtype=n??"float32",this.shape=e.shape,this.id=C_(),s=s??GN,this.originalName=$_(s),this.name=N_(this.originalName),this.trainable_=r,this.constraint=i,this.val=mD(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),i7(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function i7(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function gv(t){return t.map(e=>e.read())}function bC(t){t.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $n{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class qi{constructor(e,n,s,r,i,a,o){this.dtype=e,this.shape=n,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=o,this.id=C_(),a!=null&&(this.originalName=$_(a),this.name=N_(this.originalName)),this.rank=n.length}}let a7=0;class Jb{constructor(e,n){this.callArgs=n,this.id=a7++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const n of this.inboundLayers)n!=null?e.push(n.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let o7=0;class tt extends Ph{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=o7++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){const s=this.getClassName();n=la(s)+"_"+Qb(s)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new Br(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new j(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ss(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ss(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ai(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ai(`Layer ${this.name} is not connected, no input to return.`);return Ss(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ai(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ai(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ss(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const n=Ct(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Ct(this.inputSpec);if(n.length!==s.length)throw new j(`Layer ${this.name} expects ${s.length} inputs, but it received ${n.length} input tensors. Input received: ${e}`);for(let r=0;r<n.length;r++){const i=n[r],a=s[r];if(a==null)continue;const o=i.rank;if(a.ndim!=null&&o!==a.ndim)throw new j(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(a.maxNDim!=null&&o>a.maxNDim)throw new j(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(a.minNDim!=null&&o<a.minNDim)throw new j(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(a.dtype!=null&&i.dtype!==a.dtype)throw new j(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${i.dtype}.`);if(a.axes){const l=i.shape;for(const u in a.axes){const c=Number(u),h=a.axes[u],d=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new j(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const u=a.shape[l],c=i.shape[l];if(u!=null&&c!=null&&u!==c)throw new j(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${i.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();const s=Ct(e),r=c7(e),i=h7(e);if(r===i)throw new j("Arguments to apply() must be all SymbolicTensors or all Tensors");return bl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const o of Ct(e))a.push(o.shape);this.build(Ss(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let a=this.call(e,n);this.supportsMasking&&this.setMaskMetadata(e,a);const o=Ct(a),l=[];for(let u of o)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=Ss(l),this.activityRegularizer!=null)throw new Qe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=l7(e),o=this.computeOutputShape(a);let l;const u=u7(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,h)=>new qi(u,c,this,Ct(e),n,this.name,h)):l=new qi(u,o,this,Ct(e),n,this.name),this.addInboundNode(e,l,null,null,a,o,n),this._refCount++,this.activityRegularizer!=null)throw new Qe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ai(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Ai(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return by(this.weights)}build(e){this.built=!0}getWeights(e=!1){return gv(e?this.trainableWeights:this.weights)}setWeights(e){Q(()=>{const n=this.weights;if(n.length!==e.length)throw new j(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;const s=[],r=gv(n);for(let i=0;i<r.length;++i){const a=r[i],o=n[i],l=e[i];if(!Ke(a.shape,l.shape))throw new j(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}bC(s)})}addWeight(e,n,s,r,i,a,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new j(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():jt("zeros"));const u=r.apply(n,s),c=new r7(u,s,e,a,o);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Ct(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}setMaskMetadata(e,n,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),i=Ct(n),a=Ct(r);if(i.length!==a.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let o=0;o<i.length;o++)i[o].kerasMask=a[o]}addInboundNode(e,n,s,r,i,a,o=null){const l=Ct(e);n=Ct(n),s=Ct(s),r=Ct(r),i=xy(i),a=xy(a);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Jb({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:n,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:a},o);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function l7(t){t=Ct(t);const e=[];for(const n of t)e.push(n.shape);return Ss(e)}function u7(t){return"float32"}function L_(t,e,n){if((e==null||n!=null&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),e.inboundNodes.length===0)return[t];{const s=e.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const a=s.inputTensors[i],o=s.inboundLayers[i],l=s.nodeIndices[i],u=L_(a,o,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function c7(t){let e=!0;for(const n of Ct(t))if(!(n instanceof qi)){e=!1;break}return e}function h7(t){let e=!0;for(const n of Ct(t))if(n instanceof qi){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lm extends tt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Qb("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new j("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new j("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new j("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const r=new qi(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Jb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new j(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}lm.className="InputLayer";oe(lm);function d7(t){if(t.batchShape==null&&t.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(t.batchShape!=null&&t.shape!=null)throw new j("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;t.shape!=null&&e==null&&(e=[null].concat(t.shape));let n=t.dtype;return n==null&&(n="float32"),new lm({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f7(t,e){if(t.dtype==null||t.dtype===e.dtype)return e;try{return pe(e,t.dtype)}catch{throw new j(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class Za{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Za)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(e==null)return;for(const n of e)this.add(n.key,n.value)}}add(e,n,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=f7(e,n),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new j(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof qi){if(this.id2Value[e.id]==null)throw new j(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const n=this.name2Id[e];if(n==null)throw new j(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[n]}}getMask(e){if(e instanceof qi){if(this.id2Value[e.id]==null)throw new j(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const n=this.name2Id[e];if(n==null)throw new j(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&ze(this.id2Mask)}}const wy=new w_,vy=new w_;function p7(t){wy!=null&&wy.setMaxEntries(t),vy!=null&&vy.setMaxEntries(t)}function Id(t,e,n,s){const r=n==null?!1:n.training,i=Array.isArray(t),a=i?t:[t],o=a.map(p=>p.name),l=[],u=e.names();for(const p of o)u.indexOf(p)!==-1?l.push(e.getValue(p)):l.push(null);const c=o.join(",")+"|"+e.names().sort().join(",");let h=wy.get(c),d;if(h==null){const p=m7(a,e);h=p.sorted,d=p.recipientCounts,wy.put(c,h),vy.put(c,d)}d={},r||Object.assign(d,vy.get(c));const f=new Za(e);for(let p=0;p<h.length;++p){const m=h[p],g=m.sourceLayer;if(g instanceof lm)continue;const y=[],x=[],w=[];let v=!1;for(const A of m.inputs){const D=f.getValue(A),O=f.getMask(A);y.push(D),x.push(O),O!=null&&(v=!0),r||(d[A.name]--,d[A.name]===0&&!e.hasKey(A)&&o.indexOf(A.name)===-1&&!D.isDisposed&&A.sourceLayer.stateful!==!0&&w.push(D))}v&&(n=n||{},n.mask=x[0]);const S=Ct(g.apply(y,n));let N=null;g.supportsMasking&&(N=g.computeMask(y,x));const I=y7(m),T=Array.isArray(I)?I:[I];for(let A=0;A<T.length;++A){f.hasKey(T[A])||f.add(T[A],S[A],Array.isArray(N)?N[0]:N);const D=o.indexOf(T[A].name);D!==-1&&(l[D]=S[A])}r||ze(w)}return f.disposeMasks(),i?l:l[0]}function m7(t,e){R(t!=null&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(t.length===1){const r=HN(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:a,recipientMap:o}=HN(i,e);for(const l of a)r.has(l.name)||(n.push(l),r.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:g7(s)}}function g7(t){const e={};for(const n in t)e[n]=t[n].size;return e}function HN(t,e){const n=new Set,s=[],r={};for(const o of e.names())n.add(o);const i=[],a=[];for(i.push(t);i.length>0;){const o=i[i.length-1];if(n.has(o.name)){i.pop();continue}const l=a[a.length-1]===i.length-1;if(o.inputs.length===0||l)i.pop(),s.push(o),n.add(o.name),l&&a.pop();else{a.push(i.length-1);for(const u of o.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(o.name),!n.has(u.name)&&i.push(u)}}return{sorted:s,recipientMap:r}}function y7(t){let e;if(t.sourceLayer.inboundNodes.length===1)e=t.sourceLayer.output;else{let n=null;for(let s=0;s<t.sourceLayer.inboundNodes.length;++s)for(const r of t.sourceLayer.inboundNodes[s].outputTensors)if(r.id===t.id){n=s;break}e=t.sourceLayer.getOutputAt(n)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7=J();x7.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,p7);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wC(t,e){return Q(()=>Yn(Ie(M(t,t),e,!0)))}class um extends Ph{getConfig(){return{}}}class P_ extends um{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const n=wC(e,this.axis),s=Rs(n,0,this.maxValue);return M(e,we(s,re(kn(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}P_.className="MaxNorm";oe(P_);class M_ extends um{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>we(e,re(kn(),wC(e,this.axis))))}getConfig(){return{axis:this.axis}}}M_.className="UnitNorm";oe(M_);class B_ extends um{apply(e){return ea(e)}}B_.className="NonNeg";oe(B_);class V_ extends um{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const n=wC(e,this.axis),s=re(M(this.rate,Rs(n,this.minValue,this.maxValue)),M(1-this.rate,n));return M(e,we(s,re(kn(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}V_.className="MinMaxNorm";oe(V_);const jN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Tn(t){return uC(t)}function qN(t,e={}){return rm(t,_r.getMap().classNameMap,e,"constraint")}function En(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in jN?jN[t]:t,config:{}};return qN(n)}else return t instanceof um?t:qN(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function qo(t){if(t==null)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if(typeof i!="number"){const a=i;e.push(a.data()),n.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let i=0;i<r.length;++i)t[n[i]]=r[i][0];ze(s)}}function U_(t){if(t!=null)for(const e in t){const n=t[e];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var XN;(function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"})(XN||(XN={}));const b7=125;class kf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,n){}async onEpochEnd(e,n){}async onBatchBegin(e,n){}async onBatchEnd(e,n){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class w7{constructor(e,n=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=n}append(e){this.callbacks.push(e)}setParams(e){for(const n of this.callbacks)n.setParams(e)}setModel(e){for(const n of this.callbacks)n.setModel(e)}async onEpochBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(e,n)}async onEpochEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(e,n)}async onBatchBegin(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(e,n)}async onBatchEnd(e,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(e,n)}async onTrainBegin(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const n of this.callbacks)await n.onTrainEnd(e)}}class v7 extends kf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const r in n){const i=n[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const o=Q(()=>re(this.totals[r],M(i,s)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:Q(()=>{const r=M(we(1,this.seen),this.totals[s]);n[s]=r,this.totals[s].dispose(),Pn(n[s])}))}}class S7 extends kf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const e=[],n=[],s=[];for(const i in this.history){const a=this.history[i];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];e.push(l.data()),n.push(i),s.push(o)}}const r=await Promise.all(e);for(let i=0;i<r.length;++i)this.history[n[i]][s[i]].dispose(),this.history[n[i]][s[i]]=r[i][0]}}class C7 extends kf{constructor(e,n){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||XD,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=b7),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Gw(this.yieldEvery)&&(this.maybeWait=zK(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,s){const r=[];this.yield!=null&&(await qo(s),r.push(this.yield(e,n,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await qo(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){const s=[];this.epochEnd!=null&&(await qo(n),s.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,n){this.batchBegin!=null&&(await qo(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){const s=[];this.batchEnd!=null&&(await qo(n),s.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Gw(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await qo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await qo(e),await this.trainEnd(e))}}function W_(t,e){return t==null&&(t={}),t instanceof kf?[t]:Array.isArray(t)&&t[0]instanceof kf?t:Ct(t).map(s=>new C7(s,e))}class $r{constructor(){}static registerCallbackConstructor(e,n){R(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),$r.checkForDuplicate(n),$r.constructors[e]==null&&($r.constructors[e]=[]),$r.constructors[e].push(n)}static checkForDuplicate(e){for(const n in $r.constructors)$r.constructors[+n].forEach(r=>{if(r===e)throw new j("Duplicate callback constructor.")})}static clear(){$r.constructors={}}static createCallbacks(e){const n=[];for(const s in $r.constructors){const r=+s;e>=r&&n.push(...$r.constructors[r])}return n.map(s=>new s)}}$r.constructors={};function G_(t,e,n,s,r,i,a,o,l){const u=new S7,c=[new v7,...$r.createCallbacks(e)];t!=null&&c.push(...t),c.push(u);const h=new w7(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ca(t,e={},n=!1){return rm(t,_r.getMap().classNameMap,e,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sy(t,e){return Q(()=>{t.dtype!=="float32"&&(t=pe(t,"float32"));const n=Ie(am(t),e,!0),s=Oh(n.shape,kn()),r=Yn(_a(n,s));return we(t,r)})}function e0(t,e){return Q(()=>tn(am(ve(e,t)),-1))}function vC(t,e){return Q(()=>tn(Cn(ve(e,t)),-1))}function SC(t,e){return Q(()=>{const n=ve(t,e),s=Rs(Cn(t),kn(),Number.MAX_VALUE),r=Cn(we(n,s));return M(100,tn(r,-1))})}function k7(t,e){return Q(()=>{const n=Rs(e,kn(),Number.MAX_VALUE),s=hr(re(1,n)),r=Rs(t,kn(),Number.MAX_VALUE),i=hr(re(1,r));return tn(am(ve(s,i)),-1)})}function $7(t,e){return Q(()=>{const n=_a(0,ve(1,M(t,e)));return tn(am(n),-1)})}function N7(t,e){return Q(()=>{const n=_a(0,ve(1,M(t,e)));return tn(n,-1)})}function I7(t,e){return Q(()=>{const n=Ie(M(t,e),-1),s=Wr(M(ve(1,t),e),-1);return _a(0,re(1,ve(s,n)))})}function T7(t,e){return Q(()=>{const n=Math.log(2),s=ve(e,t),r=ve(re(s,Fh(M(-2,s))),n);return tn(r,-1)})}function $f(t,e,n=!1){return Q(()=>{if(n)e=wb(e);else{const s=Ie(e,e.shape.length-1,!0);e=we(e,s)}return e=Rs(e,kn(),1-kn()),Gt(Ie(M(pe(t,"float32"),hr(e)),e.shape.length-1))})}function Cy(t,e,n=!1){return Q(()=>{const s=pe(Jp(XK(t)),"int32");e=Rs(e,kn(),1-kn());const r=e.shape,i=G(NS(s,r[r.length-1]),r);return $f(i,e,n)})}function E7(t,e){if(!Ke(t.shape,e.shape))throw new j(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Q(()=>{const n=ea(e),s=Gt(Cn(e));return re(ve(n,M(e,t)),cb(ys(s)))})}function t0(t,e){return Q(()=>{let n;return n=Rs(e,kn(),1-kn()),n=hr(we(n,ve(1,n))),tn(E7(t,n),-1)})}function R7(t,e){return Q(()=>{const n=Rs(t,kn(),1),s=Rs(e,kn(),1);return Ie(M(t,hr(we(n,s))),-1)})}function A7(t,e){return Q(()=>{const n=hr(re(kn(),e));return tn(ve(e,M(t,n)),-1)})}function H_(t,e){return Q(()=>{const n=Sy(t,-1),s=Sy(e,-1),r=M(n,s);return Gt(Ie(r,-1))})}const ky={meanSquaredError:e0,meanAbsoluteError:vC,meanAbsolutePercentageError:SC,meanSquaredLogarithmicError:k7,squaredHinge:$7,hinge:N7,categoricalHinge:I7,logcosh:T7,categoricalCrossentropy:$f,sparseCategoricalCrossentropy:Cy,binaryCrossentropy:t0,kullbackLeiblerDivergence:R7,poisson:A7,cosineProximity:H_};function I1(t){if(typeof t=="string"){if(t in ky)return ky[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new j(e)}else return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j_(t,e){return Q(()=>{const n=M(.5,dr(e)),s=Ui(Zs(e,n),t.dtype);return tn(hi(t,s),-1)})}function q_(t,e){return Q(()=>Ui(hi(Fl(t,-1),Fl(e,-1)),"float32"))}function D7(t,e){return Q(()=>pe(Ie(ji(hi(t,1),hi(e,1))),"float32"))}function _7(t,e){return Q(()=>pe(Ie(ji(hi(t,0),hi(e,1))),"float32"))}function O7(t,e){return Q(()=>{const n=D7(t,e),s=_7(t,e),r=re(n,s);return pe(is(Zs(r,0),we(n,r),0),"float32")})}function F7(t,e){return t0(t,e)}function z7(t,e){return t.rank===e.rank&&(t=gt(t,[t.rank-1])),e=Fl(e,-1),e.dtype!==t.dtype&&(e=pe(e,t.dtype)),pe(hi(t,e),"float32")}const L7=e0,P7=e0,M7=vC,B7=vC,V7=SC,U7=SC,X_=$f,W7=H_,K_=Cy,$y={binaryAccuracy:j_,categoricalAccuracy:q_,precision:O7,categoricalCrossentropy:X_,sparseCategoricalCrossentropy:K_,mse:L7,MSE:P7,mae:M7,MAE:B7,mape:V7,MAPE:U7,cosine:W7};function G7(t){if(typeof t=="string"&&t in $y)return $y[t];if(typeof t!="string"&&t!=null)return t;throw new j(`Unknown metric ${t}`)}function Jm(t){if(Di(t!==null,`Unknown LossOrMetricFn ${t}`),typeof t=="string")return t;{let e;for(const n of Object.keys(ky))if(ky[n]===t){e=n;break}if(e!==void 0)return e;for(const n of Object.keys($y))if($y[n]===t){e=n;break}return e!==void 0?e:t.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function H7(t){const e={Adagrad:()=>wu.adagrad(.01),Adadelta:()=>wu.adadelta(1,.95,kn()),Adam:()=>wu.adam(.001,.9,.999,kn()),Adamax:()=>wu.adamax(.002,.9,.999,kn(),0),RMSProp:()=>wu.rmsprop(.001,.9,0,kn()),SGD:()=>wu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new j(`Unknown Optimizer ${t}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const KN=1*1024*1024;function YN(t,e,n=!1){if(t==null||typeof t!="object"||Object.getPrototypeOf(t)!==Object.prototype||!yv(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(t);s.length>KN&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${KN}.`)}}function yv(t){if(t===null)return!0;if(typeof t=="object")if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if(typeof n!="string"||!yv(t[n]))return!1;return!0}else if(Array.isArray(t)){for(const e of t)if(!yv(e))return!1;return!0}else return!1;else{const e=typeof t;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j7(t,e,n,s=console.log){const r=X7(t),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(e*c)));let a;if(!r){i.push("Receives inputs"),a=[];for(const c in t.nodesByDepth)a.push(...t.nodesByDepth[c])}s("_".repeat(e)),Ny(i,n,s),s("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)r?K7(o[c],n,s):Y7(o[c],n,a,s),s((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=q7(t),u=by(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function q7(t){let e;return t.collectedTrainableWeights!=null?e=by(t.collectedTrainableWeights):e=by(t.trainableWeights),e}function X7(t){let e=!0;const n=[],s=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of t.layers){let i=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function Ny(t,e,n=console.log){let s="";for(let r=0;r<t.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=t[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);n(s)}function K7(t,e,n){let s,r;try{r=t.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(t.outputShape)}catch{s="multiple"}const i=t.name,a=t.getClassName(),o=[`${i} (${a})`,r,s,t.countParams().toString()];Ny(o,e,n)}function Y7(t,e,n,s){let r,i;try{i=t.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(t.outputShape)}catch{r="multiple"}const a=[];for(const h of t.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${f}[${p}][${m}]`)}const o=t.name,l=t.getClassName(),u=a.length===0?"":a[0],c=[`${o} (${l})`,i,r,t.countParams().toString(),u];Ny(c,e,s);for(let h=1;h<a.length;++h)Ny(["","","","",a[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Y_(t,e,n){return(t==="inboundNodes"||t==="outputLayers"||t==="inputLayers")&&e===0&&typeof n=="string"}function xv(t,e){if(t===null)return null;if(typeof t=="string")return tl(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const i=t[r];Y_(e,r,i)?n.push(i):n.push(xv(i,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s];if(s==="name"&&typeof r=="string")n[s]=r;else{const i=tl(s);n[i]=xv(r,i)}}return n}}function bv(t,e){if(t==null)return null;if(typeof t=="string")return la(t);if(typeof t=="number"||typeof t=="boolean")return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const i=t[r];Y_(e,r,i)?n.push(i):n.push(bv(i,e))}return n}else{const n={};for(const s of Object.keys(t)){const r=t[s],i=la(s);(s==="name"||s==="className")&&typeof r=="string"?n[i]=r:n[i]=bv(r,s)}return n}}/** @license See the LICENSE file. */const Q_="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Q7=t=>{const e=Object.keys(t);if(e.length===0)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};class ni extends tt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Qb(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],co(this.inputs).length!==this.inputs.length)throw new j(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);co(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.sourceLayer,v=x.nodeIndex,S=x.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(S)}for(const x of this.inputs){const w=x.sourceLayer,v=x.nodeIndex,S=x.tensorIndex;Di(v===0,"input layer has >1 nodes"),Di(S===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(S)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const w=this.inputLayers[x];if(!(w instanceof lm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},s={},r={},i={},a={},o=[],l=(x,w,v,S,N,I)=>{(S==null||N==null||I==null)&&(S=x.sourceLayer,N=x.nodeIndex,I=x.tensorIndex);const T=S.inboundNodes[N];if(v.indexOf(T)!==-1)throw new Br(`The tensor ${x.name} at layer "${S.name}" is part of a cycle.`);if(w.indexOf(T)!==-1)return;this.containerNodes.add(ni.nodeKey(S,N)),S.id in a||(a[S.id]=Object.keys(a).length),v.indexOf(T)===-1&&v.push(T);const A=T.inboundLayers.length;for(let D=0;D<A;D++){const O=T.inputTensors[D],U=T.inboundLayers[D],B=T.nodeIndices[D],q=T.tensorIndices[D];l(O,w,v,U,B,q)}for(w.push(T);v.indexOf(T)>=0;)v.splice(v.indexOf(T),1);o.push(T)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=o.slice().reverse();for(const x of h){s[x.id]=x,x.id in n||(n[x.id]=0);let w=n[x.id];const v=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];w=Math.max(w,v),r[x.outboundLayer.id]=w,i[x.outboundLayer.id]=x.outboundLayer,n[x.id]=w;for(let S=0;S<x.inboundLayers.length;S++){const N=x.inboundLayers[S],I=x.nodeIndices[S],T=N.inboundNodes[I],A=n[T.id]==null?0:n[T.id];n[T.id]=Math.max(w+1,A),s[T.id]=T}}const d={};for(const x in n){const w=n[x];w in d||(d[w]=[]),d[w].push(s[x])}const f={};for(const x in r){const w=r[x];w in f||(f[w]=[]),f[w].push(i[x])}let p=Object.keys(f).map(x=>parseInt(x,10)).sort(Ym);this.layers=[];for(const x of p){const w=f[x];w.sort((v,S)=>{const N=a[v.id],I=a[S.id];return N<I?-1:N>I?1:0});for(const v of w)v instanceof ni&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=f,p=Object.keys(d).map(x=>parseInt(x,10)).sort(Ym);const m=this.inputs.slice(),g=[];for(const x of p)for(const w of d[x]){const v=w.outboundLayer;if(v!=null){for(const S of w.inputTensors)if(m.indexOf(S)===-1)throw new Br(`Graph disconnected: cannot obtain value for tensor ${S} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(const S of w.outputTensors)m.push(S);g.push(v.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const w=y.filter(v=>v===x).length;if(w!==1)throw new Br(`The name "${x}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Jb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new j("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){const s={};let r=0;const i=Q7(e);i&&this.parseWeights(e);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const c=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new j(`Duplicate weight name: ${c}`);s[c]=u,r++}const a=[];for(const o in e){let l=o;if(s[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)a.push([s[l],e[o]]);else if(n)throw new j(`Provided weight data has no target variable: ${o}`);delete s[l]}if(n){const o=[];for(const l in s)o.push(l);if(o.length>0)throw new j(`${o.length} of ${r} weights are not set: ${o}`)}bC(a)}parseWeights(e){for(const n in Object.keys(e)){const s=n.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");i!==n&&(e[i]=e[n],delete e[n])}}updatedConfig(){const e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${Q_}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){const s=bv(this.updatedConfig());return n?JSON.stringify(s):s}call(e,n){return Q(()=>{e=Ct(e);const s=new Za;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Id(this.outputs,s,n)})}computeMask(e,n){return Q(()=>{e=Ct(e);let s;return n==null?s=Ml(null,e.length):s=Ct(n),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const n=xy(e);if(n.length!==this.inputLayers.length)throw new j(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<n.length;o++){const l=this.inputLayers[o],u=n[o],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Ym);if(r.length>1)for(const o of r){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],y=u.nodeIndices[m],x=u.tensorIndices[m],w=`${g.name}_${y}_${x}`,v=s[w];h.push(v)}const d=c.computeOutputShape(Ss(h)),f=xy(d),p=c.inboundNodes.indexOf(u);for(let m=0;m<f.length;m++){const g=`${c.name}_${p}_${m}`;s[g]=f[m]}}}const i=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${c}`;a.push(h)}for(let o=0;o<a.length;o++){const l=a[o];Di(l in s),i.push(s[l])}return Ss(i)}runInternalGraph(e,n){n==null&&(n=Ml(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=n[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Ym);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,f=c.outputTensors,p=new Array;for(const m of d)m.id in s&&p.push(s[m.id]);if(p.length===d.length){let m={},g,y,x,w;if(c.callArgs!=null&&(m=c.callArgs),p.length===1){const[v,S]=p[0];m.mask==null&&(m.mask=S),x=Ct(h.call(v,m)),w=Ct(h.computeMask(v,S)),g=[v],y=[S]}else g=p.map(v=>v[0]),y=p.map(v=>v[1]),m.mask==null&&(m.mask=y),x=Ct(h.call(g,m)),w=Ct(h.computeMask(g,y));if(h.activityRegularizer)throw new Qe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<f.length;++v){const S=f[v],N=x[v],I=w[v];s[S.id]=[N,I]}}}}const i=[],a=[],o=[];for(const l of this.outputs){Di(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];o.push(u.shape),i.push(u),a.push(c)}return[i,a,o]}buildNodeConversionMap(e){const n={};let s;for(const r of this.layers){s=r instanceof ni?1:0;for(let i=0;i<r.inboundNodes.length;i++){const a=ni.nodeKey(r,i);this.containerNodes.has(a)&&(n[a]=s,s+=1)}}return n}getLayer(e,n){if(n!=null)return this.findLayer(n);if(e==null)throw new j("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new j(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new j(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Q(()=>{const e=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const r=ni.nodeKey(n,s);this.containerNodes.has(r)&&e.push(...n.calculateLosses())}return e})}getConfig(){const e={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],f=ni.nodeKey(a,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],x=d.nodeIndices[g],w=d.tensorIndices[g],v=ni.nodeKey(y,x);let S=n[v];S==null&&(S=0),m.push([y.name,S,w,p])}u.push(m)}}}const c={};c.name=a.name,c.className=o,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=ni.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[a];r.push([o.name,c,h])}e.inputLayers=r;const i=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=ni.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=n[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[a];i.push([o.name,c,h])}return e.outputLayers=i,e}static fromConfig(e,n,s={},r=!1){const i={},a={};function o(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function l(g,y){const x=[];let w;for(const v of y){const S=v[0],N=v[1],I=v[2];if(w=v[3]==null?{}:v[3],!(S in i)){o(g,y);return}const T=i[S];if(T.inboundNodes.length<=N){o(g,y);return}const A=T.inboundNodes[N];x.push(A.outputTensors[I])}x.length>0&&g.apply(Ss(x),w)}function u(g){const y=g.name,x=Ca(g,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(r),i[y]=x,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new j(`Corrupted configuration, expected array for nodeData: ${v}`);o(x,v)})}const c=n.name,h=n.layers;for(const g of h)u(g);for(;!FK(a);)for(const g of h){const y=i[g.name];if(y.name in a){const x=a[y.name];delete a[y.name];for(const w of x)l(y,w)}}const d=[],f=[],p=n.inputLayers;for(const g of p){const y=g[0],x=g[1],w=g[2];Di(y in i);const S=i[y].inboundNodes[x].outputTensors;d.push(S[w])}const m=n.outputLayers;for(const g of m){const y=g[0],x=g[1],w=g[2];Di(y in i);const S=i[y].inboundNodes[x].outputTensors;f.push(S[w])}return new e({inputs:d,outputs:f,name:c})}get stateful(){if(this._stateful)throw new j("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Z7(t,e,n){const s=e.length;if(t==null||Array.isArray(t)&&t.length===0)return e.map(r=>null);if(s===1)return Array.isArray(t)&&t.length===1?t:typeof t=="object"&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}else if(typeof t=="object"&&Object.keys(t).length>0&&typeof t[Object.keys(t)[0]]=="object"){const r=[];return e.forEach(i=>{i in t?r.push(t[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Z_(t,e){return Z7(t,e,"classWeight")}async function J_(t,e,n,s){if(n!=null){const r=Q(()=>{if(t.shape.length===1)return Sa(t);if(t.shape.length===2){if(t.shape[1]>1)return Fl(t,1);if(t.shape[1]===1)return G(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());ze(r);const a=[];return i.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(n[o])}),bn(a,"float32")}else return null}function J7(t,e){return M(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eY=32;function eO(t,e){let n,s;const r=e;n=r.xs,s=r.ys,R(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=QN("input",t.inputNames,n),a=QN("output",t.outputNames,s),o=i[0].shape[0];R(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),R(a.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let l=0;l<i.length;l++)R(i[l].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let l=0;l<a.length;l++)R(a[l].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:i,ys:a}}function QN(t,e,n){if(n instanceof vt)return[n];if(Array.isArray(n))return R(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const s=[];for(const r of e){if(n[r]==null)throw new j(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function tY(t){if(t.length===3)throw new Qe("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function nY(t,e,n){const s=n.batchesPerEpoch!=null;if(R(t.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),R(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),R(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),R(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),R(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=n.validationData!=null;let i,a;if(r)if(ZN(n.validationData))R(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const g=tY(n.validationData);i=g.xs,a=g.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();const c=W_(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:f}=G_(c,h,n.epochs,null,null,sY(e,n),null,r,u);d.setModel(t),t.history=f,await d.onTrainBegin(),t.stopTraining_=!1;let p=n.initialEpoch==null?0:n.initialEpoch,m=await e.iterator();for(;p<n.epochs;){const g={};await d.onEpochBegin(p);let y=0,x=0;for(s||(m=await e.iterator());!s||y<n.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:v,ys:S}=eO(t,w.value),N={};N.batch=x,N.size=v[0].shape[0],await d.onBatchBegin(x,N);const I=[];if(n.classWeight!=null){const D=Z_(n.classWeight,t.outputNames);for(let O=0;O<D.length;++O)I.push(await J_(S[O],null,D[O]))}const T=v.concat(S).concat(I),A=o(T);ze(T);for(let D=0;D<l.length;++D){const O=l[D],U=A[D];N[O]=U,Pn(U)}await d.onBatchEnd(x,N),U_(N),x++,y++}if(s?y>=n.batchesPerEpoch:w.done){if(r){let v;ZN(n.validationData)?v=Ct(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=Ct(t.evaluate(i,a,{batchSize:n.validationBatchSize==null?eY:n.validationBatchSize,verbose:0}));for(let S=0;S<t.metricsNames.length;++S)g[`val_${t.metricsNames[S]}`]=v[S]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(p,g),p++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function sY(t,e){let n=null;return e.batchesPerEpoch!=null?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function ZN(t){return typeof t.iterator=="function"}function rY(t){return typeof t.next=="function"}async function iY(t,e,n){n=n||{};const s=n.batches!=null,r=t.testFunction;let i=[];if(n.verbose>0)throw new Qe("Verbose mode is not implemented yet.");R(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const a=rY(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const u=await a.next();if(i=Q(()=>{if(u.value){const{xs:c,ys:h}=eO(t,u.value),d=c.concat(h),f=Q(()=>r(d));if(ze(d),l===0)for(let m=0;m<f.length;++m)i.push(Ae(0));const p=d[0].shape[0];for(let m=0;m<f.length;++m){const g=f[m],y=i[m];i[m]=Q(()=>re(i[m],M(p,g))),l>0&&ze(y)}ze(f),o+=p,++l}return i}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const c=i[u];i[u]=we(i[u],o),ze(c)}return Ss(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T1(t){R(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function md(t,e,n){return t==null?[null]:Array.isArray(t)?t.map(s=>wl(s,e,n-e)):wl(t,e,n-e)}function wv(t,e){return Q(()=>t==null?null:Array.isArray(t)?t.map(n=>wv(n,e)):T_(t,e.dtype==="int32"?e:pe(e,"int32")))}function E1(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function tO(t){const e=[];t instanceof vt&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(s.rank===1)e.push(im(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ti(t,e){if(t==null)return;const n=[];if(e instanceof vt)n.push(e.id);else if(Array.isArray(e))e.forEach(r=>n.push(r.id));else if(e!=null)for(const r in e){const i=e[r];n.push(i.id)}const s=[];if(t instanceof vt)n.indexOf(t.id)===-1&&s.push(t);else if(Array.isArray(t))t.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(t!=null)for(const r in t){const i=t[r];n.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aY(t){return t instanceof vt}function vv(t){return Array.isArray(t)}function JN(t){return!aY(t)&&!vv(t)}function eI(t,e,n,s=!0,r=""){if(e==null||e.length===0){if(t!=null){let a=!1;if(vv(t)&&t.length>0)a=!0;else if(JN(t)){for(const o in t)if(t.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new j(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(t==null)return e.map(a=>null);let i;if(JN(t)){t=t,i=[];for(const a of e){if(t[a]==null)throw new j(`No data provided for "${a}". Need data for each key in: ${e}`);i.push(t[a])}}else if(vv(t)){if(t=t,t.length!==e.length)throw new j(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(t=t,e.length>1)throw new j(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=tO(i),n!=null)for(let a=0;a<e.length;++a){if(n[a]==null)continue;const o=i[a];if(o.shape.length!==n[a].length)throw new j(`Error when checking ${r}: expected ${e[a]} to have ${n[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[a].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[a][l];if(c!=null&&c>=0&&u!==c)throw new j(`${r} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return i}function oY(t,e,n){const s=co(t.map(i=>i.shape[0]));s.sort();const r=co(e.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new j(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(r.length>1)throw new j(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!Ke(s,r))throw new j(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function lY(t,e,n){const s=[e0,t0,$f];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(a!=null){if(a===$f&&i.shape[i.shape.length-1]===1)throw new j(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=i.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new j(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function tI(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new j(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new j(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(n!=null)for(let a=0;a<e.length;++a){if(n[a]==null)continue;const o=i[a];if(o.shape.length!==n[a].length)throw new j(`Error when checking ${r}: expected ${e[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[a].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=n[a][l];if(c!=null&&c!==u)throw new j(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function uY(t,e){if(t==null||Array.isArray(t)&&t.length===0)return e.map(s=>[]);let n;if(typeof t=="string"||typeof t=="function")n=[t];else if(Array.isArray(t)||typeof t=="object")n=t;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);if(Array.isArray(n))return e.map(s=>n);{const s=[];for(const r of e){let i=n.hasOwnProperty(r)?n[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const cY="layers-model";class rc extends ni{constructor(e){super(e),this.isTraining=!1}summary(e,n,s=console.log){if(!this.built)throw new j("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");j7(this,e,n,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=H7(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Lo))throw new j("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new j(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),n.push(I1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new j(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(o=>I1(o))}else{const a=I1(e.loss);this.outputs.forEach(o=>{n.push(a)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],bl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=uY(e.metrics,this.outputNames),i=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};bl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=r[a];(u=>{const c="";let h,d,f;for(const p of u){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===t0?["accuracy","acc"].indexOf(p)!==-1?d=j_:["crossentropy","ce"].indexOf(p)!==-1&&(d=F7):this.lossFunctions[a]===Cy?["accuracy","acc"].indexOf(p)!==-1?d=z7:["crossentropy","ce"].indexOf(p)!==-1&&(d=K_):["accuracy","acc"].indexOf(p)!==-1?d=q_:["crossentropy","ce"].indexOf(p)!==-1&&(d=X_);let y;["accuracy","acc"].indexOf(p)!==-1?y="acc":["crossentropy","ce"].indexOf(p)!==-1&&(y="ce"),f=d,h=c+y}else f=G7(p),h=c+Jm(p);let m;bl(h,()=>{m=f}),i(a,h,m)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,s={}){const r=s.batchSize==null?32:s.batchSize;T1(r);const a=this.standardizeUserDataXY(e,n,!0,r);try{const o=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,o,r,s.verbose,s.steps);return Ss(u)}finally{ti(a[0],e),ti(a[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),iY(this,e,n)}checkNumSamples(e,n,s,r="steps"){let i;if(s!=null){if(i=null,n!=null)throw new j(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new j(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new j("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),r=s?n:[n],i=this.retrieveSymbolicTensors(r),a=new Za;if(e instanceof vt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new j(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new j(`No value is provided for the model's input ${l.name}`);a.add(l,u)}const o=Id(i,a);return s?o:o[0]}retrieveSymbolicTensors(e){const n=Ml(null,e.length);let s=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],a=i.map(o=>o.name);for(let o=0;o<e.length;++o){const l=a.indexOf(e[o]);if(l!==-1&&(n[o]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw n.forEach((i,a)=>{i==null&&r.push(e[a])}),new j(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return n}predictLoop(e,n=32,s=!1){return Q(()=>{const r=this.checkNumSamples(e);if(s)throw new Qe("Verbose predictLoop() is not implemented yet.");const i=E1(r,n),a=this.outputs.map(o=>[]);for(let o=0;o<i.length;++o)Q(()=>{const u=i[o][0],c=i[o][1],h=md(e,u,c),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new Za(d);return Id(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return Ss(a.map(o=>Jt(o,0)))})}predict(e,n={}){const s=tO(e);tI(s,this.inputNames,this.feedInputShapes,!1);try{const r=n.batchSize==null?32:n.batchSize;return T1(r),this.predictLoop(s,r)}finally{ti(s,e)}}predictOnBatch(e){tI(e,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,s=!0,r){if(this.optimizer_==null)throw new Br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===Cy?i.push(o.slice(0,o.length-1).concat([1])):i.push(o)}if(e=eI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=eI(n,this.feedOutputNames,i,!1,"target"),oY(e,n),lY(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new j(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,s,r,i=!0,a){const[o,l]=this.standardizeUserDataXY(e,n,i,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=Z_(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await J_(l[h],null,c[h]))}return[o,l,u]}testLoop(e,n,s,r=0,i){return Q(()=>{const a=this.checkNumSamples(n,s,i,"steps"),o=[];if(r>0)throw new Qe("Verbose mode is not implemented yet.");if(i!=null)throw new Qe("steps mode in testLoop() is not implemented yet");{const l=E1(a,s),u=bn(mi(0,a));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],f=wl(u,h,d-h),p=wv(n,f),m=e(p);if(c===0)for(let g=0;g<m.length;++g)o.push(Ae(0));for(let g=0;g<m.length;++g){const y=m[g];o[g]=re(o[g],M(d-h,y))}}for(let c=0;c<o.length;++c)o[c]=we(o[c],a)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,n=[];for(let s=0;s<e.length;++s){const r=e[s];let i=r;if(MN(e,r)>1){const a=MN(e.slice(0,s),r);i+=`_${a}`}n.push(i)}return n}makeTrainFunction(){return e=>{const n=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new Za(h),f=Id(this.outputs,d,{training:!0});let p;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],f[m]);i[m]!=null&&(y=J7(y,i[m]));const x=tn(y);n.push(x),m===0?p=y:p=re(p,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=n[m];else{const y=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=tn(y(r[x],f[x]))}Pn(g),a.push(g)}return p=tn(p),this.calculateLosses().forEach(m=>{p=re(p,m)}),p},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(o,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>Q(()=>{const n=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:r[u]});const o=new Za(a),l=Id(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=tn(c(i[u],l[u]));u===0?s=h:s=re(s,h),n.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=tn(c(i[h],l[h]));n.push(d)}return n})}async fit(e,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,a,o,l,u,c,h,d;try{const f=s.batchSize==null?32:s.batchSize;T1(f);const m=await this.standardizeUserData(e,n,s.sampleWeight,s.classWeight,!1,f);r=m[0],i=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new Qe("validationData including sample weights is not supported yet."):new j(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const D=await this.standardizeUserData(l,u,null,null,!0,f);c=D[0],h=D[1],y=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const A=Math.floor(r[0].shape[0]*(1-s.validationSplit)),D=r[0].shape[0];c=md(r,A,D),a=r,r=md(r,0,A),h=md(i,A,D),o=i,i=md(i,0,A),y=c.concat(h)}else s.validationSteps!=null&&(g=!0);const x=r.concat(i).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let S,N;g?(this.makeTestFunction(),S=this.testFunction,N=v.slice().concat(v.map(A=>"val_"+A))):(S=null,y=[],N=v.slice());const I=W_(s.callbacks,s.yieldEvery);return await this.fitLoop(w,x,v,f,s.epochs,s.verbose,I,S,y,s.shuffle,N,s.initialEpoch,null,null)}finally{this.isTraining=!1,ti(r,e),ti(i,n),ti(a,e),ti(o,n),ti(c,l),ti(h,u),d!=null&&ze(d)}}async fitLoop(e,n,s,r,i,a,o,l,u,c,h,d,f,p){r==null&&(r=32),i==null&&(i=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),p!=null&&(m=!0,f==null))throw new j("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(n,r,f,"steps_per_epoch");let y;g!=null&&(y=mi(0,g)),a==null&&(a=1);const{callbackList:x,history:w}=G_(o,a,i,d,g,f,r,m,h);x.setModel(this),this.history=w,await x.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<i;++v){await x.onEpochBegin(v);const S={};if(f!=null)throw new Qe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Qe("batch shuffling is not implemneted yet");c&&sU(y);const N=bn(y),I=E1(g,r);for(let T=0;T<I.length;++T){const A={};if(await x.onBatchBegin(T,A),Q(()=>{const D=I[T][0],O=I[T][1],U=wl(N,D,O-D);A.batch=T,A.size=O-D;const B=wv(n,U),q=e(B);for(let H=0;H<s.length;++H){const L=s[H],Z=q[H];A[L]=Z,Pn(Z)}if(T===I.length-1&&m){const H=this.testLoop(l,u,r);for(let L=0;L<s.length;++L){const Z=s[L],K=H[L];Pn(K),S["val_"+Z]=K}}}),await x.onBatchEnd(T,A),U_(A),this.stopTraining_)break}N.dispose()}if(await x.onEpochEnd(v,S),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return nY(this,e,n)}async trainOnBatch(e,n){const s=await this.standardizeUserData(e,n),r=s[0],i=s[1],o=this.makeTrainFunction()(r.concat(i)),l=[];for(const u of o){const c=await u.data();l.push(c[0])}return ze(o),ti(s[0],e),ti(s[1],n),Ss(l)}getNamedWeights(e){const n=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||n.push({name:r[a].originalName,tensor:i[a]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=ev().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-ev().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=la(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>la(n))}else{const n=Object.keys(this.loss);e={};const s=this.loss;for(const r of n)if(typeof s[r]=="string")e[r]=la(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[la(Jm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>la(Jm(e)));{const e={};for(const n in this.metrics)e[n]=la(Jm(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=xv(e.optimizer_config),s=Ca(n);let r;if(typeof e.loss=="string")r=tl(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>tl(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=tl(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>tl(a));else if(e.metrics!=null){i={};for(const a in e.metrics)i[a]=tl(e.metrics[a])}this.compile({loss:r,metrics:i,optimizer:s})}async save(e,n){if(typeof e=="string"){const u=d3(e);if(u.length===0)throw new j(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new j(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new j("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await tv(this.getNamedWeights(n)),o={modelTopology:this.toJSON(null,!1),format:cY,generatedBy:`TensorFlow.js tfjs-layers v${Q_}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await tv(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=u3([s.data,c])}return this.userDefinedMetadata!=null&&(YN(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,e.save(o)}setUserDefinedMetadata(e){YN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}rc.className="Model";oe(rc);class nO extends rc{}nO.className="Functional";oe(nO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nf extends rc{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Qb("sequential_"),e.layers!=null)for(const n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new j(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof Nf||e instanceof rc;let s;if(n){if(s=e,s.outputs.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new j("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new j("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=d7({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new j(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=L_(this.outputs[0])}this.inboundNodes=[],new Jb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ml(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(mt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new rc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,s=console.log){this.built||this.build(),super.summary(e,n,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,s={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluate(e,n,s)}async evaluateDataset(e,n){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,s={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fit(e,n,s)}async fitDataset(e,n){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,s={},r=!1){let i,a={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new j("Legacy serialization format not supported yet.");i=n}else R(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,a=n;const o=new e(a);if(!(o instanceof Nf))throw new Qe(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of i){const c=Ca(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new j("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new j("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Nf.className="Sequential";oe(Nf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let os=class extends Ph{getConfig(){return{}}};class sO extends os{apply(e,n=1){return YK(e,n)}}sO.className="elu";oe(sO);class rO extends os{apply(e){return PS(e)}}rO.className="selu";oe(rO);class iO extends os{apply(e){return ea(e)}}iO.className="relu";oe(iO);class aO extends os{apply(e){return Q(()=>Co(6,ea(e)))}}aO.className="relu6";oe(aO);class oO extends os{apply(e){return e}}oO.className="linear";oe(oO);class lO extends os{apply(e){return ur(e)}}lO.className="sigmoid";oe(lO);class uO extends os{apply(e){return ZK(e)}}uO.className="hardSigmoid";oe(uO);class cO extends os{apply(e){return Fh(e)}}cO.className="softplus";oe(cO);class hO extends os{apply(e){return QK(e)}}hO.className="softsign";oe(hO);class dO extends os{apply(e){return Ll(e)}}dO.className="tanh";oe(dO);let CC=class extends os{apply(e,n=-1){return wb(e,n)}};CC.className="softmax";oe(CC);class fO extends os{apply(e,n=-1){return SS(e,n)}}fO.className="logSoftmax";oe(fO);class pO extends os{apply(e){return Q(()=>Q(()=>{const n=Math.sqrt(2),s=M(.5,re(1,bS(we(e,n))));return M(e,s)}))}}pO.className="gelu";oe(pO);class mO extends os{apply(e){return Q(()=>M(.5,M(e,re(1,Ll(M(Yn(we(2,Math.PI)),re(e,M(.044715,Ra(e,3)))))))))}}mO.className="gelu_new";oe(mO);class gO extends os{apply(e){return Q(()=>M(e,Ll(Fh(e))))}}gO.className="mish";oe(gO);class yO extends os{apply(e,n=1){return Q(()=>M(ur(M(e,n)),e))}}yO.className="swish";oe(yO);function $o(t){return t.getClassName()}function R1(t,e={}){return rm(t,_r.getMap().classNameMap,e,"activation")}function No(t){if(t==null){const e={};return e.className="linear",e.config={},R1(e)}if(typeof t=="string"){const e={};return e.className=t,e.config={},R1(e)}else return t instanceof os?t:R1(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hY(t){if(t!=null&&typeof t!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}class xO extends Ph{}class bO extends xO{constructor(e){super(),hY(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Q(()=>{let n=cn([1]);return this.hasL1&&(n=re(n,Ie(M(this.l1,Cn(e))))),this.hasL2&&(n=re(n,Ie(M(this.l2,am(e))))),G(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}bO.className="L1L2";oe(bO);const nI={l1l2:"L1L2"};function At(t){return uC(t)}function sI(t,e={}){return rm(t,_r.getMap().classNameMap,e,"regularizer")}function Xt(t){if(t==null)return null;if(typeof t=="string"){const n={className:t in nI?nI[t]:t,config:{}};return sI(n)}else return t instanceof xO?t:sI(t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wO extends tt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ve(e);let s=ea(e);return this.maxValue!=null&&(s=Rs(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}wO.className="ReLU";oe(wO);class vO extends tt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ve(e);return ub(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}vO.className="LeakyReLU";oe(vO);class SO extends tt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xt(e.alphaRegularizer),this.alphaConstraint=En(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new j(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=mt(e);const n=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)n[r-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new $n({ndim:e.length,axes:s})],this.built=!0}call(e,n){return e=Ve(e),gb(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Zt(this.alphaInitializer),alphaRegularizer:At(this.alphaRegularizer),alphaConstraint:Tn(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}SO.className="PReLU";oe(SO);let CO=class extends tt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Qe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){const s=Ve(e);return Qp(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};CO.className="ELU";oe(CO);class kO extends tt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){const s=Ve(e);return M(s,pe(Zs(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}kO.className="ThresholdedReLU";oe(kO);class $O extends tt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new CC().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){return Q(()=>{let s=Ve(e);const r=n.mask;if(r!=null){const i=M(ve(Us(s.shape),pe(r,s.dtype)),Ae(-1e9));s=re(s,i)}return this.axis instanceof Array?this.axis.length>1?ys(ve(s,hb(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}$O.className="Softmax";oe($O);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ic(t,e,n){if(typeof t=="number")return Ml(t,e);if(t.length!==e)throw new j(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const r=t[s];if(!jK(r))throw new j(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${r}`)}return t}function ui(t,e,n,s,r=1){if(t==null)return t;const i=e+(e-1)*(r-1);let a;return n==="same"?a=t:a=t-i+1,Math.floor((a+s-1)/s)}function _i(t,e,n,s){if(t==null)return null;if(s==="valid")t=t*e+ko([n-e,0]);else if(s==="same")t=t*e;else throw new j(`Unsupport padding mode: ${s}.`);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kC(t,e){return Q(()=>(fn(e),e==="channelsFirst"?ut(t,[0,2,3,1]):t))}function NO(t,e){return Q(()=>(fn(e),e==="channelsFirst"?ut(t,[0,2,3,4,1]):t))}function dY(t,e,n,s=1,r="valid",i,a=1){return Q(()=>{if(i==null&&(i=gi()),fn(i),t.shape.length!==3)throw new j(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(e.shape.length!==3)throw new j(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new j(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if(i==="channelsFirst"&&(t=ut(t,[0,2,1])),r==="causal")throw new Qe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=pS(t,e,s,r==="same"?"same":"valid","NWC",a);return n!=null&&(o=Si(o,n)),o})}function rI(t,e,n,s=[1,1],r="valid",i,a,o=null){return Q(()=>{if(i==null&&(i=gi()),fn(i),t.rank!==3&&t.rank!==4)throw new j(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(e.rank!==3&&e.rank!==4)throw new j(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=kC(t,i);if(r==="causal")throw new Qe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=bD({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),i==="channelsFirst"&&(l=ut(l,[0,3,1,2])),l})}function fY(t,e,n,s=[1,1,1],r="valid",i,a){return Q(()=>{if(i==null&&(i=gi()),fn(i),t.rank!==4&&t.rank!==5)throw new j(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(e.rank!==4&&e.rank!==5)throw new j(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=NO(t,i);if(r==="causal")throw new Qe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=M3(o,e,s,r==="same"?"same":"valid","NDHWC",a),n!=null&&(o=Si(o,n)),i==="channelsFirst"&&(o=ut(o,[0,4,1,2,3])),o})}class n0 extends tt{constructor(e,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",n0.verifyArgs(n),this.rank=e,Mn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Qe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ic(n.kernelSize,e,"kernelSize"),this.strides=ic(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,mr(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,fn(this.dataFormat),this.activation=No(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=jt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=En(n.biasConstraint),this.biasRegularizer=Xt(n.biasRegularizer),this.activityRegularizer=Xt(n.activityRegularizer),this.dilationRate=ic(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new j(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new j(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new j(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Di("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!cC(e.kernelSize,"number",1,3))throw new j(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$o(this.activation),useBias:this.useBias,biasInitializer:Zt(this.biasInitializer),biasRegularizer:At(this.biasRegularizer),activityRegularizer:At(this.activityRegularizer),biasConstraint:Tn(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}class Mh extends n0{constructor(e,n){super(e,n),this.kernel=null,Mh.verifyArgs(n),this.filters=n.filters,Mn(this.filters,"filters"),this.kernelInitializer=jt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=En(n.kernelConstraint),this.kernelRegularizer=Xt(n.kernelRegularizer)}build(e){e=mt(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new j(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(e,n){return Q(()=>{e=Ve(e);let s;const r=this.bias==null?null:this.bias.read(),i=S_(this.activation.getClassName());if(i!=null&&this.rank===2)s=rI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=dY(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=rI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=fY(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Qe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=mt(e);const n=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const a=ui(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);n.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(n),r.push(this.filters)):(r.push(this.filters),r=r.concat(n)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Zt(this.kernelInitializer),kernelRegularizer:At(this.kernelRegularizer),kernelConstraint:Tn(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new j(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class cm extends Mh{constructor(e){super(2,e),cm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cC(e.kernelSize,"number",1,2))throw new j(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}cm.className="Conv2D";oe(cm);class hm extends Mh{constructor(e){super(3,e),hm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new j(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}hm.className="Conv3D";oe(hm);class IO extends cm{constructor(e){if(super(e),this.inputSpec=[new $n({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==4)throw new j("Input should have rank 4; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $n({ndim:4,axes:{[n]:s}})],this.built=!0}call(e,n){return Q(()=>{let s=Ve(e);if(s.shape.length!==4)throw new j(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=r[a],u=r[o],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=_i(l,d,c,this.padding),m=_i(u,f,h,this.padding),g=[i,p,m,this.filters];this.dataFormat!=="channelsLast"&&(s=ut(s,[0,2,3,1]));let y=gS(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=ut(y,[0,3,1,2])),this.bias!=null&&(y=Si(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=mt(e);const n=e.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return n[s]=this.filters,n[r]=_i(n[r],l,a,this.padding),n[i]=_i(n[i],u,o,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}IO.className="Conv2DTranspose";oe(IO);class TO extends hm{constructor(e){if(super(e),this.inputSpec=[new $n({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==5)throw new j("Input should have rank 5; Received input shape: "+JSON.stringify(e));const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");const s=e[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $n({ndim:5,axes:{[n]:s}})],this.built=!0}call(e,n){return Q(()=>{let s=Ve(e);if(s.shape.length!==5)throw new j(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const u=r[l],c=r[a],h=r[o],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],x=_i(u,m,d,this.padding),w=_i(c,g,f,this.padding),v=_i(h,y,p,this.padding),S=[i,x,w,v,this.filters];this.dataFormat!=="channelsLast"&&(s=ut(s,[0,2,3,4,1]));let N=V3(s,this.kernel.read(),S,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=ut(N,[0,4,1,2,3])),this.bias!==null&&(N=Si(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=mt(e);const n=e.slice();let s,r,i,a;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,a=4):(s=4,r=1,i=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[r]=_i(n[r],c,o,this.padding),n[i]=_i(n[i],h,l,this.padding),n[a]=_i(n[a],d,u,this.padding),n}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}TO.className="Conv3DTranspose";oe(TO);class EO extends Mh{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new j("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new j("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new j(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=jt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xt(n.depthwiseRegularizer),this.depthwiseConstraint=En(n.depthwiseConstraint),this.pointwiseInitializer=jt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xt(n.pointwiseRegularizer),this.pointwiseConstraint=En(n.pointwiseConstraint)}build(e){if(e=mt(e),e.length<this.rank+2)throw new j(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new j(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);const s=e[n],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let o=0;o<this.rank;++o)i.push(1);i.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new $n({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(e,n){return Q(()=>{e=Ve(e);let s;if(this.rank===1)throw new Qe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=ut(e,[0,2,3,1])),s=MS(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Si(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=ut(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Zt(this.depthwiseInitializer),e.pointwiseInitializer=Zt(this.pointwiseInitializer),e.depthwiseRegularizer=At(this.depthwiseRegularizer),e.pointwiseRegularizer=At(this.pointwiseRegularizer),e.depthwiseConstraint=Tn(this.depthwiseConstraint),e.pointwiseConstraint=Tn(this.pointwiseConstraint),e}}EO.className="SeparableConv";class RO extends EO{constructor(e){super(2,e)}}RO.className="SeparableConv2D";oe(RO);class s0 extends Mh{constructor(e){super(1,e),s0.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!cC(e.kernelSize,"number",1,1))throw new j(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}s0.className="Conv1D";oe(s0);class AO extends tt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return Q(()=>{if(e=Ve(e),this.dataFormat==="channelsLast"){const s=Zm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zm(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Zm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zm(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}AO.className="Cropping2D";oe(AO);class DO extends tt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,fn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,WK(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const n=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,s]}else{const n=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],n,s,e[3]]}}call(e,n){return Q(()=>{let s=Ve(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=ut(s,[0,2,3,1]);const i=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?gs.resizeNearestNeighbor(s,[i,a]):gs.resizeBilinear(s,[i,a]);return ut(o,[0,3,1,2])}else{const i=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?gs.resizeNearestNeighbor(s,[i,a]):gs.resizeBilinear(s,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}DO.className="UpSampling2D";oe(DO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pY(t,e,n=[1,1],s="valid",r,i){return Q(()=>{r==null&&(r=gi()),fn(r);let a=kC(t,r);if(t.rank!==4)throw new j(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(e.rank!==4)throw new j(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Yp(a,e,n,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(a=ut(a,[0,3,1,2])),a})}class _O extends n0{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=jt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=En(e.depthwiseConstraint),this.depthwiseRegularizer=Xt(e.depthwiseRegularizer)}build(e){if(e=mt(e),e.length<4)throw new j(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new j(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);const s=e[n],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return Q(()=>{e=Ve(e);let s=pY(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Si(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=mt(e);const n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=ui(n,this.kernelSize[0],this.padding,this.strides[0]),a=ui(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,i,a]:[e[0],i,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Zt(this.depthwiseInitializer),e.depthwiseRegularizer=At(this.depthwiseRegularizer),e.depthwiseConstraint=Tn(this.depthwiseRegularizer),e}}_O.className="DepthwiseConv2D";oe(_O);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OO(t,e,n,s){if(Array.isArray(t)){if(e!=null||n!=null)throw new j("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return e=r(e),n=r(n),{inputs:t,initialState:e,constants:n}}function FO(t,e,n,s=!1,r,i,a=!1,o=!1){return Q(()=>{const l=e.shape.length;if(l<3)throw new j(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(mi(2,l));e=ut(e,u),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=pe(pe(r,"bool"),"float32"),r.rank===l-1&&(r=xn(r,-1)),r=ut(r,u)),s&&(e=Xr(e,0),r!=null&&(r=Xr(r,0)));const c=[];let h,d=n;const f=e.shape[0],p=Kr(e);let m;r!=null&&(m=Kr(r));for(let y=0;y<f;++y){const x=p[y],w=Q(()=>t(x,d));if(r==null)h=w[0],d=w[1];else{const v=Q(()=>{const S=m[y],N=ve(dr(S),S),I=re(M(w[0],S),M(d[0],N)),T=d.map((A,D)=>re(M(w[1][D],S),M(A,N)));return{output:I,newStates:T}});h=v.output,d=v.newStates}o&&c.push(h)}let g;return o&&(g=Hs(c,1)),[h,g,d]})}class Po extends tt{constructor(e){super(e);let n;if(e.cell==null)throw new j("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new IC({cells:e.cell}):n=e.cell,n.stateSize==null)throw new j("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new $n({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return mi(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){mv(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const i=[];for(const a of n)i.push([e[0],a]);return[r].concat(i)}else return r}computeMask(e,n){return Q(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<e;++s)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Qe("Constants support is not implemented in RNN yet.");mv(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new $n({shape:[n,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Ke(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new j(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new $n({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){Q(()=>{if(!this.stateful)throw new Ai("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>cn([s,r])):this.states_=[cn([s,this.cell.stateSize])];else if(e==null)ze(this.states_),this.keptStates!=null&&(ze(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>cn([s,r])):this.states_[0]=cn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):ze(this.states_);for(let r=0;r<this.states_.length;++r){const i=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[s,a];if(!Ke(i.shape,o))throw new j(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>Pn(r.clone()))})}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=OO(e,s,r,this.numConstants);e=i.inputs,s=i.initialState,r=i.constants;let a=[],o=[];if(s!=null){n.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new $n({shape:u.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(n.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof qi){const u=[e].concat(a),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return Q(()=>{const s=n==null?null:n.mask,r=n==null?null:n.training;let i=n==null?null:n.initialState;e=Ve(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new j(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},u=FO((p,m)=>{const g=this.cell.call([p].concat(m),o);return[g[0],g.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const f=this.returnSequences?h:c;return this.returnState?[f].concat(d):f})}getInitialState(e){return Q(()=>{let n=cn(e.shape);return n=Ie(n,[1,2]),n=im(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?fv(n,[1,s]):n):this.cell.stateSize>1?[fv(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Po.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),n)}static fromConfig(e,n,s={}){const r=n.cell,i=Ca(r,s);return new e(Object.assign(n,{cell:i}))}}Po.className="RNN";oe(Po);class r0 extends tt{}class $C extends r0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mn(this.units,"units"),this.activation=No(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=wc([1,ko([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=wc([1,ko([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return Q(()=>{if(e=e,e.length!==2)throw new j(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>dr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>dr(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?i=Wi(M(e,a),this.kernel.read()):i=Wi(e,this.kernel.read()),this.bias!=null&&(i=Si(i,this.bias.read())),o!=null&&(s=M(s,o));let l=re(i,Wi(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:$o(this.activation),useBias:this.useBias,kernelInitializer:Zt(this.kernelInitializer),recurrentInitializer:Zt(this.recurrentInitializer),biasInitializer:Zt(this.biasInitializer),kernelRegularizer:At(this.kernelRegularizer),recurrentRegularizer:At(this.recurrentRegularizer),biasRegularizer:At(this.biasRegularizer),activityRegularizer:At(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}$C.className="SimpleRNNCell";oe($C);class zO extends Po{constructor(e){e.cell=new $C(e),super(e)}call(e,n){return Q(()=>{this.cell.dropoutMask!=null&&(ze(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ze(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,n){return new e(n)}}zO.className="SimpleRNN";oe(zO);class NC extends r0{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new j("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Mn(this.units,"units"),this.activation=No(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=No(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=wc([1,ko([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=wc([1,ko([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return Q(()=>{if(e=e,e.length!==2)throw new j(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training==null?!1:n.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>dr(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>dr(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=M(e,i[0]));let c=Wi(e,this.kernel.read());this.useBias&&(c=Si(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=M(r,a[0]));const h=this.recurrentKernel.read(),[d,f]=Ws(h,[2*this.units,this.units],h.rank-1),p=Wi(r,d),[m,g,y]=Ws(c,3,c.rank-1),[x,w]=Ws(p,2,p.rank-1);o=this.recurrentActivation.apply(re(m,x)),l=this.recurrentActivation.apply(re(g,w));const v=Wi(M(l,r),f);u=this.activation.apply(re(y,v));const S=re(M(o,r),M(re(1,Gt(o)),u));return[S,S]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:$o(this.activation),recurrentActivation:$o(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zt(this.kernelInitializer),recurrentInitializer:Zt(this.recurrentInitializer),biasInitializer:Zt(this.biasInitializer),kernelRegularizer:At(this.kernelRegularizer),recurrentRegularizer:At(this.recurrentRegularizer),biasRegularizer:At(this.biasRegularizer),activityRegularizer:At(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}NC.className="GRUCell";oe(NC);class LO extends Po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new NC(e),super(e)}call(e,n){return Q(()=>{this.cell.dropoutMask!=null&&(ze(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ze(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}LO.className="GRU";oe(LO);class i0 extends r0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mn(this.units,"units"),this.activation=No(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=No(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Xt(e.kernelRegularizer),this.recurrentRegularizer=Xt(e.recurrentRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.kernelConstraint=En(e.kernelConstraint),this.recurrentConstraint=En(e.recurrentConstraint),this.biasConstraint=En(e.biasConstraint),this.dropout=wc([1,ko([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=wc([1,ko([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=mt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;r=new(n=class extends Yr{apply(l,u){const c=i.apply([a]),h=new dC().apply([a]),d=i.apply([a*2]);return VN(VN(c,h),d)}},n.className="CustomInit",n)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return Q(()=>{const s=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new j(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>dr(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>dr(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=M(e,a[0]));let d=Wi(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=M(r,o[0])),d=re(d,Wi(r,this.recurrentKernel.read())),this.useBias&&(d=Si(d,this.bias.read()));const[f,p,m,g]=Ws(d,4,d.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(p),c=re(M(u,i),M(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=M(h,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),n={units:this.units,activation:$o(this.activation),recurrentActivation:$o(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zt(this.kernelInitializer),recurrentInitializer:Zt(this.recurrentInitializer),biasInitializer:Zt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:At(this.kernelRegularizer),recurrentRegularizer:At(this.recurrentRegularizer),biasRegularizer:At(this.biasRegularizer),activityRegularizer:At(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),recurrentConstraint:Tn(this.recurrentConstraint),biasConstraint:Tn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}i0.className="LSTMCell";oe(i0);class PO extends Po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new i0(e),super(e)}call(e,n){return Q(()=>{this.cell.dropoutMask!=null&&(ze(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ze(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}PO.className="LSTM";oe(PO);class IC extends r0{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return Q(()=>{e=e;let s=e.slice(1);const r=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(s.splice(0,o.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=r[o],o===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,n),i.push(a.slice(1))}s=[];for(const o of i.slice().reverse())s.push(...o);return[a[0]].concat(s)})}build(e){mv(e)&&(e=e[0]),e=e;let n;this.cells.forEach((s,r)=>{bl(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){const e=super.getConfig(),n=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,n,s={}){const r=[];for(const i of n.cells)r.push(Ca(i,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(e)}return e}getWeights(){const e=[];for(const n of this.cells)e.push(...n.weights);return gv(e)}setWeights(e){const n=[];for(const s of this.cells){const r=s.weights.length,i=e.splice(r);for(let a=0;a<s.weights.length;++a)n.push([s.weights[a],i[a]])}bC(n)}}IC.className="StackedRNNCells";oe(IC);function Io(t){const{ones:e,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=t,a=()=>i!=null?i(e(),n):E_(e(),n),o=()=>om(a,e,s);return!r||r<=1?Pn(o().clone()):Array(r).fill(void 0).map(o).map(u=>Pn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var mY=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]]);return n};class MO extends Po{constructor(e){if(e.unroll)throw new Qe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Qe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new $n({ndim:5})]}call(e,n){return Q(()=>{if(this.cell.dropoutMask!=null&&(ze(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ze(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new j("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return Q(()=>{const{stateSize:n}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],a=cn(i);return Array.isArray(n)?Array(n.length).fill(a):[a]})}resetStates(e,n=!1){Q(()=>{if(!this.stateful)throw new Ai("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>cn(i)):this.states_=[cn(i)];else if(e==null)ze(this.states_),this.keptStates!=null&&(ze(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>cn(i)):this.states_[0]=cn(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):ze(this.states_);for(let o=0;o<this.states_.length;++o){const l=e[o],u=i;if(!Ke(l.shape,u))throw new j(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>Pn(o.clone()))})}computeSingleOutputShape(e){const{dataFormat:n,filters:s,kernelSize:r,padding:i,strides:a,dilationRate:o}=this.cell,l=n==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=ui(u,r[0],i,a[0],o[0]),d=ui(c,r[1],i,a[1],o[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}MO.className="ConvRNN2D";class TC extends i0{constructor(e){const{filters:n,kernelSize:s,strides:r,padding:i,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,Mn(this.filters,"filters"),this.kernelSize=ic(s,2,"kernelSize"),this.kernelSize.forEach(l=>Mn(l,"kernelSize")),this.strides=ic(r||1,2,"strides"),this.strides.forEach(l=>Mn(l,"strides")),this.padding=i||"valid",mr(this.padding),this.dataFormat=a||"channelsLast",fn(this.dataFormat),this.dilationRate=ic(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Mn(l,"dilationRate"))}build(e){var n;e=mt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new j(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=4,a=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(n=class extends Yr{apply(d,f){const p=u.apply([c]),m=Us([c]),g=u.apply([c*2]);return hC([p,m,g])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return Q(()=>{if(e.length!==3)throw new j(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=n.training||!1,r=e[0],i=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>dr(r),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(se,ie,ue)=>!ie||!ie[ue]?se:M(ie[ue],se);let c=u(r,l,0),h=u(r,l,1),d=u(r,l,2),f=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>dr(i),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let m=u(i,p,0),g=u(i,p,1),y=u(i,p,2),x=u(i,p,3);const w=3,[v,S,N,I]=Ws(this.kernel.read(),o,w),[T,A,D,O]=this.useBias?Ws(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,v,T,this.padding),h=this.inputConv(h,S,A,this.padding),d=this.inputConv(d,N,D,this.padding),f=this.inputConv(f,I,O,this.padding);const[U,B,q,H]=Ws(this.recurrentKernel.read(),o,w);m=this.recurrentConv(m,U),g=this.recurrentConv(g,B),y=this.recurrentConv(y,q),x=this.recurrentConv(x,H);const L=this.recurrentActivation.apply(re(c,m)),Z=this.recurrentActivation.apply(re(h,g)),K=re(M(Z,a),M(L,this.activation.apply(re(d,y)))),ee=M(this.recurrentActivation.apply(re(f,x)),this.activation.apply(K));return[ee,ee,K]})}getConfig(){const e=super.getConfig(),{units:n}=e,s=mY(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,n,s,r){const i=vo(e,n,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Si(i,s,this.dataFormat):i}recurrentConv(e,n){return vo(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}TC.className="ConvLSTM2DCell";oe(TC);class BO extends MO{constructor(e){const n=new TC(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}BO.className="ConvLSTM2D";oe(BO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EC extends tt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const n=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?n[r]:this.noiseShape[r]);return s}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e);if(0<this.rate&&this.rate<1){const r=n.training==null?!1:n.training,i=this.getNoiseShape(s);return om(()=>E_(s,this.rate,i,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}EC.className="Dropout";oe(EC);class VO extends EC{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const n=e.shape;return[n[0],1,n[2]]}}VO.className="SpatialDropout1D";oe(VO);class UO extends tt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,Mn(this.units,"units"),this.activation=No(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=jt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=En(e.kernelConstraint),this.biasConstraint=En(e.biasConstraint),this.kernelRegularizer=Xt(e.kernelRegularizer),this.biasRegularizer=Xt(e.biasRegularizer),this.activityRegularizer=Xt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=mt(e);const n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=mt(e);const n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e),r=S_(this.activation.getClassName());let i;return r!=null?i=Wi(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=Wi(s,this.kernel.read()),this.bias!=null&&(i=Si(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:$o(this.activation),useBias:this.useBias,kernelInitializer:Zt(this.kernelInitializer),biasInitializer:Zt(this.biasInitializer),kernelRegularizer:At(this.kernelRegularizer),biasRegularizer:At(this.biasRegularizer),activityRegularizer:At(this.activityRegularizer),kernelConstraint:Tn(this.kernelConstraint),biasConstraint:Tn(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}UO.className="Dense";oe(UO);class WO extends tt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mt(e);for(const n of e.slice(1))if(n==null)throw new j(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ho(e,1)]}call(e,n){return Q(()=>{this.invokeCallHook(e,n);let s=Ve(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=ut(s,r)}return KK(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(e,n),e}}WO.className="Flatten";oe(WO);class GO extends tt{constructor(e){super(e),this.supportsMasking=!0,this.activation=No(e.activation)}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e);return this.activation.apply(s)})}getConfig(){const e={activation:$o(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}GO.className="Activation";oe(GO);class HO extends tt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return Q(()=>(e=Ve(e),qK(e,this.n)))}getConfig(){const e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}HO.className="RepeatVector";oe(HO);class jO extends tt{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){const s="Total size of new array must be unchanged.",r=n.slice();let i=1,a=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(a===null)a=l;else throw new j("Can only specifiy one unknown dimension.");else i*=u}const o=ho(e);if(a!==null){if(i===0||o%i!==0)throw new j(s);r[a]=o/i}else if(o!==i)throw new j(s);return r}computeOutputShape(e){let n=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return G(s,i)})}getConfig(){const e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}jO.className="Reshape";oe(jO);class qO extends tt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const n=mi(1,e.dims.length+1);if(!Ke(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new $n({ndim:this.dims.length+1})]}computeOutputShape(e){e=mt(e);const n=e.slice();return this.dims.forEach((s,r)=>{n[r+1]=e[s]}),n}call(e,n){return ut(Ve(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}qO.className="Permute";oe(qO);class XO extends tt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){const s=Ve(e);return gy(xc(s,this.maskValue),-1)}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e),a=gy(xc(s,this.maskValue),-1,!0);return M(s,pe(a,s.dtype))})}}XO.className="Masking";oe(XO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KO extends tt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(Ct(e.inputLength))}this.inputDim=e.inputDim,Mn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Mn(this.outputDim,"outputDim"),this.embeddingsInitializer=jt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xt(e.embeddingsRegularizer),this.activityRegularizer=Xt(e.activityRegularizer),this.embeddingsConstraint=En(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return Q(()=>this.maskZero?(e=Ve(e),xc(e,ct(e))):null)}computeOutputShape(e){if(e=mt(e),this.inputLength==null)return[...e,this.outputDim];const n=Ct(this.inputLength);if(n.length!==e.length-1)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<n.length;++r){const i=n[r],a=e[r+1];if(i!=null&&a!=null&&i!==a)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(n[s]=a),s++}}return[e[0],...n,this.outputDim]}call(e,n){return Q(()=>{this.invokeCallHook(e,n);let s=Ve(e);s.dtype!=="int32"&&(s=Ui(s,"int32"));const r=T_(this.embeddings.read(),G(s,[s.size]));return G(r,mt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Zt(this.embeddingsInitializer),embeddingsRegularizer:At(this.embeddingsRegularizer),activityRegularizer:At(this.activityRegularizer),embeddingsConstraint:Tn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}KO.className="Embedding";oe(KO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ou extends tt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Qe}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;const s=e.slice(0,e.length-n.length);for(let r=0;r<n.length;++r){const i=e[e.length-n.length+r],a=n[r];if(i==null||a==null||i<0||a<0)s.push(null);else if(i===1)s.push(a);else if(a===1)s.push(i);else{if(i!==a)throw new j("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mt(e)]),e=e,e.length<2)throw new j(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(const i of e)i!=null&&i[0]!==null&&n.push(i[0]);if(n=co(n),n.length>1)throw new j(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const a=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(i=>i.length);e.indexOf(null)===-1&&co(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return Q(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(i=>i.rank);if(r.indexOf(null)===-1){const i=ko(r);for(let a of e){const o=a.rank;for(let l=0;l<i-o;++l)a=im(a,1);s.push(a)}return this.mergeFunction(s)}else{let i=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let f=G(l,[h].concat(ho(c.slice(1))));f=ut(f,[1,0]),f=G(f,d),s.push(f),i=!0}else if(u>1){const c=mi(1,u).concat([0]);s.push(ut(l,c)),i=!0}else s.push(l)}let a=this.mergeFunction(s);const o=a.rank;if(i){if(o==null){const l=a.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));a=G(ut(G(a,[-1,c]),[1,0]),h)}else if(o>1){const l=[o-1].concat(mi(0,o-1));a=ut(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=co(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(e,n){return Q(()=>{if(n==null)return null;if(!Array.isArray(n))throw new j("`mask` should be an Array");if(!Array.isArray(e))throw new j("`inputs` should be an Array");if(n.length!==e.length)throw new j(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(r=>r==null))return null;n=n.map(r=>r==null?r:xn(r,0));let s=n[0];for(let r=1;r<n.length-1;++r)s=ji(s,n[r]);return s})}}class YO extends ou{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=re(n,e[s]);return n})}}YO.className="Add";oe(YO);class QO extends ou{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=M(n,e[s]);return n})}}QO.className="Multiply";oe(QO);class ZO extends ou{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let n=e[0].clone();for(let s=1;s<e.length;++s)n=re(n,e[s]);return M(1/e.length,n)})}}ZO.className="Average";oe(ZO);class JO extends ou{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=_a(n,e[s]);return n})}}JO.className="Maximum";oe(JO);class eF extends ou{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let n=e[0];for(let s=1;s<e.length;++s)n=Co(n,e[s]);return n})}}eF.className="Minimum";oe(eF);class tF extends ou{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new j("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(const r of e)if(r!=null){n=!1;break}if(n)return;const s=[];for(let r=0;r<e.length;++r){const i=e[r].slice();i.splice(this.axis,1);let a=!1;for(const o of s)if(Ke(o,i)){a=!0;break}a||s.push(i)}if(s.length>1)throw new j("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Q(()=>hC(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new j("A `Concatenate` layer should be called on a list of inputs.");const n=e,s=n[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of n.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new j("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new j("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new j(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return Q(()=>{let s=!0;if(n.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)n[a]==null?r.push(pe(dr(e[a]),"bool")):n[a].rank<e[a].rank?r.push(xn(n[a],-1)):r.push(n[a]);const i=Jt(r,this.axis);return dS(i,-1,!1)})}getConfig(){const e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}tF.className="Concatenate";oe(tF);function gd(t,e){for(;t<0;)t+=e;return t}function gY(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Qe("batchDot is not implemented for tensors of 4D or higher rank yet");if(R(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),R(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof n=="number"&&(n=[n,n]),t.dtype==="complex64"||e.dtype==="complex64")throw new Qe("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;n==null&&(n=[s-1,r-2]);const i=n;return Q(()=>{let a;if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);e=G(e,e.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);t=G(t,t.shape.concat(l))}else a=0;let o;if(t.shape.length===2&&e.shape.length===2)i[0]===i[1]?o=Ie(M(t,e),i[0]):o=Ie(M(ut(t,[1,0]),e),i[1]);else{const l=i[0]!==t.shape.length-1,u=i[1]===e.shape.length-1;o=rt(t,e,l,u)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+a;++c)u.push(c);o=gt(o,u)}return o.shape.length===1&&(o=xn(o,1)),o})}class nF extends ou{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){R(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0],s=e[1];if(n.length>3||s.length>3)throw new Qe("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new j(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new j(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,a)=>gd(i,e[a].shape.length)):r=[gd(this.axes,n.shape.length),gd(this.axes,s.shape.length)],this.normalize&&(n=Sy(n,r[0]),s=Sy(s,r[1])),gY(n,s,r)}interpretAxes(e,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[gd(this.axes,e.length),gd(this.axes,n.length)],s}computeOutputShape(e){R(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=e[0].slice(),s=e[1].slice();if(n.length>3||s.length>3)throw new Qe("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=n.concat(s);return i.length===1&&i.push(1),i}computeMask(e,n){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}nF.className="Dot";oe(nF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sF extends tt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e);return om(()=>re(Zb(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}sF.className="GaussianNoise";oe(sF);class rF extends tt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return Q(()=>{this.invokeCallHook(e,n);const s=Ve(e);return this.rate>0&&this.rate<1?om(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return M(s,Zb(s.shape,1,i))},()=>s,n.training||!1):s})}}rF.className="GaussianDropout";oe(rF);class iF extends tt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ve(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return Q(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return om(()=>{const i=Ve(e),o=-1.6732632423543772*1.0507009873554805;let l=zo(nu(s),this.rate);l=Ui(l,"float32");const u=((1-this.rate)*(1+this.rate*o**2))**-.5,c=-u*o*this.rate,h=re(M(i,l),M(re(l,-1),o));return re(M(h,u),c)},()=>Ve(e),n.training||!1)}return e})}}iF.className="AlphaDropout";oe(iF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function If(t,e,n,s,r,i=.001){let a;if(t.rank===2)a=R3(t,e,n,s,r,i);else if(t.rank===3)a=A3(t,e,n,s,r,i);else if(t.rank===4)a=D3(t,e,n,s,r,i);else throw new Qe(`batchNormalization is not implemented for array of rank ${t.rank} yet`);return a}function yY(t,e,n,s,r=.001){return Q(()=>{const i=pb(t,s),a=i.mean,o=i.variance;return[If(t,a,o,n,e,r),a,o]})}function xY(t,e,n,s,r=.001){return Q(()=>{const i=pb(t,s),a=i.mean,o=i.variance,l=[];for(const p of mi(0,t.rank))s.indexOf(p)!==-1?l.push(1):l.push(t.shape[p]);const u=G(a,l),c=G(o,l),h=e==null?null:G(e,l),d=n==null?null:G(n,l);return[If(t,u,c,d,h,r),a,o]})}function bY(t,e,n,s,r=.001){return Ke(s.slice().sort(),mi(0,t.rank-1))?yY(t,e,n,s,r):xY(t,e,n,s,r)}class aF extends tt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=jt(e.betaInitializer||"zeros"),this.gammaInitializer=jt(e.gammaInitializer||"ones"),this.movingMeanInitializer=jt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jt(e.movingVarianceInitializer||"ones"),this.betaConstraint=En(e.betaConstraint),this.gammaConstraint=En(e.gammaConstraint),this.betaRegularizer=Xt(e.betaRegularizer),this.gammaRegularizer=Xt(e.gammaRegularizer)}build(e){e=mt(e);const n=this.axis>=0?this.axis:this.axis+e.length,s=e[n];if(s==null)throw new j(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new $n({ndim:e.length,axes:{[n]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return Q(()=>{const s=n.training==null?!1:n.training,r=Ve(e),i=r.shape,a=i.length,o=mi(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const u=Ml(1,a);u[l]=i[l];const c=o.slice();c.sort();const h=!Ke(c,mi(0,a).slice(0,a-1)),d=()=>{if(h){const x=G(this.movingMean.read(),u),w=G(this.movingVariance.read(),u),v=this.center?G(this.beta.read(),u):null,S=this.scale?G(this.gamma.read(),u):null;return If(r,x,w,v,S,this.epsilon)}else return If(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[f,p,m]=bY(r,this.gamma.read(),this.beta.read(),o,this.epsilon),g=(x,w,v)=>{Q(()=>{const S=1-v,N=x.read(),I=M(ve(N,w),S);x.write(ve(N,I))})};return(()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,m,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zt(this.betaInitializer),gammaInitializer:Zt(this.gammaInitializer),movingMeanInitializer:Zt(this.movingMeanInitializer),movingVarianceInitializer:Zt(this.movingVarianceInitializer),betaRegularizer:At(this.betaRegularizer),gammaRegularizer:At(this.gammaRegularizer),betaConstraint:Tn(this.betaConstraint),gammaConstraint:Tn(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}aF.className="BatchNormalization";oe(aF);class oF extends tt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=jt(e.betaInitializer||"zeros"),this.gammaInitializer=jt(e.gammaInitializer||"ones"),this.betaRegularizer=Xt(e.betaRegularizer),this.gammaRegularizer=Xt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=mt(e);const n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=n);for(const i of this.axis)if(i<0||i>=n)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==co(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,n){const s=Ve(e),r=s.shape,i=r.length;return Q(()=>{let{mean:o,variance:l}=pb(s,this.axis,!0);const u=Ml(1,i);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==i?G(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const f=[],p=[];for(let m=0;m<i;++m)this.axis.indexOf(m)!==-1?(f.push(r[m]),p.push(1)):(f.push(1),p.push(r[m]));return o=Mr(o,f),l=Mr(l,f),h!=null&&(h=Mr(h,p)),d!=null&&(d=Mr(d,p)),If(s,o,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zt(this.betaInitializer),gammaInitializer:Zt(this.gammaInitializer),betaRegularizer:At(this.betaRegularizer),gammaRegularizer:At(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}oF.className="LayerNormalization";oe(oF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wY(t,e,n){return Q(()=>{if(t.rank!==4)throw new j(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new j("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=gi()),n!=="channelsLast"&&n!=="channelsFirst")throw new j(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],di(t,s)})}class lF extends tt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?gi():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new j(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,s;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new j(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new j(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[n,s]}this.inputSpec=[new $n({ndim:4})]}computeOutputShape(e){e=mt(e);let n,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],n,s]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],n,s,e[3]])}call(e,n){return Q(()=>wY(Ve(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}lF.className="ZeroPadding2D";oe(lF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a0(t,e,n,s,r,i){return Q(()=>{fn(r),k_(i),mr(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=gi()),i==null&&(i="max"),t=kC(t,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=fb(t,e,n,o):a=ib(t,e,n,o),r==="channelsFirst"&&(a=ut(a,[0,3,1,2])),a})}function uF(t,e,n,s,r,i){return Q(()=>{fn(r),k_(i),mr(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=gi()),i==null&&(i="max"),t=NO(t,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=nD(t,e,n,o):a=E3(t,e,n,o),r==="channelsFirst"&&(a=ut(a,[0,4,1,2,3])),a})}class cF extends tt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new j(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Mn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new j(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,mr(this.padding),this.inputSpec=[new $n({ndim:3})]}computeOutputShape(e){e=mt(e);const n=ui(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return Q(()=>{this.invokeCallHook(e,n),e=im(Ve(e),2);const s=this.poolingFunction(Ve(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return gt(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}}class hF extends cF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),a0(e,n,s,r,i,"max")}}hF.className="MaxPooling1D";oe(hF);class dF extends cF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),a0(e,n,s,r,i,"avg")}}dF.className="AveragePooling1D";oe(dF);class fF extends tt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new j(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Mn(this.poolSize,"poolSize"),Mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,fn(this.dataFormat),mr(this.padding),this.inputSpec=[new $n({ndim:4})]}computeOutputShape(e){e=mt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=ui(n,this.poolSize[0],this.padding,this.strides[0]),s=ui(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s]:[e[0],n,s,e[3]]}call(e,n){return Q(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class pF extends fF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),a0(e,n,s,r,i,"max")}}pF.className="MaxPooling2D";oe(pF);class mF extends fF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),a0(e,n,s,r,i,"avg")}}mF.className="AveragePooling2D";oe(mF);class gF extends tt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new j(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Mn(this.poolSize,"poolSize"),Mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,fn(this.dataFormat),mr(this.padding),this.inputSpec=[new $n({ndim:5})]}computeOutputShape(e){e=mt(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=ui(n,this.poolSize[0],this.padding,this.strides[0]),s=ui(s,this.poolSize[1],this.padding,this.strides[1]),r=ui(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,s,r]:[e[0],n,s,r,e[4]]}call(e,n){return Q(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class yF extends gF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),uF(e,n,s,r,i,"max")}}yF.className="MaxPooling3D";oe(yF);class xF extends gF{constructor(e){super(e)}poolingFunction(e,n,s,r,i){return fn(i),mr(r),uF(e,n,s,r,i,"avg")}}xF.className="AveragePooling3D";oe(xF);class bF extends tt{constructor(e){super(e),this.inputSpec=[new $n({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,n){throw new Qe}}class wF extends bF{constructor(e){super(e||{})}call(e,n){return Q(()=>{const s=Ve(e);return tn(s,1)})}}wF.className="GlobalAveragePooling1D";oe(wF);class vF extends bF{constructor(e){super(e||{})}call(e,n){return Q(()=>{const s=Ve(e);return Wr(s,1)})}}vF.className="GlobalMaxPooling1D";oe(vF);class SF extends tt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,fn(this.dataFormat),this.inputSpec=[new $n({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Qe}getConfig(){const e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}class CF extends SF{call(e,n){return Q(()=>{const s=Ve(e);return this.dataFormat==="channelsLast"?tn(s,[1,2]):tn(s,[2,3])})}}CF.className="GlobalAveragePooling2D";oe(CF);class kF extends SF{call(e,n){return Q(()=>{const s=Ve(e);return this.dataFormat==="channelsLast"?Wr(s,[1,2]):Wr(s,[2,3])})}}kF.className="GlobalMaxPooling2D";oe(kF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $F extends tt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,s={}){const r=n.layer,i=Ca(r,s);delete n.layer;const a={layer:i};return Object.assign(a,n),new e(a)}}class NF extends $F{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=mt(e),e.length<3)throw new j(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=mt(e);const n=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(n),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,n){return Q(()=>(e=Ve(e),FO((a,o)=>[Ve(this.layer.call(a,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}NF.className="TimeDistributed";oe(NF);function vY(t){au(UK,"BidirectionalMergeMode",t)}const SY="concat";class IF extends $F{constructor(e){super(e);const n=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=n,this.forwardLayer=Ca(s),n.goBackwards=n.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=n,this.backwardLayer=Ca(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?SY:e.mergeMode,vY(this.mergeMode),e.weights)throw new Qe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const n=e.length,s=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,r,i;return this.returnState&&(i=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):Ss(r)}apply(e,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=OO(e,s,r,this.numConstants);if(e=i.inputs,s=i.initialState,r=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,n);const a=[],o=[];if(s!=null){const u=s.length;if(u%2>0)throw new j("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,a.push(...s);const c=s.map(h=>new $n({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(r!=null)throw new Qe("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof qi;for(const u of a)if(u instanceof qi!==l)throw new j("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(a),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,n);return this.inputSpec=h,d}else return super.apply(e,n)}call(e,n){return Q(()=>{const s=n.initialState;let r,i;if(s==null)r=this.forwardLayer.call(e,n),i=this.backwardLayer.call(e,n);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(n,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(n,{initialState:u}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Xr(i,1));let o;return this.mergeMode==="concat"?o=hC([r,i]):this.mergeMode==="sum"?o=re(r,i):this.mergeMode==="ave"?o=M(.5,re(r,i)):this.mergeMode==="mul"?o=M(r,i):this.mergeMode==null&&(o=[r,i]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){bl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),bl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){const s=Ca(n.layer);if(delete n.layer,n.numConstants!=null)throw new Qe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=n;return r.layer=s,new e(r)}}IF.className="Bidirectional";oe(IF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class TF extends tt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return Q(()=>(e=Ve(e),e.dtype!=="float32"&&(e=Ui(e,"float32")),re(M(e,this.scale),this.offset)))}}TF.className="Rescaling";oe(TF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:CY,cropAndResize:kY}=gs;class EF extends tt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,s,r,i,a,o,l){return Q(()=>{let u,c=!1;const h=n/a,d=s/o,f=(r+n)/a,p=(i+s)/o,m=[h,d,f,p],g=[];e.rank===3?(c=!0,u=Hs([e])):u=e;for(let S=0;S<u.shape[0];S++)g.push(m);const y=li(g,[g.length,4]),x=bc(0,g.length,1,"int32"),v=kY(u,y,x,[r,i],"nearest");return Ui(c?Ve(Kr(v)):v,l)})}upsize(e,n,s,r){return Q(()=>{const i=CY(e,[n,s]);return Ui(i,r)})}call(e,n){return Q(()=>{const s=Ve(e),r=s.dtype,i=s.shape,a=i[i.length-3],o=i[i.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,a,o,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=mt(e);const n=e.length-3,s=e.length-2;return e[n]=this.height,e[s]=this.width,e}}EF.className="CenterCrop";oe(EF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $Y(t,e,n,s){let r=Ve(t);if(r.dtype!=="int32"&&(r=Ui(r,"int32")),e==="int")return r;const i=r.shape;if(r.rank===0&&(r=xn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=xn(r,-1)),r.rank>2)throw new j(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e),o=r;let l;if(typeof s<"u"&&e==="count"?l=ov(o,s,n,a):l=ov(o,[],n,a),e!=="tfIdf")return l;if(s)return M(l,s);throw new j("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RF extends tt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=mt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return Q(()=>{e=Ve(e),e.dtype!=="int32"&&(e=Ui(e,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new j(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=Ve(n.countWeights)}const r=Wr(e),i=bf(e),a=Zs(this.numTokens,r).bufferSync().get(0),o=zo(i,0).bufferSync().get(0);if(!(a&&o))throw new j(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return $Y(e,this.outputMode,this.numTokens,s)})}}RF.className="CategoryEncoding";oe(RF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const NY=["bilinear","nearest"],iI=new Set(NY);class AF extends tt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(iI.has(e.interpolation))this.interpolation=e.interpolation;else throw new j(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=mt(e);const n=e[2];return[this.height,this.width,n]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return Q(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return gs.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return gs.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...iI]} are supported`)})}}AF.className="Resizing";oe(AF);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class DF{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}DF.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _F extends tt{constructor(e){super(e),this.randomGenerator=new DF(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}}_F.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const IY=["bilinear","nearest"],aI=new Set(IY);class OF extends _F{constructor(e){super(e);const{factor:n,interpolation:s="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new j(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new j(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new j(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(aI.has(s))this.interpolation=s;else throw new j(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=mt(e);const n=e[2];return[this.imgHeight,-1,n]}call(e,n){return Q(()=>{const s=Ve(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=nu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return gs.resizeBilinear(e,a);case"nearest":return gs.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...aI]} are supported`)}})}}OF.className="RandomWidth";oe(OF);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TY=J();TY.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ls;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ls||(Ls={}));var oI;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(oI||(oI={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY={};function FF(t){return EY[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(t,e,n,s,r){const i=e.inputParams[t];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(i.type==="tensor")return Hn(e.inputNames[u],n,s,r);if(i.type==="tensors"){const d=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((p,m)=>{var g;return((g=d[m])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(p=>Hn(p,n,s,r))}const c=Hn(e.inputNames[u],n,s,r),h=c.dataSync();return i.type==="number"?h[0]:Ur(c.shape,h)}const a=e.attrParams[t];return a&&a.value}function Hn(t,e,n,s){const[r,i]=Ms(t,n);if(s!=null){const o=s.getHashTableHandleByName(r);if(o!=null)return o}const a=n.currentContextIds.find(o=>!!e[Iy(r,o)]);return a!==void 0?e[Iy(r,a)][i]:void 0}function lI(t,e,n){return e[Iy(t,n.currentContextId)]}function ua(t,e){const[n,s,r]=Ms(t,e);return[Iy(n,e&&e.currentContextId),s,r]}function Iy(t,e){return e?`${t}-${e}`:t}function Ms(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const i=e.parseNodeNameCache.get(t);if(i!=null)return i}const s=t.split(":");let r;if(s.length===1)r=[t,0,void 0];else{const i=s[0],a=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);r=[i,o,a]}return n&&e.parseNodeNameCache.set(t,r),r}function Ig(t,e,n){let s=k("pad",t,e,n);if(s==="explicit"){s=k("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)r[i][0]=s[i*2],r[i][1]=s[i*2+1];return r}return s}function ca(t){return t.kept?t:Sa(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],AY=Object.freeze(Object.defineProperty({__proto__:null,json:RY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_Y=Object.freeze(Object.defineProperty({__proto__:null,json:DY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OY=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],FY=Object.freeze(Object.defineProperty({__proto__:null,json:OY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],LY=Object.freeze(Object.defineProperty({__proto__:null,json:zY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],MY=Object.freeze(Object.defineProperty({__proto__:null,json:PY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VY=Object.freeze(Object.defineProperty({__proto__:null,json:BY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],WY=Object.freeze(Object.defineProperty({__proto__:null,json:UY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],HY=Object.freeze(Object.defineProperty({__proto__:null,json:GY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],qY=Object.freeze(Object.defineProperty({__proto__:null,json:jY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],KY=Object.freeze(Object.defineProperty({__proto__:null,json:XY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],QY=Object.freeze(Object.defineProperty({__proto__:null,json:YY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],JY=Object.freeze(Object.defineProperty({__proto__:null,json:ZY},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],t9=Object.freeze(Object.defineProperty({__proto__:null,json:e9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],s9=Object.freeze(Object.defineProperty({__proto__:null,json:n9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],i9=Object.freeze(Object.defineProperty({__proto__:null,json:r9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],o9=Object.freeze(Object.defineProperty({__proto__:null,json:a9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],u9=Object.freeze(Object.defineProperty({__proto__:null,json:l9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],h9=Object.freeze(Object.defineProperty({__proto__:null,json:c9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],f9=Object.freeze(Object.defineProperty({__proto__:null,json:d9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[AY,_Y,FY,LY,MY,VY,WY,HY,qY,KY,QY,JY,t9,s9,i9,o9,u9,h9,f9],n=[].concat(...e.map(s=>s.json));this.opMappers=n.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,n={}){const s=e.node,r=[],i=[],a=[],o=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?i.push(m[g.name]):(g.input==null||g.input.length===0)&&a.push(m[g.name]),m),{});let l=[];const u=[];let c={},h={};n!=null&&(c=this.mapSignatureEntries(n.inputs),h=this.mapSignatureEntries(n.outputs));const d=Object.keys(o);d.forEach(m=>{const g=o[m];g.inputNames.forEach((y,x)=>{const[w,,v]=ua(y),S=o[w];if(S.outputs!=null){const N=S.outputs.indexOf(v);if(N!==-1){const I=`${w}:${N}`;g.inputNames[x]=I}}g.inputs.push(S),S.children.push(g)})}),Object.keys(h).length===0?d.forEach(m=>{const g=o[m];g.children.length===0&&u.push(g)}):Object.keys(h).forEach(m=>{const[g]=ua(m),y=o[g];y!=null&&(y.signatureKey=h[m],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[g]=ua(m),y=o[g];y&&(y.signatureKey=c[m],l.push(y))}):l=r;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const p={nodes:o,inputs:l,outputs:u,weights:i,placeholders:r,signature:n,functions:f};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,s)=>(n[e[s].name]=s,n),{})}mapNode(e){const n=FF(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(s.inputParams=n.inputs.reduce((r,i)=>(r[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},r),{})),n.attrs!=null&&(s.attrParams=n.attrs.reduce((r,i)=>{const a=i.type;let o;switch(i.type){case"string":o=Sv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Sv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=Ev(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Ev(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=kv(e.attr,i.tfName,i.defaultValue||0),o===void 0&&i.tfDeprecatedName&&(o=kv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=Tv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Tv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=Cv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Cv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=Av(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Av(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=Iv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Iv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=Rv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Rv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=$v(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=$v(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=Nv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Nv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=cI(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=cI(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return r[i.name]={value:o,type:a},r},{})),s}mapFunction(e){const n=e.nodeDef,s=[],r=[];let i={};n!=null&&(i=n.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const a=[],o=[];e.signature.inputArg.forEach(h=>{const[d]=ua(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:RC(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,a.push(f),i[d]=f}),Object.keys(i).forEach(h=>{const d=i[h];d.inputNames.forEach((f,p)=>{const[m,,g]=ua(f),y=i[m];if(y.outputs!=null){const x=y.outputs.indexOf(g);if(x!==-1){const w=`${m}:${x}`;d.inputNames[p]=w}}d.inputs.push(y),y.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=ua(u[h.name]),p=i[d];p!=null&&(p.defaultOutput=f,o.push(p))});const c=this.mapArgsToSignature(e);return{nodes:i,inputs:a,outputs:o,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s),n),{}),outputs:e.signature.outputArg.reduce((n,s)=>(n[s.name]=this.mapArgToTensorInfo(s,e.ret),n),{})}}mapArgToTensorInfo(e,n){let s=e.name;return n!=null&&(s=n[s]),{name:s,dtype:e.type}}}function p9(t){const e=J().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function zF(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):p9(t);return e?n:n.toLowerCase()}function Sv(t,e,n,s=!1){const r=t[e];return r!=null?zF(r.s,s):n}function Cv(t,e,n){const s=t[e];return s?s.b:n}function kv(t,e,n){const s=t[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function RC(t){switch(typeof t=="string"&&(t=Ls[t]),t){case Ls.DT_FLOAT:case Ls.DT_HALF:return"float32";case Ls.DT_INT32:case Ls.DT_INT64:case Ls.DT_INT8:case Ls.DT_UINT8:return"int32";case Ls.DT_BOOL:return"bool";case Ls.DT_DOUBLE:return"float32";case Ls.DT_STRING:return"string";case Ls.DT_COMPLEX64:case Ls.DT_COMPLEX128:return"complex64";default:return null}}function cI(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function $v(t,e,n){const s=t[e];return s&&s.type?RC(s.type):n}function Nv(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map(r=>RC(r)):n}function LF(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Iv(t,e,n){const s=t[e];return s&&s.shape?LF(s.shape):n}function Tv(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function Ev(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map(i=>zF(i,s)):n}function Rv(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>LF(r)):n}function Av(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m9{constructor(e,n,s){this.node=e,this.tensorMap=n,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,i)=>(r[i]=this.getAttr(i),r),{}))}getInput(e){return Hn(e,this.tensorMap,this.context)}getAttr(e,n){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Hn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return kv(this.node.rawAttrs,e,n);if(s.s!=null)return Sv(this.node.rawAttrs,e,n);if(s.b!=null)return Cv(this.node.rawAttrs,e,n);if(s.shape!=null)return Iv(this.node.rawAttrs,e,n);if(s.type!=null)return $v(this.node.rawAttrs,e,n);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Tv(this.node.rawAttrs,e,n);if(s.list.s!=null)return Ev(this.node.rawAttrs,e,n);if(s.list.shape!=null)return Rv(this.node.rawAttrs,e,n);if(s.list.b!=null)return Av(this.node.rawAttrs,e,n);if(s.list.type!=null)return Nv(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:i3,abs:Cn,acos:v3,acosh:S3,add:re,addN:OW,all:dS,any:gy,argMax:Fl,argMin:C3,asin:k3,asinh:$3,atan:N3,atan2:I3,atanh:T3,avgPool:ib,avgPool3d:E3,basicLSTMCell:sG,batchNorm:Kp,batchNorm2d:R3,batchNorm3d:A3,batchNorm4d:D3,batchToSpaceND:ab,bincount:_3,bitwiseAnd:dG,booleanMaskAsync:Xj,broadcastArgs:pG,broadcastTo:sc,buffer:Ge,cast:pe,ceil:O3,clipByValue:Rs,clone:Sa,complex:yo,concat:Jt,concat1d:F3,concat2d:z3,concat3d:L3,concat4d:P3,conv1d:pS,conv2d:vo,conv2dTranspose:gS,conv3d:M3,conv3dTranspose:V3,cos:ob,cosh:yS,cosineWindow:KS,cumprod:yy,cumsum:xS,denseBincount:ov,depthToSpace:U3,depthwiseConv2d:Yp,diag:LG,dilation2d:W3,div:we,divNoNan:G3,dot:H3,dropout:yD,einsum:_u,elu:Qp,enclosingPowerOfTwo:xD,ensureShape:qG,equal:hi,erf:bS,euclideanNorm:X3,exp:ys,expandDims:xn,expm1:K3,eye:vS,fft:vb,fill:Oh,floor:Jp,floorDiv:hS,fused:g5,gather:em,gatherND:r5,greater:Zs,greaterEqual:zo,ifft:Cf,imag:lb,image:gs,inTopKAsync:l5,irfft:WS,isFinite:Y3,isInf:Q3,isNaN:Z3,leakyRelu:ub,less:wf,lessEqual:eu,linalg:ND,linspace:bH,localResponseNormalization:J3,log:hr,log1p:cb,logSigmoid:eD,logSoftmax:SS,logSumExp:hb,logicalAnd:ji,logicalNot:db,logicalOr:CS,logicalXor:tD,losses:q8,lowerBound:FH,matMul:rt,max:Wr,maxPool:fb,maxPool3d:nD,maxPoolWithArgmax:MH,maximum:_a,mean:tn,meshgrid:UH,min:bf,minimum:Co,mirrorPad:$S,mod:sD,moments:pb,movingAverage:Qj,mul:M,multiRNNCell:XH,multinomial:YH,neg:Gt,norm:Zp,notEqual:xc,oneHot:NS,ones:Us,onesLike:dr,op:V,outerProduct:t6,pad:di,pad1d:r6,pad2d:a6,pad3d:l6,pad4d:c6,pool:rD,pow:Ra,prelu:gb,print:w3,prod:iD,raggedGather:x6,raggedRange:w6,raggedTensorToTensor:S6,rand:k6,randomGamma:G6,randomNormal:OS,randomStandardNormal:q6,randomUniform:nu,randomUniformInt:Y6,range:bc,real:vf,reciprocal:oD,relu:ea,relu6:FS,reshape:G,reverse:Xr,reverse1d:sj,reverse2d:ij,reverse3d:oj,reverse4d:uj,rfft:Sb,round:zS,rsqrt:LS,scalar:Ae,scatterND:Jj,searchSorted:kS,selu:PS,separableConv2d:MS,setdiff1dAsync:mj,sigmoid:ur,sign:lD,signal:j8,sin:BS,sinh:VS,slice:Be,slice1d:xb,slice2d:US,slice3d:bb,slice4d:Sf,softmax:wb,softplus:Fh,spaceToBatchND:mb,sparse:X8,sparseToDense:n5,spectral:H8,split:Ws,sqrt:Yn,square:$t,squaredDifference:GS,squeeze:gt,stack:Hs,step:zh,stridedSlice:uD,string:K8,sub:ve,sum:Ie,tan:cD,tanh:Ll,tensor:li,tensor1d:bn,tensor2d:Gr,tensor3d:hD,tensor4d:Fj,tensor5d:zj,tensor6d:Lj,tensorScatterUpdate:Mj,tile:Mr,topk:fD,transpose:ut,truncatedNormal:jS,unique:pD,unsortedSegmentSum:qS,unstack:Kr,upperBound:Hj,variable:mD,where:is,whereAsync:gD,zeros:cn,zerosLike:ct},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9=(t,e,n,s=Qn)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(k("a",t,e,n),k("b",t,e,n))];case"AddN":return[s.addN(k("tensors",t,e,n))];case"FloorMod":case"Mod":return[s.mod(k("a",t,e,n),k("b",t,e,n))];case"Mul":return[s.mul(k("a",t,e,n),k("b",t,e,n))];case"RealDiv":case"Div":return[s.div(k("a",t,e,n),k("b",t,e,n))];case"DivNoNan":return[s.divNoNan(k("a",t,e,n),k("b",t,e,n))];case"FloorDiv":return[s.floorDiv(k("a",t,e,n),k("b",t,e,n))];case"Sub":return[s.sub(k("a",t,e,n),k("b",t,e,n))];case"Minimum":return[s.minimum(k("a",t,e,n),k("b",t,e,n))];case"Maximum":return[s.maximum(k("a",t,e,n),k("b",t,e,n))];case"Pow":return[s.pow(k("a",t,e,n),k("b",t,e,n))];case"SquaredDifference":return[s.squaredDifference(k("a",t,e,n),k("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9=(t,e,n,s=Qn)=>{switch(t.op){case"Abs":case"ComplexAbs":return[s.abs(k("x",t,e,n))];case"Acos":return[s.acos(k("x",t,e,n))];case"Acosh":return[s.acosh(k("x",t,e,n))];case"Asin":return[s.asin(k("x",t,e,n))];case"Asinh":return[s.asinh(k("x",t,e,n))];case"Atan":return[s.atan(k("x",t,e,n))];case"Atan2":return[s.atan2(k("x",t,e,n),k("y",t,e,n))];case"Atanh":return[s.atanh(k("x",t,e,n))];case"Ceil":return[s.ceil(k("x",t,e,n))];case"Complex":return[s.complex(k("real",t,e,n),k("imag",t,e,n))];case"Cos":return[s.cos(k("x",t,e,n))];case"Cosh":return[s.cosh(k("x",t,e,n))];case"Elu":return[s.elu(k("x",t,e,n))];case"Erf":return[s.erf(k("x",t,e,n))];case"Exp":return[s.exp(k("x",t,e,n))];case"Expm1":return[s.expm1(k("x",t,e,n))];case"Floor":return[s.floor(k("x",t,e,n))];case"Log":return[s.log(k("x",t,e,n))];case"Log1p":return[s.log1p(k("x",t,e,n))];case"Imag":return[s.imag(k("x",t,e,n))];case"Neg":return[s.neg(k("x",t,e,n))];case"Reciprocal":return[s.reciprocal(k("x",t,e,n))];case"Real":return[s.real(k("x",t,e,n))];case"Relu":return[s.relu(k("x",t,e,n))];case"Round":return[s.round(k("x",t,e,n))];case"Selu":return[s.selu(k("x",t,e,n))];case"Sigmoid":return[s.sigmoid(k("x",t,e,n))];case"Sin":return[s.sin(k("x",t,e,n))];case"Sign":return[s.sign(k("x",t,e,n))];case"Sinh":return[s.sinh(k("x",t,e,n))];case"Softplus":return[s.softplus(k("x",t,e,n))];case"Sqrt":return[s.sqrt(k("x",t,e,n))];case"Square":return[s.square(k("x",t,e,n))];case"Tanh":return[s.tanh(k("x",t,e,n))];case"Tan":return[s.tan(k("x",t,e,n))];case"ClipByValue":return[s.clipByValue(k("x",t,e,n),k("clipValueMin",t,e,n),k("clipValueMax",t,e,n))];case"Relu6":return[s.relu6(k("x",t,e,n))];case"Rsqrt":return[s.rsqrt(Hn(t.inputNames[0],e,n))];case"LeakyRelu":return[s.leakyRelu(k("x",t,e,n),k("alpha",t,e,n))];case"Prelu":return[s.prelu(k("x",t,e,n),k("alpha",t,e,n))];case"IsNan":return[s.isNaN(Hn(t.inputNames[0],e,n))];case"IsInf":return[s.isInf(Hn(t.inputNames[0],e,n))];case"IsFinite":return[s.isFinite(Hn(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){R(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let s=0;s<t.length;s++){const r=t[s],i=e[s];R(r<0||i<0||r===i,()=>n+` Shapes ${t} and ${e} must match`)}}}function hI(t){return!(typeof t=="number"||t.some(e=>e<0))}function yd(t,e,n){let s=Dv(t,n);const r=!hI(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(i=>{s=Dv(i.shape,s)}),!hI(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Dv(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],i=e[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:i}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x9{constructor(e,n,s,r,i,a,o){this.name=e,this.dtype=n,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ae(0),Pn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Ir(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=n,Pn(n),s.written=!0,this.tensors[e]=s}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((s,r)=>this.write(s,n[r]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return li([],[0].concat(this.elementShape));const s=this.readMany(e);return Ir(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Hs(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return li([],[0].concat(this.elementShape));const n=[];for(let r=0;r<this.size();r++)n.push(r);const s=this.readMany(n);return Ir(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Jt(s,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Kr(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=s===0?0:n.size/s,a=[];Q(()=>{n=G(n,[1,s,i]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,e[l],i];a[l]=G(Be(n,c,h),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bl{get id(){return this.idTensor.id}constructor(e,n,s,r=-1){this.tensors=e,this.elementShape=n,this.elementDtype=s,e!=null&&e.forEach(i=>{if(s!==i.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${i.dtype}`);Ir(n,i.shape,"TensorList shape mismatch: "),Pn(i)}),this.idTensor=Ae(0),this.maxNumElements=r,Pn(this.idTensor)}copy(){return new Bl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,s=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ir(e,this.elementShape,"TensorList shape mismatch: ");const r=yd(this.elementShape,this.tensors,e);return Q(()=>{const i=this.tensors.map(a=>G(a,r));return Hs(i,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=yd(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Ir(r.shape,e,"TensorList shape mismatch: "),G(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ir(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Pn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new Bl([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)n.tensors[s]=this.tensors[s];return n}getItem(e,n,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ir(this.tensors[e].shape,n,"TensorList shape mismatch: ");const r=yd(this.elementShape,this.tensors,n);return G(this.tensors[e],r)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ir(this.elementShape,n.shape,"TensorList shape mismatch: "),Pn(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,s){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Ir(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=yd(this.elementShape,this.tensors,s);return e.length===0?li([],[0].concat(r)):Q(()=>{const i=e.map(a=>G(this.tensors[a],r));return Hs(i,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ir(this.elementShape,n,"TensorList shape mismatch: ");const s=yd(this.elementShape,this.tensors,n);return this.size()===0?li([],[0].concat(s)):Q(()=>{const r=this.tensors.map(i=>G(i,s));return Jt(r,0)})}}function b9(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const r=t.shape.slice(1);Ir(r,e,"TensorList shape mismatch: ");const i=Kr(t);return new Bl(i,e,s)}function w9(t,e,n,s){return new Bl([],t,e,s)}function v9(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new Bl([],n,t.dtype,s),a=Kr(t,0);return e.forEach((o,l)=>{i.setItem(o,a[l])}),i}function S9(t,e,n){let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);const i=t.shape.slice(1),a=Dv(i,n),o=s===0?0:t.size/s,l=Q(()=>{const c=[];t=G(t,[1,s,o]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:r[h-1],0],p=[1,e[h],o];c[h]=G(Be(t,f,p),a)}return t.dispose(),c}),u=new Bl([],n,t.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=k("thenBranch",t,e,n),r=k("elseBranch",t,e,n),i=k("cond",t,e,n),a=k("args",t,e,n);return(await i.data())[0]?n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",t,e,n),r=k("cond",t,e,n),i=k("args",t,e,n),a=await n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map(c=>c.id);let l=await a[0].data();a.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){const c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const h=u.map(f=>f.id);c.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const s=k("pred",t,e,n);return[ca(s)]}case"Switch":{const s=k("pred",t,e,n);let r=k("data",t,e,n);return r.kept||(r=ca(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find(r=>Hn(r,e,n)!==void 0);if(s){const r=Hn(s,e,n);return[ca(r)]}return}case"Enter":{const s=k("frameName",t,e,n),r=k("tensor",t,e,n);return n.enterFrame(s),[ca(r)]}case"Exit":{const s=k("tensor",t,e,n);return n.exitFrame(),[ca(s)]}case"NextIteration":{const s=k("tensor",t,e,n);return n.nextIteration(),[ca(s)]}case"TensorArrayV3":{const s=k("size",t,e,n),r=k("dtype",t,e,n),i=k("elementShape",t,e,n),a=k("dynamicSize",t,e,n),o=k("clearAfterRead",t,e,n),l=k("identicalElementShapes",t,e,n),u=k("name",t,e,n),c=new x9(u,r,s,i,l,a,o);return n.addTensorArray(c),[c.idTensor,Ae(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",t,e,n),r=k("index",t,e,n),i=k("tensor",t,e,n),a=n.getTensorArray(s.id);return a.write(r,i),[a.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",t,e,n),r=k("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",t,e,n),r=k("indices",t,e,n),i=k("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",t,e,n),r=k("indices",t,e,n),i=k("tensor",t,e,n),a=n.getTensorArray(s.id);return a.scatter(r,i),[a.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),i=k("dtype",t,e,n);return[r.concat(i)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",t,e,n),r=k("tensor",t,e,n),i=k("lengths",t,e,n),a=n.getTensorArray(s.id);return a.split(i,r),[a.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return[Ae(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",t,e,n),r=k("index",t,e,n),i=k("tensor",t,e,n),a=n.getTensorList(s.id);return a.setItem(r,i),[a.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",t,e,n),r=k("index",t,e,n),i=k("elementShape",t,e,n),a=k("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",t,e,n),r=k("tensor",t,e,n),i=k("elementShape",t,e,n),a=k("numElements",t,e,n),o=v9(r,s,i,a);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",t,e,n),r=k("elementDType",t,e,n);let i;t.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=k(i,t,e,n),o=t.op==="TensorListReserve"?-1:a,l=w9(s,r,a,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=k("tensorListId",t,e,n),r=k("indices",t,e,n),i=k("elementShape",t,e,n),a=k("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,a,i)]}case"TensorListStack":{const s=k("tensorListId",t,e,n),r=k("elementShape",t,e,n),i=k("elementDType",t,e,n),a=k("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,i,a)]}case"TensorListFromTensor":{const s=k("tensor",t,e,n),r=k("elementShape",t,e,n),i=k("elementDType",t,e,n),a=b9(s,r,i);return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=k("tensorListId",t,e,n),r=n.getTensorList(s.id),i=k("dtype",t,e,n),a=k("elementShape",t,e,n);return[r.concat(i,a)]}case"TensorListPushBack":{const s=k("tensorListId",t,e,n),r=k("tensor",t,e,n),i=n.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",t,e,n),r=k("elementShape",t,e,n),i=k("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=k("tensor",t,e,n),r=k("elementShape",t,e,n),i=k("lengths",t,e,n),a=S9(s,i,r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=k("tensorListId",t,e,n),r=n.getTensorList(s.id);return[Ae(r.size(),"int32")]}case"TensorListResize":{const s=k("tensorListId",t,e,n),r=k("size",t,e,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(t,e,n){const[s,r]=k("fusedOps",t,e,n),i=s==="biasadd",a=!i,o=r==="prelu",l=s==="fusedbatchnorm",u=k("numArgs",t,e,n);if(i){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=k("strides",t,e,n),h=Ig(t,e,n),d=k("dataFormat",t,e,n).toUpperCase(),f=k("dilations",t,e,n);let[p,m]=k("args",t,e,n);a&&(m=p,p=void 0);const g=k("leakyreluAlpha",t,e,n);return{stride:c,pad:h,dataFormat:d,dilations:f,biasArg:p,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const k9=(t,e,n,s=Qn)=>{switch(t.op){case"Conv1D":{const r=k("stride",t,e,n),i=k("pad",t,e,n),a=k("dataFormat",t,e,n).toUpperCase(),o=k("dilation",t,e,n);return[s.conv1d(k("x",t,e,n),k("filter",t,e,n),r,i,a,o)]}case"Conv2D":{const r=k("strides",t,e,n),i=Ig(t,e,n),a=k("dataFormat",t,e,n).toUpperCase(),o=k("dilations",t,e,n);return[s.conv2d(k("x",t,e,n),k("filter",t,e,n),[r[1],r[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=dI(t,e,n);return[s.fused.conv2d({x:k("x",t,e,n),filter:k("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=dI(t,e,n);return[s.fused.depthwiseConv2d({x:k("x",t,e,n),filter:k("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=k("outputShape",t,e,n),i=k("strides",t,e,n),a=Ig(t,e,n);return[s.conv2dTranspose(k("x",t,e,n),k("filter",t,e,n),r,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=k("strides",t,e,n),i=Ig(t,e,n),a=k("dilations",t,e,n),o=k("dataFormat",t,e,n).toUpperCase();return[s.depthwiseConv2d(k("input",t,e,n),k("filter",t,e,n),[r[1],r[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("dataFormat",t,e,n).toUpperCase(),o=k("dilations",t,e,n);return[s.conv3d(k("x",t,e,n),k("filter",t,e,n),[r[1],r[2],r[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("kernelSize",t,e,n);return[s.avgPool(k("x",t,e,n),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("kernelSize",t,e,n);return[s.maxPool(k("x",t,e,n),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("kernelSize",t,e,n),o=k("includeBatchInIndex",t,e,n),{result:l,indexes:u}=s.maxPoolWithArgmax(k("x",t,e,n),[a[1],a[2]],[r[1],r[2]],i,o);return[l,u]}case"AvgPool3D":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("kernelSize",t,e,n);return[s.avgPool3d(k("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("kernelSize",t,e,n);return[s.maxPool3d(k("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=k("strides",t,e,n),i=k("pad",t,e,n),a=k("dilations",t,e,n),o=r[1],l=r[2],u=a[1],c=a[2];return[s.dilation2d(k("x",t,e,n),k("filter",t,e,n),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9=(t,e,n,s=Qn)=>{switch(t.op){case"Fill":{const r=k("shape",t,e,n),i=k("dtype",t,e,n),a=k("value",t,e,n);return[s.fill(r,a,i)]}case"LinSpace":{const r=k("start",t,e,n),i=k("stop",t,e,n),a=k("num",t,e,n);return[s.linspace(r,i,a)]}case"Multinomial":{const r=k("logits",t,e,n),i=k("numSamples",t,e,n),a=k("seed",t,e,n);return[s.multinomial(r,i,a)]}case"OneHot":{const r=k("indices",t,e,n),i=k("depth",t,e,n),a=k("onValue",t,e,n),o=k("offValue",t,e,n),l=k("dtype",t,e,n);return[s.oneHot(r,i,a,o,l)]}case"Ones":return[s.ones(k("shape",t,e,n),k("dtype",t,e,n))];case"OnesLike":return[s.onesLike(k("x",t,e,n))];case"RandomStandardNormal":return[s.randomStandardNormal(k("shape",t,e,n),k("dtype",t,e,n),k("seed",t,e,n))];case"RandomUniform":return[s.randomUniform(k("shape",t,e,n),k("minval",t,e,n),k("maxval",t,e,n),k("dtype",t,e,n))];case"RandomUniformInt":return[s.randomUniformInt(k("shape",t,e,n),k("minval",t,e,n),k("maxval",t,e,n),k("seed",t,e,n))];case"Range":{const r=k("start",t,e,n),i=k("stop",t,e,n),a=k("step",t,e,n);return[s.range(r,i,a,k("dtype",t,e,n))]}case"TruncatedNormal":{const r=k("shape",t,e,n),i=k("mean",t,e,n),a=k("stdDev",t,e,n),o=k("seed",t,e,n);return[s.truncatedNormal(r,i,a,k("dtype",t,e,n),o)]}case"Zeros":return[s.zeros(k("shape",t,e,n),k("dtype",t,e,n))];case"ZerosLike":return[s.zerosLike(k("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1(t,e,n){const s=k("boxes",t,e,n),r=k("scores",t,e,n),i=k("maxOutputSize",t,e,n),a=k("iouThreshold",t,e,n),o=k("scoreThreshold",t,e,n),l=k("softNmsSigma",t,e,n);return{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const N9=async(t,e,n,s,r=Qn)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=A1(t,e,n),h=await r.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=A1(t,e,n),c=k("padToMaxOutputSize",t,e,n),h=await r.image.nonMaxSuppressionPaddedAsync(i,a,o,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=A1(t,e,n);return[await r.image.nonMaxSuppressionAsync(i,a,o,l,u)]}case"Where":{const i=r.cast(k("condition",t,e,n),"bool"),a=[await r.whereAsync(i)];return i.dispose(),a}case"ListDiff":return r.setdiff1dAsync(k("x",t,e,n),k("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9=(t,e,n,s=Qn)=>{switch(t.op){case"LowerBound":{const r=k("sortedSequence",t,e,n),i=k("values",t,e,n);return[s.lowerBound(r,i)]}case"TopKV2":{const r=k("x",t,e,n),i=k("k",t,e,n),a=k("sorted",t,e,n),o=s.topk(r,i,a);return[o.values,o.indices]}case"UpperBound":{const r=k("sortedSequence",t,e,n),i=k("values",t,e,n);return[s.upperBound(r,i)]}case"Unique":{const r=k("x",t,e,n),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{const r=k("x",t,e,n),i=k("axis",t,e,n),a=s.unique(r,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=(t,e,n,s=Qn)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=k("default",t,e,n);return[Hn(t.name,e,n)||r];case"Placeholder":return[Hn(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=k("x",t,e,n);return[ca(c)]}case"IdentityN":return k("x",t,e,n).map(c=>ca(c));case"Snapshot":const i=k("x",t,e,n);return[ca(i)];case"Shape":return[s.tensor1d(k("x",t,e,n).shape,"int32")];case"ShapeN":return k("x",t,e,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(k("x",t,e,n).size,"int32")];case"Rank":return[s.scalar(k("x",t,e,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=k("x",t,e,n),o=k("data",t,e,n),l=k("message",t,e,n),u=k("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E9{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=Ae(0),this.tensorMap=new Map,Pn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ae(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Q(()=>{const r=Kr(n),i=s.length,a=r.length;R(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=s[o],u=r[o];Pn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const s=await e.data();return Q(()=>{const r=[];for(let i=0;i<s.length;i++){const a=s[i],o=this.findWithDefault(a,n);r.push(o)}return Hs(r)})}findWithDefault(e,n){const s=this.tensorMap.get(e);return s??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9=async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(t.name);if(r!=null)return[r];{const i=k("keyDType",t,e,n),a=k("valueDType",t,e,n),o=new E9(i,a);return s.addHashTable(t.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=k("tableHandle",t,e,n,s),i=k("keys",t,e,n),a=k("values",t,e,n);return[await s.getHashTableById(r.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=k("tableHandle",t,e,n,s),i=k("keys",t,e,n),a=k("defaultValue",t,e,n);return[await s.getHashTableById(r.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=k("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A9=(t,e,n,s=Qn)=>{switch(t.op){case"ResizeBilinear":{const r=k("images",t,e,n),i=k("size",t,e,n),a=k("alignCorners",t,e,n),o=k("halfPixelCenters",t,e,n);return[s.image.resizeBilinear(r,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const r=k("images",t,e,n),i=k("size",t,e,n),a=k("alignCorners",t,e,n),o=k("halfPixelCenters",t,e,n);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],a,o)]}case"CropAndResize":{const r=k("image",t,e,n),i=k("boxes",t,e,n),a=k("boxInd",t,e,n),o=k("cropSize",t,e,n),l=k("method",t,e,n),u=k("extrapolationValue",t,e,n);return[s.image.cropAndResize(r,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const r=k("images",t,e,n),i=k("transforms",t,e,n),a=k("outputShape",t,e,n),o=k("fillValue",t,e,n),l=k("interpolation",t,e,n),u=k("fillMode",t,e,n);return[s.image.transform(r,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9=(t,e,n,s=Qn)=>{switch(t.op){case"Equal":return[s.equal(k("a",t,e,n),k("b",t,e,n))];case"NotEqual":return[s.notEqual(k("a",t,e,n),k("b",t,e,n))];case"Greater":return[s.greater(k("a",t,e,n),k("b",t,e,n))];case"GreaterEqual":return[s.greaterEqual(k("a",t,e,n),k("b",t,e,n))];case"Less":return[s.less(k("a",t,e,n),k("b",t,e,n))];case"LessEqual":return[s.lessEqual(k("a",t,e,n),k("b",t,e,n))];case"LogicalAnd":return[s.logicalAnd(k("a",t,e,n),k("b",t,e,n))];case"LogicalNot":return[s.logicalNot(k("a",t,e,n))];case"LogicalOr":return[s.logicalOr(k("a",t,e,n),k("b",t,e,n))];case"Select":case"SelectV2":return[s.where(k("condition",t,e,n),k("a",t,e,n),k("b",t,e,n))];case"BitwiseAnd":return[s.bitwiseAnd(k("a",t,e,n),k("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9=(t,e,n,s=Qn)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(k("a",t,e,n),k("b",t,e,n),k("transposeA",t,e,n),k("transposeB",t,e,n))];case"Einsum":return[s.einsum(k("equation",t,e,n),...k("tensors",t,e,n))];case"Transpose":return[s.transpose(k("x",t,e,n),k("perm",t,e,n))];case"_FusedMatMul":const[r,i]=k("fusedOps",t,e,n),a=r==="biasadd",o=i==="prelu",l=k("numArgs",t,e,n),u=k("leakyreluAlpha",t,e,n);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=k("args",t,e,n);return[s.fused.matMul({a:k("a",t,e,n),b:k("b",t,e,n),transposeA:k("transposeA",t,e,n),transposeB:k("transposeB",t,e,n),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(k("a",t,e,n),k("numLower",t,e,n),k("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9=(t,e,n,s=Qn)=>{switch(t.op){case"EuclideanNorm":return[s.euclideanNorm(k("x",t,e,n),k("axis",t,e,n),k("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(k("x",t,e,n),k("mean",t,e,n),k("variance",t,e,n),k("offset",t,e,n),k("scale",t,e,n),k("epsilon",t,e,n))];case"FusedBatchNormV3":return[s.batchNorm(k("x",t,e,n),k("mean",t,e,n),k("variance",t,e,n),k("offset",t,e,n),k("scale",t,e,n),k("epsilon",t,e,n))];case"LRN":return[s.localResponseNormalization(k("x",t,e,n),k("radius",t,e,n),k("bias",t,e,n),k("alpha",t,e,n),k("beta",t,e,n))];case"Softmax":return[s.softmax(k("x",t,e,n))];case"LogSoftmax":return[s.logSoftmax(k("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9=(t,e,n,s=Qn)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather(k("paramsNestedSplits",t,e,n),k("paramsDenseValues",t,e,n),k("indices",t,e,n),k("outputRaggedRank",t,e,n));return r.concat(i)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange(k("starts",t,e,n),k("limits",t,e,n),k("splits",t,e,n));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(k("shape",t,e,n),k("values",t,e,n),k("defaultValue",t,e,n),k("rowPartitionTensors",t,e,n),k("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z9=(t,e,n,s=Qn)=>{switch(t.op){case"Max":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.max(k("x",t,e,n),o,l)]}case"Mean":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.mean(k("x",t,e,n),o,l)]}case"Min":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.min(k("x",t,e,n),o,l)]}case"Sum":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.sum(k("x",t,e,n),o,l)]}case"All":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.all(k("x",t,e,n),o,l)]}case"Any":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.any(k("x",t,e,n),o,l)]}case"ArgMax":{const o=k("axis",t,e,n);return[s.argMax(k("x",t,e,n),o)]}case"ArgMin":{const o=k("axis",t,e,n);return[s.argMin(k("x",t,e,n),o)]}case"Prod":{const o=k("axis",t,e,n),l=k("keepDims",t,e,n);return[s.prod(k("x",t,e,n),o,l)]}case"Cumprod":{const o=k("axis",t,e,n),l=k("exclusive",t,e,n),u=k("reverse",t,e,n);return[s.cumprod(k("x",t,e,n),o,l,u)]}case"Cumsum":{const o=k("axis",t,e,n),l=k("exclusive",t,e,n),u=k("reverse",t,e,n);return[s.cumsum(k("x",t,e,n),o,l,u)]}case"Bincount":const r=k("x",t,e,n),i=k("weights",t,e,n),a=k("size",t,e,n);return[s.bincount(r,i,a)];case"DenseBincount":{const o=k("x",t,e,n),l=k("weights",t,e,n),u=k("size",t,e,n),c=k("binaryOutput",t,e,n);return[s.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9=(t,e,n,s=Qn)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=k("n",t,e,n),i=k("axis",t,e,n);let a=k("tensors",t,e,n);return a=a.slice(0,r),[s.concat(a,i)]}case"Gather":{const r=k("x",t,e,n),i=k("indices",t,e,n);return[s.gather(r,s.cast(i,"int32"),0)]}case"GatherV2":{const r=k("axis",t,e,n),i=k("batchDims",t,e,n),a=k("x",t,e,n),o=k("indices",t,e,n);return[s.gather(a,s.cast(o,"int32"),r,i)]}case"Reverse":{const r=k("dims",t,e,n),i=[];for(let o=0;o<r.length;o++)r[o]&&i.push(o);const a=k("x",t,e,n);return[s.reverse(a,i)]}case"ReverseV2":{const r=k("axis",t,e,n),i=k("x",t,e,n);return[s.reverse(i,r)]}case"Slice":{const r=k("begin",t,e,n),i=k("size",t,e,n);return[s.slice(k("x",t,e,n),r,i)]}case"StridedSlice":{const r=k("begin",t,e,n),i=k("end",t,e,n),a=k("strides",t,e,n),o=k("beginMask",t,e,n),l=k("endMask",t,e,n),u=k("ellipsisMask",t,e,n),c=k("newAxisMask",t,e,n),h=k("shrinkAxisMask",t,e,n),d=k("x",t,e,n);return[s.stridedSlice(d,r,i,a,o,l,u,c,h)]}case"Pack":return Q(()=>{const r=k("axis",t,e,n),i=k("tensors",t,e,n),a=i[0].shape,o=s.squeeze(i[0]).shape,l=i.map(u=>{const c=Ke(u.shape,a);if(!c&&!Ke(s.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,a)});return[s.stack(l,r)]});case"Unpack":{const r=k("axis",t,e,n),i=k("tensor",t,e,n);return s.unstack(i,r)}case"Tile":{const r=k("reps",t,e,n);return[s.tile(k("x",t,e,n),r)]}case"Split":case"SplitV":{const r=k("axis",t,e,n),i=k("numOrSizeSplits",t,e,n),a=k("x",t,e,n);return s.split(a,i,r)}case"ScatterNd":{const r=k("indices",t,e,n),i=k("values",t,e,n),a=k("shape",t,e,n);return[s.scatterND(r,i,a)]}case"GatherNd":{const r=k("x",t,e,n),i=k("indices",t,e,n);return[s.gatherND(r,i)]}case"SparseToDense":{const r=k("sparseIndices",t,e,n),i=k("outputShape",t,e,n),a=k("sparseValues",t,e,n),o=k("defaultValue",t,e,n);return[s.sparseToDense(r,a,i,a.dtype===o.dtype?o:s.cast(o,a.dtype))]}case"TensorScatterUpdate":{const r=k("indices",t,e,n),i=k("values",t,e,n),a=k("tensor",t,e,n);return[s.tensorScatterUpdate(a,r,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9=(t,e,n,s=Qn)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(k("indices",t,e,n),k("values",t,e,n),k("denseShape",t,e,n),k("defaultValue",t,e,n));return[r,i,a,o]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=s.sparse.sparseReshape(k("inputIndices",t,e,n),k("inputShape",t,e,n),k("newShape",t,e,n));return[r,i]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(k("data",t,e,n),k("indices",t,e,n),k("segmentIds",t,e,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(k("data",t,e,n),k("indices",t,e,n),k("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9=(t,e,n,s=Qn)=>{switch(t.op){case"FFT":return[s.fft(k("x",t,e,n))];case"IFFT":return[s.ifft(k("x",t,e,n))];case"RFFT":return[s.rfft(k("x",t,e,n))];case"IRFFT":return[s.irfft(k("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=(t,e,n,s=Qn)=>{switch(t.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(k("input",t,e,n),k("pattern",t,e,n),k("rewrite",t,e,n),k("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=s.string.stringNGrams(k("data",t,e,n),k("dataSplits",t,e,n),k("separator",t,e,n),k("nGramWidths",t,e,n),k("leftPad",t,e,n),k("rightPad",t,e,n),k("padWidth",t,e,n),k("preserveShortSequences",t,e,n));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:a}=s.string.stringSplit(k("input",t,e,n),k("delimiter",t,e,n),k("skipEmpty",t,e,n));return[r,i,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(k("input",t,e,n),k("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=(t,e,n,s=Qn)=>{switch(t.op){case"Cast":return[s.cast(k("x",t,e,n),k("dtype",t,e,n))];case"ExpandDims":{const r=k("axis",t,e,n);return[s.expandDims(k("x",t,e,n),r)]}case"Squeeze":{const r=k("axis",t,e,n);return[s.squeeze(k("x",t,e,n),r)]}case"Reshape":return[s.reshape(k("x",t,e,n),k("shape",t,e,n))];case"EnsureShape":return[s.ensureShape(k("x",t,e,n),k("shape",t,e,n))];case"MirrorPad":return[s.mirrorPad(k("x",t,e,n),k("padding",t,e,n),k("mode",t,e,n))];case"PadV2":case"Pad":return[s.pad(k("x",t,e,n),k("padding",t,e,n),k("constantValue",t,e,n))];case"SpaceToBatchND":{const r=k("blockShape",t,e,n),i=k("paddings",t,e,n);return[s.spaceToBatchND(k("x",t,e,n),r,i)]}case"BatchToSpaceND":{const r=k("blockShape",t,e,n),i=k("crops",t,e,n);return[s.batchToSpaceND(k("x",t,e,n),r,i)]}case"DepthToSpace":{const r=k("blockSize",t,e,n),i=k("dataFormat",t,e,n).toUpperCase();return[s.depthToSpace(k("x",t,e,n),r,i)]}case"BroadcastTo":return[s.broadcastTo(k("x",t,e,n),k("shape",t,e,n))];case"BroadcastArgs":return[s.broadcastArgs(k("s0",t,e,n),k("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(t,e,n,s,r=Q){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return r(()=>g9(a,o,l));case"basic_math":return r(()=>y9(a,o,l));case"control":return C9(a,o,l);case"convolution":return r(()=>k9(a,o,l));case"creation":return r(()=>$9(a,o,l));case"dynamic":return N9(a,o,l);case"evaluation":return r(()=>I9(a,o,l));case"image":return r(()=>A9(a,o,l));case"graph":return r(()=>T9(a,o,l));case"logical":return r(()=>D9(a,o,l));case"matrices":return r(()=>_9(a,o,l));case"normalization":return r(()=>O9(a,o,l));case"ragged":return r(()=>F9(a,o,l));case"reduction":return r(()=>z9(a,o,l));case"slice_join":return r(()=>L9(a,o,l));case"sparse":return r(()=>P9(a,o,l));case"spectral":return r(()=>M9(a,o,l));case"string":return r(()=>B9(a,o,l));case"transformation":return r(()=>V9(a,o,l));case"hash_table":return R9(a,o,l,s);case"custom":const u=FF(a.op);if(u&&u.customExecutor)return u.customExecutor(new m9(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Rl(i)?i.then(a=>[].concat(a)):[].concat(i)}class pI{constructor(e={},n={},s={},r={},i){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const s=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(t,e,n,s){const r=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(t).map(d=>Ms(d)[0]));s=s||[];const c=new Set(s.map(d=>Ms(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((nl(d)||K9(d)||Y9(d))&&a==null&&(a=d,o=a.children.map(f=>f.name).filter(f=>r.has(f))),r.add(d.name),n[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),h.push(f))})}}return{inputs:t,outputs:e,usedNodes:r,missingInputs:i,dynamicNode:a,syncInputs:o}}function U9(t,e){const{usedNodes:n,inputs:s}=e,r=Object.keys(s).map(g=>Ms(g)[0]).map(g=>t.nodes[g]),i=t.initNodes||[],a=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}const l=o([...r,...t.weights,...i]).filter(a),u=o([...l,...Object.values(t.nodes)]).filter(a),c=new Map(u.map(g=>[g.name,g])),h={};for(const g of u){h[g.name]=h[g.name]||0;for(const y of g.children)a(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}const d=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),f=[...d];for(;d.length>0;){const g=d.pop(),y=c.get(g);for(const x of y.children.filter(a))--h[x.name]===0&&(f.push(x.name),d.push(x.name))}const p=f.map(g=>c.get(g)),m=W9(p,l);return G9(m,l),m}function W9(t,e){const n=new Map(t.map(a=>[a.name,a])),s=e.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),o=n.get(a);for(const l of o.children)!n.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return t.filter(a=>r.has(a.name))}class eg extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function G9(t,e){const n=new Map(t.map((o,l)=>[o.name,l])),s=new Set(e.map(o=>o.name)),r=o=>s.has(typeof o=="string"?o:o.name),i=new Set(t.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of t){for(const l of o.children.filter(a)){if(!n.has(l.name))throw new eg(`Child ${l.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(l.name))throw new eg(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!r(o))for(const l of o.inputs){if(!n.has(l.name))throw new eg(`Input ${l.name} of node ${o.name} is unreachable.`);if(n.get(l.name)>n.get(o.name))throw new eg(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function H9(t){const e=new Map(t.map((o,l)=>[o.name,l])),n=Number.MAX_SAFE_INTEGER,s=t.map((o,l)=>nl(o)?n:l),r=o=>{const l=s[e.get(o.name)];return l??-1},i=t.map((o,l)=>o.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),a=new Map;for(let o=0;o<t.length;++o){const l=i[o];if(l===n)continue;const u=t[o],c=t[l];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const j9=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),q9=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),X9=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function nl(t){return j9.has(t.op)}function K9(t){return q9.has(t.op)}function Y9(t){return X9.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ty{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Ty(e.functions[s],this)})}getCompilationKey(e,n){const s=e.map(i=>i.name).sort(),r=n.map(i=>i.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,n){const s=mI(e,n,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:a}=s;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const u=n.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const o=U9(this.graph,s),l=H9(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return Pn(n),n}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,s])=>[n,this.cloneTensorList(s)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const r=s.map(d=>this.graph.nodes[Ms(d)[0]]),i=n.map(d=>Ms(d)[0]),a=new Set(i);let o=i.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(r,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return Q(()=>{const d=new pI(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[x,w]=Ms(y,d),v=[];v[w]=e[y],f[x]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(v))});const p=this.getFrozenTensorIds(f),{orderedNodes:m,nodeLiveUntilMap:g}=u;for(const y of m){if(f[y.name])continue;const x=fI(y,f,d,this._resourceManager);if(Rl(x))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);f[y.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,f,d,p,a,g.get(y.name))}return this.parent==null&&d.dispose(p),n.map(y=>Hn(y,f,d))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(n)}checkTensorForDisposal(e,n,s,r,i,a,o){if(!(nl(n)||a.has(e))){for(const l of s[e])l!=null&&(o[l.id]=(o[l.id]||0)+n.children.length);for(const l of n.inputs){if(nl(l))continue;const u=lI(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||i.has(c.id))continue;const h=o[c.id];h===1?(c.dispose(),delete o[c.id]):h!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,s,r,i,a){function o(l){return nl(l)||i.has(l.name)}if(!(nl(e)||a==null))for(const l of a){if(o(l))continue;const u=lI(l.name,n,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,s=!1,r={},i={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new pI(this.weightMap,r,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,n,s),l=n.map(d=>Hn(d,o,a)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(e,n,s){const r=e.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(r,this.outputNodes,!0,n,s)}async executeWithControlFlow(e,n,s,r){const i=Object.keys(e),a=i.map(v=>this.graph.nodes[Ms(v)[0]]),o=s.map(v=>Ms(v)[0]),l=new Set(o);let u=o.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:f}=mI(e,u,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[S,N]=Ms(v),I=[];I[N]=e[v],m[S]=I});const g={},y=this.getFrozenTensorIds(m),x={};for(;p.length>0;){const v=this.processStack(a,p,n,m,x,y,l,g,c);await Promise.all(v)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=u.filter(v=>!nl(v)&&!Hn(v.name,m,n)).map(v=>v.name);if(w.length>0){let v="";throw d!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${i}]. Consider providing the following inputs: [${h}]. ${v}`)}return m}processStack(e,n,s,r,i,a,o,l,u){const c=[];for(;n.length>0;){const h=n.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&k("isConstant",h.node,r,s)&&([d]=ua(h.node.name,s)),r[h.node.name]==null){const f=fI(h.node,r,s,this._resourceManager);d||([d]=ua(h.node.name,s));const p=s.currentContext;Rl(f)?c.push(f.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=p,this.checkTensorForDisposal(d,h.node,r,s,a,o,l),this.processChildNodes(h.node,n,s,r,i,u),m))):(r[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,r,s,a,o,l),this.processChildNodes(h.node,n,s,r,i,u))}else this.processChildNodes(h.node,n,s,r,i,u)}return c}processChildNodes(e,n,s,r,i,a){e.children.forEach(o=>{const[l]=ua(o.name,s);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!Hn(u,r,s))&&(i[l]=!0,n.push({contexts:s.currentContext,node:o})):o.inputNames.every(u=>!!Hn(u,r,s))&&(i[l]=!0,n.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const s=e[n],[r]=Ms(n),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===s.shape.length&&s.shape.every((l,u)=>a[u]===-1||a[u]===l);R(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&R(s.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var n,s;const r={};for(const i in e){const a=(s=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||s===void 0?void 0:s[i];a!=null?r[a.name]=e[i]:r[i]=e[i]}return r}checkInputs(e){const n=Object.keys(e).filter(s=>{const[r]=Ms(s);return this.graph.nodes[r]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var s,r;const i=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[n];return i!=null?i.name:n},{})}checkOutputs(e){e.forEach(n=>{const[s]=Ms(n);if(!this.graph.nodes[s])throw new Error(`The output '${n}' is not found in the graph`)})}}class Q9{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9="?tfjs-format=file",J9="model.json";class eQ{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},s=PD){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=s,n==null&&(this.loadOptions={}),this.resourceManager=new Q9}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Rl(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await l3(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Ty(uI.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=uI.Instance.transformGraph(e.modelInitializer);this.initializer=new Ty(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof vt?[e]:e,s={};return n.forEach((r,i)=>s[this.structuredOutputKeys[i]]=r),s}return e}predict(e,n){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,n){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var n;if(!(e instanceof vt)&&!Array.isArray(e)){const i=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((i,a)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return c!=null?i[a]=this.resourceIdToCapturedInput[c]:i[a]=e[r++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,s=Object.keys(n);for(let r=0;r<s.length;r++){const i=s[r],a=n[i];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=this.executor.execute(e,n);return s.length>1?s:s[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const s=await this.executor.executeAsync(e,n);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,s)=>(n[s]=[e[s]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ze(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function vc(t,e={},n=PD){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=tQ(t));const s=new eQ(t,e,n);return await s.load(),s}function tQ(t){return t.endsWith("/")||(t=t+"/"),`${t}${J9}${Z9}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var gI;(function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"})(gI||(gI={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Te(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&R(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ=XS;class o0 extends ix{nextDataId(){return o0.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new G2(this,cs())}write(e,n,s){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&rr(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Lc(s[0])){const i=s.map(a=>va(a));r=this.write(i,e,n)}else r=this.write(s,e,n);return{dataId:r,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,s,r,i){this.data.set(e,{values:n,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:s}=this.data.get(e);if(n==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return fi(r,i)}return kg(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>ci(r));return Ge(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,n)}makeOutput(e,n,s){return cs().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=vs();return e(),{kernelMs:vs()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Te([e],"where");const n=this.readSync(e.dataId);return nQ(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o0.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const sQ=t=>{const{x:e}=t.inputs,n=t.backend;Te(e,"abs");let s=new Float32Array(Y(e.shape));const r=n.data.get(e.dataId).values;return s=PF(r),n.makeOutput(s,e.shape,e.dtype)},rQ={kernelName:qf,backendName:"cpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(t){return(e,n,s,r,i)=>{const a=Pe(e,n),o=a.length,l=Re(a),u=Y(a),c=Rn(i,u),h=e.length,d=n.length,f=Re(e),p=Re(n),m=So(e,a),g=So(n,a);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=t(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const x=Pc(y,o,l),w=x.slice(-h);m.forEach(I=>w[I]=0);const v=Vi(w,h,f),S=x.slice(-d);g.forEach(I=>S[I]=0);const N=Vi(S,d,p);c[y]=t(s[v],r[N])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const iQ={kernelName:fx,backendName:"cpu",kernelFunc:Bs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(t,e,n="float32"){if(n==="complex64"){const r=Ey(t,e,"float32"),i=Ey(t,e,"float32");return Bs({inputs:{real:r,imag:i},backend:t})}const s=Kn(Y(e),n);return t.makeTensorInfo(e,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xi(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const aQ={kernelName:ih,backendName:"cpu",kernelFunc:Xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vl(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const oQ={kernelName:Vx,backendName:"cpu",kernelFunc:Vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(t,e,n,s){if(s==="int32"){const r=Int32Array.from(t);return[e,"int32",r]}if(s==="bool"){const r=Jl([0],n),[i,a]=pn((o,l)=>o!==l?1:0)(e,[],t,r,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function To(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Xi({inputs:{x:r},backend:n});const c=Ey(n,r.shape,r.dtype),h=To({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=Bs({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=Vl({inputs:{input:r},backend:n}),h=To({inputs:{x:c},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(c),h}if(!q2(r.dtype,i)){const c=Xi({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:i}}const a=n.data.get(r.dataId).values,[o,l,u]=MF(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}const lQ={kernelName:jc,backendName:"cpu",kernelFunc:To};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(t,e,n,s){return n==null?({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;Te([a,o],t);const u=l.data.get(a.dataId).values,c=l.data.get(o.dataId).values,h=a.dtype==="string"?pi(u):u,d=a.dtype==="string"?pi(c):c,f=s||a.dtype,[p,m]=e(a.shape,o.shape,h,d,f);return l.makeTensorInfo(m,f,p)}:({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;if(a.dtype==="complex64"||o.dtype==="complex64"){const u=To({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,m=To({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,w=l.data.get(y.dataId).values,v=l.data.get(x.dataId).values,[S,N,I]=n(a.shape,o.shape,f,p,w,v),T=l.makeTensorInfo(I,"float32",S),A=l.makeTensorInfo(I,"float32",N),D=Bs({inputs:{real:T,imag:A},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(T),l.disposeIntermediateTensorInfo(A),D}else{const u=l.data.get(a.dataId).values,c=l.data.get(o.dataId).values,h=s||a.dtype,[d,f]=e(a.shape,o.shape,u,c,h);return l.makeTensorInfo(f,h,d)}}}function AC(t){return(e,n,s,r,i,a)=>{const o=Pe(e,n),l=Y(o),u=o.length,c=Re(o),h=Rn("float32",l),d=Rn("float32",l),f=So(e,o),p=So(n,o),m=fi(s,r),g=fi(i,a),y=e.length,x=Re(e),w=n.length,v=Re(n);if(f.length+p.length===0)for(let S=0;S<h.length;S++){const N=S%m.length,I=S%g.length,T=t(m[N*2],m[N*2+1],g[I*2],g[I*2+1]);h[S]=T.real,d[S]=T.imag}else for(let S=0;S<h.length;S++){const N=Pc(S,u,c),I=N.slice(-y);f.forEach(U=>I[U]=0);const T=Vi(I,y,x),A=N.slice(-w);p.forEach(U=>A[U]=0);const D=Vi(A,w,v),O=t(m[T*2],m[T*2+1],g[D*2],g[D*2+1]);h[S]=O.real,d[S]=O.imag}return[h,d,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=pn((t,e)=>t+e),uQ=AC((t,e,n,s)=>({real:t+n,imag:e+s})),Sc=_n(Ql,BF,uQ),cQ={kernelName:Ql,backendName:"cpu",kernelFunc:Sc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(t,e,n,s,r){const i=Y(s),a=Kn(r,n);for(let o=0;o<t.length;o++){const l=t[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i>0?a[l]+=e[o]:a[l]+=1)}return a}function VF(t,e,n,s=!1){const r=t.shape[0],i=t.shape[1],a=Ge([r,n],e.dtype);for(let o=0;o<r;o++)for(let l=0;l<i;l++){const u=t.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?a.set(1,o,u):e.size>0?a.set(a.get(o,u)+e.get(o,l),o,u):a.set(a.get(o,u)+1,o,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF=pn((t,e)=>t&e),hQ=_n(hx,UF),dQ={kernelName:hx,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(t){return(e,n,s)=>{const r=rn(n,e.length);for(let i=0;i<e.length;++i)r[i]=t(e[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(t,e,n){const s=na(e);return Mo(t,s,n)}function Mo(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;Te(a,t);const o=i,l=o.data.get(a.dataId).values;let u;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=pi(l)}else u=l;const c=n||a.dtype,h=e(u,c,r);return o.makeTensorInfo(a.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF=na(t=>Math.ceil(t)),fQ=Mo(qc,WF),pQ={kernelName:qc,backendName:"cpu",kernelFunc:fQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(t,e,n,s){const r=rn(n,Y(e));if(s&&n!=="string"){let i=0;t.forEach(a=>{const o=Y(a.shape);r.set(a.vals,i),i+=o})}else{let i=0;t.forEach(a=>{const o=n==="string"?pi(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const c=u*e[1]+i;for(let h=0;h<a.shape[1];++h)r[c+h]=o[l++]}i+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF=pn((t,e)=>t===e?1:0),jF=_n(up,HF,null,"bool"),mQ={kernelName:up,backendName:"cpu",kernelFunc:jF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF=na(t=>Math.exp(t)),XF=Mo(eh,qF,"float32"),gQ={kernelName:eh,backendName:"cpu",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KF=na(t=>Math.expm1(t)),yQ=Mo(th,KF),xQ={kernelName:th,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YF=na(t=>Math.floor(t)),bQ=Mo(nh,YF),wQ={kernelName:nh,backendName:"cpu",kernelFunc:bQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF=pn((t,e)=>Math.floor(t/e)),vQ=_n(sh,QF,null,"int32"),SQ={kernelName:sh,backendName:"cpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(t,e,n,s,r,i,a,o,l){const u=Ge([s,i],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let f=0;f<r;f++){const p=t[c*r+f];d+=p*a[f],h.push(p)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let f=0;f<i;f++)u.values[c*i+f]=e.get(...e.indexToLoc(d*i+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(t,e,n){const s=Ge(n,t.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),o=a[0],l=a[2],u=e.locToIndex([o,l]);a[2]=e.values[u];const c=t.locToIndex(a);0<=c&&c<t.values.length&&(s.values[r]=t.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez=pn((t,e)=>t>e?1:0),CQ=_n(fp,ez,null,"bool"),kQ={kernelName:fp,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=pn((t,e)=>t>=e?1:0),$Q=_n(rh,tz,null,"bool"),NQ={kernelName:rh,backendName:"cpu",kernelFunc:$Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz=pn((t,e)=>t<e?1:0),IQ=_n(mp,nz,null,"bool"),TQ={kernelName:mp,backendName:"cpu",kernelFunc:IQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz=pn((t,e)=>t<=e?1:0),EQ=_n(gp,sz,null,"bool"),RQ={kernelName:gp,backendName:"cpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(t,e,n){const s=(e-t)/(n-1),r=Kn(n,"float32");r[0]=t;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=na(t=>Math.log(t)),AQ=Mo(uh,iz),DQ={kernelName:uh,backendName:"cpu",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(t,e,n,s){const r=Rn(s,Y(n));for(let i=0;i<r.length;++i){const a=i*e;let o=t[a];for(let l=0;l<e;++l){const u=t[a+l];(Number.isNaN(u)||u>o)&&(o=u)}r[i]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=pn((t,e)=>Math.max(t,e)),_Q=_n(hh,oz),OQ={kernelName:hh,backendName:"cpu",kernelFunc:_Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz=pn((t,e)=>Math.min(t,e)),FQ=_n(dh,lz),zQ={kernelName:dh,backendName:"cpu",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=pn((t,e)=>t*e),LQ=AC((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n})),l0=_n(ph,_C,LQ),PQ={kernelName:ph,backendName:"cpu",kernelFunc:l0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(t,e,n){const s=Do(-1,n);return _C([],e,s,t,n)}function MQ(t){const{inputs:e,backend:n}=t,{x:s}=e;Te(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=uz(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}const BQ={kernelName:Ip,backendName:"cpu",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cz=pn((t,e)=>t!==e?1:0),VQ=_n(Tp,cz,null,"bool"),UQ={kernelName:Tp,backendName:"cpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(t,e,n,s,r){const i=e.length,a=Y(e),o=Re(e),l=Re(r),u=Rn(n,Y(r));for(let c=0;c<a;++c){const h=Pc(c,i,o),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[s[p]];const f=Vi(d,i,l);u[f]=t[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:i}=n;Te(r,"transpose");const a=r.shape.length,o=new Array(a);for(let h=0;h<o.length;h++)o[h]=r.shape[i[h]];const l=s.data.get(r.dataId).values,u=OC(l,r.shape,r.dtype,i,o);return{dataId:s.write(u,o,r.dtype),shape:o,dtype:r.dtype}}const WQ={kernelName:xl,backendName:"cpu",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(t,e,n,s){const[r,i]=dn(t,s),a=Vn(e,"int32"),o=Kn(Y(r),a),l=Y(i);for(let u=0;u<o.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=n[c+d];o[u]=h}return{outVals:o,outShape:r,outDtype:a}}function GQ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Te(r,"prod");const o=r.shape.length,l=qe(i,r.shape),u=It(l,o);let c=l,h=r;const d=[];u!=null&&(h=As({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Pt(c.length,o));const f=n.data.get(h.dataId).values,{outVals:p,outShape:m,outDtype:g}=hz(h.shape,h.dtype,f,c);let y=m;return a&&(y=on(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,p)}const HQ={kernelName:Op,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(t,e,n){t.forEach((s,r)=>{if(s<0||s>=n){const i=Pc(r,e.length,Re(e)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${n})`)}})}function qQ(t,e){for(let n=0;n<t.length;++n){const s=t[n],r=n===t.length-1?e:t[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function XQ(t,e,n,s){const r=[];let i=0;const a=e.length-1+n.length,o=new Array(a).fill(null).map(()=>[0]);qQ(n,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)o[u].push(h*c)}for(let u=0;u<t.length;++u){let c=t[u],h=t[u]+1;for(let d=0;d<n.length;++d){const f=n[d],p=d+e.length-1;if(p>=0){const m=o[p],g=m[m.length-1]-f[c];for(let y=c;y<h;++y)o[p].push(f[y+1]+g)}c=f[c],h=f[h]}h!==c&&(r.push([c,h]),i+=h-c)}return{outSplits:o,valueSlices:r,numValues:i}}function KQ(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,r=rn("int32",s);e.push(r),t[n].forEach((i,a)=>r[a]=i)}return e}function yI(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let s=e;s<t.length;s++)n[e-1]*=t[s];return n}function YQ(t,e,n,s,r,i){const a=yI(e,2)[1],o=yI(i,2)[1];let l=0;for(const u of n)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*o+h]=t[c*a+h];++l}}function QQ(t,e,n,s,r){const i=e.slice();i[0]=r;const a=rn(n,Y(i)),o=t.length,l=o===0?0:o/e[0];return YQ(t,e,s,l,a,i),[a,i]}function dz(t,e,n,s,r,i,a,o){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(jQ(i,a,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=XQ(i,a,t,u),f=KQ(c),p=QQ(n,s,r,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=2147483647;function fz(t,e,n,s,r,i,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=r.length===0,u=a.length===0,c=[];o||c.push(e[0]),l||c.push(r[0]),u||c.push(a[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=rn("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const y=o?t[0]:t[g],x=l?s[0]:s[g],w=u?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let v;if(w>0&&x<y||w<0&&x>y)v=0;else if(v=Math.ceil(Math.abs((x-y)/w)),v>xI)throw new Error(`Requires ((limit - start) / delta) <= ${xI}`);d[g+1]=d[g]+v}const f=d[h],p=rn(n,f);let m=0;for(let g=0;g<h;++g){const y=d[g+1]-d[g];let x=o?t[0]:t[g];const w=u?i[0]:i[g];for(let v=0;v<y;++v)p[m++]=x,x+=w}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var kr=ai;class Ry{constructor(e,n,s,r,i,a,o,l,u,c){this.shape=e,this.shapeShape=n,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=YD(c),this.raggedRank=QD(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===kr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===kr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case kr.VALUE_ROWIDS:return Ry.getMaxWidthValueRowID(n);case kr.ROW_SPLITS:return Ry.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${kr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let s=0;for(let r=0;r<n-1;++r){const i=e[r+1]-e[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let s=0,r=e[0],i=0;for(let a=1;a<n;++a){const o=e[a];o!==r&&(r=o,i=Math.max(a-s,i),s=a)}return Math.max(n-s,i)}tensorShapeFromTensor(e,n,s=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return wI(e,s)}calculateOutputSize(e){const n=this.valuesShape,s=this.defaultValueShape;ZD(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=KD(this.raggedRank,r,n);a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,n,s){const r=Math.min(e,s),i=[];let a=0;for(let o=0;o<r;++o,a+=n)i.push(a);for(let o=r;o<e;++o)i.push(-1);return R(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,n,s,r){const i=e.length,a=[];for(let o=0;o<i-1;++o){const l=e[o+1]-e[o];let u=Math.min(r,l),c=n[o];c===-1&&(u=0);for(let h=0;h<u;++h)a.push(c),c+=s;for(let h=0;h<l-u;++h)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,n,s,r){const i=e.length,a=[];if(i===0)return[];let o=0,l=e[0];if(l>=n.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${n.length}`);let u=n[l];a.push(u);for(let c=1;c<i;++c){const h=e[c];if(h===l)u>=0&&(++o,o<r?u+=s:u=-1);else{if(o=0,l=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);u=n[h]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,n,s,r){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case kr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,n,s,r);case kr.ROW_SPLITS:if(i.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(i,n,s,r);default:throw new Error(`Unsupported partition type: ${kr[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case kr.FIRST_DIM_SIZE:return e[0];case kr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case kr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${kr[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const i=wI(s,!1),a=rn(this.valuesDType,Y(i));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(n,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,a,i)}return[i,a]}setOutput(e,n,s,r){if(s.length===0)return;const i=this.values,a=s;let o=r.slice();o=o.slice(e+1);const l=Y(o),u=n.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const p=this.defaultValueShape;Q(()=>{const m=G(c,p);c=sc(m,o).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=u;++p){let m=p<u?n[p]:-1;if(m===f){++f;continue}if(d<f){const g=i.subarray(h*l),y=a.subarray(d*l),x=(f-d)*l;bI(y,g,x)}if(p>=u){const g=s.length;m=Math.floor(g/l)}if(m>f)if(this.defaultValue.length===1)a.subarray(f*l,m*l).fill(this.defaultValue[0]),f=m;else for(;m>f;){const g=a.slice(f*l);bI(g,c,l),++f}m<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function bI(t,e,n){for(let s=0;s<n;s++)t[s]=e[s]}function wI(t,e){const n=[];for(let s of t){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function pz(t,e,n,s,r,i,a,o,l,u){return new Ry(t,e,n,s,r,i,a,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(t,e,n,s){const r=t===e,i=t<e&&n<0,a=e<t&&n>1;if(r||i||a)return Kn(0,s);const o=Math.abs(Math.ceil((e-t)/n)),l=Kn(o,s);e<t&&n===1&&(n=-1),l[0]=t;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz=na(t=>1/Math.sqrt(t)),ZQ=Mo(wh,gz),JQ={kernelName:wh,backendName:"cpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ul(t,e,n,s,r,i,a,o,l,u){const c=[s/r,r],h=t.values,d=e.values;if(s===0)return Ge(n,e.dtype);const f=l instanceof In?l:Ge(c,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<i;p++){const m=[];let g=0;for(let y=0;y<a;y++){const x=h[p*a+y];m.push(x),g+=x*o[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)u?f.values[g*r+y]+=d[p*r+y]:f.values[g*r+y]=e.rank===0?d[0]:d[p*r+y]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eZ=na(t=>1/(1+Math.exp(-t))),yz=kt($h,t=>1/(1+Math.exp(-t))),tZ={kernelName:$h,backendName:"cpu",kernelFunc:yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(t,e,n,s,r){const i=sC(s,e,n),a=Y(n),o=Re(s);if(i){const h=rC(e,o);return r==="string"?t.slice(h,h+a):t.subarray(h,h+a)}const l=r==="string"?pi(t):t,u=Ge(s,r,l),c=Ge(n,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),f=d.map((p,m)=>p+e[m]);c.set(u.get(...f),...d)}return r==="string"?y_(c.values):c.values}function Ul(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s;Te(r,"slice");const[o,l]=tm(r,i,a);Rb(r,o,l);const u=n.data.get(r.dataId).values,c=xz(u,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const nZ={kernelName:Bp,backendName:"cpu",kernelFunc:Ul};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(t,e,n,s,r,i,a){const o=e[0],l=i[0],u=new Array(l),c=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(i_(o));const g=rn(n,0),y=rn(r,0);return[g,[0,h],y,u,c]}let d=!0,f=0;const p=new Array(l).fill(0);for(let g=0;g<o;++g){const y=t[g*h];if(y<0)throw new Error(a_(g,y));if(y>=l)throw new Error(o_(g,y,l));++p[y],d=d&&y>=f,f=y}let m=!0;for(let g=0;g<l;++g){const y=p[g]===0;u[g]=y,m=m&&!y,p[g]=Math.max(p[g],1),g>0&&(p[g]+=p[g-1])}if(m&&d){const g=t,y=s;for(let x=0;x<o;++x)c[x]=x;return[g,[o,h],y,u,c]}else{const g=p[l-1],y=rn(n,g*h),x=rn(r,g),w=new Array(l).fill(0);for(let v=0;v<o;++v){const S=t[v*h],N=w[S],I=(S===0?0:p[S-1])+N;w[S]++;for(let T=0;T<h;++T)y[I*h+T]=t[v*h+T];x[I]=s[v],c[v]=I}for(let v=0;v<l;++v)if(w[v]===0){const N=v===0?0:p[v-1];y[N*h+0]=v;for(let I=1;I<h;++I)y[N*h+I]=0;x[N]=a}return[y,[g,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(t,e,n,s,r){const i=Y(s),a=e[0],o=r.length,l=[];let u=1,c=-1;for(let g=0;g<o;++g){const y=r[g];if(y===-1){if(c!==-1)throw new Error(l_(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(u_(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(c_());const g=Math.trunc(i/u);if(u*g!==i)throw new Error(h_(s,l));l[c]=g}if(Y(l)!==i)throw new Error(d_(s,l));const d=s.length,f=[];if(d>0){f[d-1]=1;for(let g=d-2;g>=0;--g)f[g]=f[g+1]*s[g+1]}const p=[];if(o>0){p[o-1]=1;for(let g=o-2;g>=0;--g)p[g]=p[g+1]*l[g+1]}const m=rn(n,a*o);for(let g=0;g<a;++g){let y=0;for(let x=0;x<d;++x)y+=t[g*d+x]*f[x];for(let x=0;x<o;++x)m[g*o+x]=Math.trunc(y/p[x]),y%=p[x]}return[m,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(t,e,n,s,r,i=!1,a=0){const o=s.length,l=[e[0],t.length/e[0]],u=l[1],h=o>0?r[o-1]+1:0;if(h<0)throw new Error(hv());const d=e.slice();d[0]=h;const f=d.reduce((w,v)=>w*v,1),p=rn(n,f);if(o===0)return h>0&&p.fill(a),[p,d];if(h<=0)throw new Error(hv());let m=0,g=1,y=0,x=r[m];for(;;){let w=0;if(g<o){if(w=r[g],x===w){++g;continue}if(x>=w)throw new Error(f_())}if(x<0||x>=h)throw new Error(p_(x,h));x>y&&p.fill(a,y*u,x*u);for(let v=m;v<g;++v){const S=s[v];if(S<0||S>=l[0])throw new Error(m_(v,s[v],l[0]));for(let N=0;N<u;N++)p[x*u+N]+=t[S*u+N]}if(i)for(let v=0;v<u;v++)p[x*u+v]/=g-m;if(m=g,++g,y=x+1,x=w,g>o)break}return y<h&&p.fill(a,y*u,h*u),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sZ=na(t=>Math.sqrt(t)),rZ=kt(Ih,t=>Math.sqrt(t)),iZ={kernelName:Ih,backendName:"cpu",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz=pn((t,e)=>{const n=t-e;return n*n}),aZ=_n(Th,vz),oZ={kernelName:Th,backendName:"cpu",kernelFunc:aZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sz=na((t,e)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=e;return t.replace(new RegExp(n,s?"g":""),r)}),lZ=Mo(Qx,Sz),uZ={kernelName:Qx,backendName:"cpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(t,e,n,s){const r=Ge(t,e.dtype);for(let i=0;i<r.size;i++){const a=r.indexToLoc(i),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*n[l]+s[l];r.set(e.get(...o),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cZ{constructor(e,n,s,r,i,a){this.separator=va(e),this.nGramWidths=n,this.leftPad=va(s),this.rightPad=va(r),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const s=this.getPadWidth(n);return Math.max(0,e+2*s-n+1)}createNGrams(e,n,s,r,i,a){for(let o=0;o<i;++o){const l=this.getPadWidth(a),u=Math.max(0,l-o),c=Math.max(0,l-(i-(o+1))),h=a-(u+c),d=n+(u>0?0:o-l);let f=0;f+=u*this.leftPad.length;for(let x=0;x<h;++x)f+=e[d+x].length;f+=c*this.rightPad.length;const p=u+c+h-1;f+=p*this.separator.length,s[r+o]=new Uint8Array(f);const m=s[r+o];let g=0;const y=x=>x.forEach(w=>m[g++]=w);for(let x=0;x<u;++x)y(this.leftPad),y(this.separator);for(let x=0;x<h-1;++x)y(e[d+x]),y(this.separator);if(h>0){y(e[d+h-1]);for(let x=0;x<c;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<c-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,n){const s=e.length,r=n.length;if(r>0){let l=n[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=n[u]>=l;if(c=c&&n[u]<=s,!c)throw new Error(`Invalid split value ${n[u]}, must be in [${l}, ${s}]`);l=n[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=r-1,a=rn("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=i;++u)a[u]=0;return[l,a]}a[0]=0;for(let l=1;l<=i;++l){const u=n[l]-n[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),a[l]=a[l-1]+c}const o=new Array(a[i]);for(let l=0;l<i;++l){const u=n[l];let c=a[l];if(this.nGramWidths.forEach(h=>{const d=n[l+1]-n[l],f=this.getNumNGrams(d,h);this.createNGrams(e,u,o,c,f,h),c+=f}),this.preserveShort&&c===a[l]){const h=n[l+1]-n[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,o,c,1,d)}}return[o,a]}}function kz(t,e,n,s,r,i,a,o){return new cZ(n,s,r,i,a,o).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hZ(t,e,n,s){if(!t.length)return;if(e.length===0){for(let i=0;i<t.length;++i)s.push(t.subarray(i,i+1));return}if(e.length===1){const i=e[0];let a=t.indexOf(i);for(;a!==-1;){const o=t.subarray(0,a);(!n||o.length!==0)&&s.push(o),t=t.subarray(a+1),a=t.indexOf(i)}(!n||t.length!==0)&&s.push(t);return}let r=0;for(let i=0;i<t.length+1;i++)if(i===t.length||e.indexOf(t[i])!==-1){const a=t.subarray(r,i);(!n||a.length!==0)&&s.push(a),r=i+1}}function $z(t,e,n){const s=t.length,r=[];let i=0,a=0;const o=new Array(s);for(let d=0;d<s;++d){const f=r.length;hZ(t[d],e,n,r);const p=r.length-f;o[d]=p,i+=p,a=Math.max(a,p)}const l=rn("int32",i*2),u=new Array(i),c=[s,a];let h=0;for(let d=0;d<s;++d)for(let f=0;f<o[d];++f)l[h*2]=d,l[h*2+1]=f,u[h]=r[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(t,e){const n=rn("int32",t.length);for(let s=0;s<t.length;++s)n[s]=NU(t[s]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz=pn((t,e)=>t-e),dZ=AC((t,e,n,s)=>({real:t-n,imag:e-s})),zC=_n(Eh,Iz,dZ),fZ={kernelName:Eh,backendName:"cpu",kernelFunc:zC};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const s=Ge(n,t.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),a=new Array(t.rank);for(let l=0;l<a.length;l++)a[l]=i[l]%t.shape[l];const o=t.locToIndex(a);s.values[r]=t.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Td=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function Ez(t,e,n=0,s=t.length-1){for(;s>n;){if(s-n>600){const o=s-n+1,l=e-n+1,u=Math.log(o),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),d=Math.max(n,Math.floor(e-l*c/o+h)),f=Math.min(s,Math.floor(e+(o-l)*c/o+h));Ez(t,e,d,f)}const r=t[e];let i=n,a=s;for(Ru(t,n,e),Td(t[s],r)>0&&Ru(t,n,s);i<a;){for(Ru(t,i,a),i++,a--;Td(t[i],r)<0;)i=i+1;for(;Td(t[a],r)>0;)a=a-1}Td(t[n],r)===0?Ru(t,n,a):(a=a+1,Ru(t,a,s)),a<=e&&(n=a+1),e<=a&&(s=a-1)}}function Rz(t,e,n,s,r){const i=e[e.length-1],[a,o]=[t.length/i,i],l=Rn(n,a*s),u=Rn("int32",a*s);for(let h=0;h<a;h++){const d=h*o,f=t.subarray(d,d+o);let p=new Array(f.length);f.forEach((x,w)=>p[w]={value:x,index:w}),s<p.length&&(Ez(p,s),p=p.slice(0,s)),r&&p.sort(Td);const m=h*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=p[x].value,y[x]=p[x].index}const c=e.slice();return c[c.length-1]=s,[Ge(c,n,l),Ge(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(t,e,n,s){const r=qe(e,n)[0],i=[1,n[0],1];for(let p=0;p<r;p++)i[0]*=n[p];i[1]=n[r];for(let p=r+1;p<n.length;p++)i[2]*=n[p];const a=new Map,o=new Int32Array(n[r]),l=new In(i,s,t),u=[],c=i[0]===1&&i[2]===1;for(let p=0;p<n[r];p++){let m;if(c)m=t[p].toString();else{const y=[];for(let x=0;x<i[0];x++)for(let w=0;w<i[2];w++)y.push(l.get(x,p,w));m=y.join(",")}const g=a.get(m);if(g!=null)o[p]=g;else{const y=a.size;a.set(m,y),o[p]=y,u.push(p)}}const h=i.slice();h[1]=a.size;const d=new In(h,s);u.forEach((p,m)=>{for(let g=0;g<i[0];g++)for(let y=0;y<i[2];y++)d.set(l.get(g,p,y),g,m,y)});const f=n.slice();return f[r]=h[1],{outputValues:d.values,outputShape:f,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz=Object.freeze(Object.defineProperty({__proto__:null,addImpl:BF,bincountImpl:DC,bincountReduceImpl:VF,bitwiseAndImpl:UF,castImpl:MF,ceilImpl:WF,concatImpl:GF,equalImpl:HF,expImpl:qF,expm1Impl:KF,floorDivImpl:QF,floorImpl:YF,gatherNdImpl:ZF,gatherV2Impl:JF,greaterEqualImpl:tz,greaterImpl:ez,lessEqualImpl:sz,lessImpl:nz,linSpaceImpl:rz,logImpl:iz,maxImpl:az,maximumImpl:oz,minimumImpl:lz,multiplyImpl:_C,negImpl:uz,notEqualImpl:cz,prodImpl:hz,raggedGatherImpl:dz,raggedRangeImpl:fz,raggedTensorToTensorImpl:pz,rangeImpl:mz,rsqrtImpl:gz,scatterImpl:ul,sigmoidImpl:eZ,simpleAbsImpl:PF,sliceImpl:xz,sparseFillEmptyRowsImpl:bz,sparseReshapeImpl:wz,sparseSegmentReductionImpl:FC,sqrtImpl:sZ,squaredDifferenceImpl:vz,staticRegexReplaceImpl:Sz,stridedSliceImpl:Cz,stringNGramsImpl:kz,stringSplitImpl:$z,stringToHashBucketFastImpl:Nz,subImpl:Iz,tileImpl:Tz,topKImpl:Rz,transposeImpl:OC,uniqueImpl:Az},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lS("cpu",()=>new o0,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _z=kt(Zc,t=>t>=0?t:Math.exp(t)-1),pZ={kernelName:Zc,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s;Te([r],"leakyRelu");const a=Y(r.shape),o=n.data.get(r.dataId).values,l=Rn("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}const mZ={kernelName:pp,backendName:"cpu",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=pn((t,e)=>t<0?e*t:t);function Fz(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;Te([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=gZ(s.shape,r.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const yZ={kernelName:_p,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz=kt(yh,t=>Math.max(0,t)),xZ={kernelName:yh,backendName:"cpu",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=kt(xh,t=>Math.min(Math.max(0,t),6)),bZ={kernelName:xh,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(t,e,n,s,r){if(n==="linear")return Xi({inputs:{x:e},backend:t});if(n==="relu")return zz({inputs:{x:e},backend:t});if(n==="elu")return _z({inputs:{x:e},backend:t});if(n==="relu6")return Lz({inputs:{x:e},backend:t});if(n==="prelu")return Fz({inputs:{x:e,alpha:s},backend:t});if(n==="leakyrelu")return Oz({inputs:{x:e},backend:t,attrs:{alpha:r}});if(n==="sigmoid")return yz({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=Y(r.shape),o=j2(i,a),l=Y(o);R(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=o,h.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const wZ={kernelName:Fp,backendName:"cpu",kernelFunc:zt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;Te([r,i],"matMul");const l=r.shape.length,u=i.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],f=o?i.shape[u-2]:i.shape[u-1],p=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Y(p),y=Y(m),w=Pe(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,f]);R(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`);const v=a?[g,c,d]:[g,d,c],S=o?[y,f,h]:[y,h,f],N=zt({inputs:{x:r},backend:n,attrs:{shape:v}}),I=zt({inputs:{x:i},backend:n,attrs:{shape:S}}),T=a?N.shape[1]:N.shape[2],A=a?N.shape[2]:N.shape[1],D=o?I.shape[1]:I.shape[2],O=Math.max(g,y),U=n.data.get(N.dataId).values,B=n.data.get(I.dataId).values,q=Re(N.shape),H=Re(I.shape),[L,Z,K]=a?[q[0],1,q[1]]:[q[0],q[1],1],[ee,se,ie]=o?[1,H[1],H[0]]:[H[1],1,H[0]],ue=A*D,le=Ge([O,A,D],N.dtype),de=le.values,he=n.blockSize;for(let ke=0;ke<O;ke++){const De=ke%g,Le=ke%y;for(let Fe=0;Fe<A;Fe+=he){const Xe=Math.min(Fe+he,A);for(let He=0;He<D;He+=he){const yt=Math.min(He+he,D);for(let je=0;je<T;je+=he){const nt=Math.min(je+he,T);for(let St=Fe;St<Xe;St++)for(let wt=He;wt<yt;wt++){let _t=0;for(let Tt=je;Tt<nt;Tt++){const yr=U[De*L+St*Z+Tt*K],mn=B[Tt*ee+wt*se+Le*ie];_t+=yr*mn}de[ke*ue+(St*D+wt)]+=_t}}}}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,le.dtype,le.values)}const vZ={kernelName:Jf,backendName:"cpu",kernelFunc:Pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,f,p;const m=[];d=Pz({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(f=Sc({inputs:{a:d,b:a},backend:n}),m.push(d),d=f),c&&(p=Ay(n,d,c,o,h),m.push(d),d=p);for(const y of m)n.disposeIntermediateTensorInfo(y);return d}const CZ={kernelName:pf,backendName:"cpu",kernelFunc:SZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kZ=kt(Mc,t=>Math.acos(t)),$Z={kernelName:Mc,backendName:"cpu",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ=kt(Bc,t=>Math.acosh(t)),IZ={kernelName:Bc,backendName:"cpu",kernelFunc:NZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(t){const{inputs:e,backend:n}=t,s=e;Te(e,"addN");const r=s.map(o=>n.data.get(o.dataId).values),i=Ge(s[0].shape,s[0].dtype),a=i.values;for(let o=0;o<s.length;o++){const l=r[o];for(let u=0;u<a.length;u++)a[u]+=l[u]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const EZ={kernelName:Xf,backendName:"cpu",kernelFunc:TZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Te(r,"all");const o=qe(i,r.shape);let l=o;const u=It(l,r.shape.length);let c=r;u!=null&&(c=As({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),wn("all",l,c.shape.length);const[h,d]=dn(c.shape,l),f=Y(d),p=Kn(Y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const x=y*f;let w=m[x];for(let v=0;v<f;++v){const S=m[x+v];w=w&&S}p[y]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,p);if(a){const y=on(h,o),x=zt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}const AZ={kernelName:ax,backendName:"cpu",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Te(r,"any");const o=qe(i,r.shape);let l=o;const u=It(l,r.shape.length);let c=r;u!=null&&(c=As({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),wn("any",l,c.shape.length);const[h,d]=dn(c.shape,l),f=Y(d),p=Kn(Y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const x=y*f;let w=m[x];for(let v=0;v<f;++v){const S=m[x+v];w=w||S}p[y]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,p);if(a){const y=on(h,o),x=zt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}const _Z={kernelName:ox,backendName:"cpu",kernelFunc:DZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;Te(r,"argMax");let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=As({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),a=[a[0]],wn("argMax",a,l.shape.length);const[c,h]=dn(l.shape,a),d=Y(c),f=Kn(d,"int32"),p=Y(h),m=n.data.get(l.dataId).values;for(let g=0;g<f.length;++g){const y=g*p;let x=m[y],w=0;for(let v=0;v<p;++v){const S=m[y+v];S>x&&(x=S,w=v)}f[g]=w}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",f)}const FZ={kernelName:Kf,backendName:"cpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;Te(r,"argMin");let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=As({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),a=[a[0]],wn("argMin",a,l.shape.length);const[c,h]=dn(l.shape,a),d=Y(c),f=Kn(d,"int32"),p=Y(h),m=n.data.get(l.dataId).values;for(let g=0;g<f.length;++g){const y=g*p;let x=m[y],w=0;for(let v=0;v<p;++v){const S=m[y+v];S<x&&(x=S,w=v)}f[g]=w}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",f)}const LZ={kernelName:Yf,backendName:"cpu",kernelFunc:zZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PZ=kt(Vc,t=>Math.asin(t)),MZ={kernelName:Vc,backendName:"cpu",kernelFunc:PZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ=kt(Uc,t=>Math.asinh(t)),VZ={kernelName:Uc,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UZ=kt(Wc,t=>Math.atan(t)),WZ={kernelName:Wc,backendName:"cpu",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GZ=pn((t,e)=>Math.atan2(t,e)),HZ=_n(Hc,GZ),jZ={kernelName:Hc,backendName:"cpu",kernelFunc:HZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZ=kt(Gc,t=>Math.atanh(t)),XZ={kernelName:Gc,backendName:"cpu",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(t,e,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,p=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ge(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let v=0;v<r.batchSize;++v){const S=v*y,N=v*s[0];for(let I=0;I<r.inChannels;++I)for(let T=0;T<r.outHeight;++T){const A=T*a-d,D=Math.max(0,A),O=Math.min(r.inHeight,c+A),U=S+T*x;for(let B=0;B<r.outWidth;++B){const q=B*o-f,H=Math.max(0,q),L=Math.min(r.inWidth,h+q);let Z=p,K=0,ee=0;for(let ie=D;ie<O;ie+=l){const ue=N+ie*s[1];for(let le=H;le<L;le+=u){const de=ue+le*s[2],he=t[de+I];i==="max"&&he>Z?Z=he:i==="avg"&&(K+=he,ee++)}if(isNaN(Z))break}const se=U+B*w+I;g[se]=i==="avg"?K/ee:Z}}}return m}function Mz(t,e,n,s,r=!1,i=!1){const a=Ge(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,p=s.padInfo.left,m=Ge(e,n,t);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const w=x*o-f;let v=w;for(;v<0;)v+=u;const S=Math.min(s.inHeight,h+w);for(let N=0;N<s.outWidth;++N){const I=N*l-p;let T=I;for(;T<0;)T+=c;const A=Math.min(s.inWidth,d+I);let D=Number.NEGATIVE_INFINITY,O=-1;for(let U=v;U<S;U+=u){const B=U-w;for(let q=T;q<A;q+=c){const H=q-I,L=m.get(g,U,q,y);L>D&&(D=L,r?O=i?((g*s.inHeight+U)*s.inWidth+q)*s.inChannels+y:(U*s.inWidth+q)*s.inChannels+y:O=B*d+H)}}a.set(O,g,x,N,y)}}return a}function Bz(t,e,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,f=r.effectiveFilterHeight,p=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ge(r.outShape,n),v=w.values,S=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let A=0;A<r.batchSize;++A){const D=A*S,O=A*s[0];for(let U=0;U<r.inChannels;++U)for(let B=0;B<r.outDepth;++B){const q=B*a-m;let H=q;for(;H<0;)H+=u;const L=Math.min(r.inDepth,d+q),Z=D+B*N;for(let K=0;K<r.outHeight;++K){const ee=K*o-g;let se=ee;for(;se<0;)se+=c;const ie=Math.min(r.inHeight,f+ee),ue=Z+K*I;for(let le=0;le<r.outWidth;++le){const de=le*l-y;let he=de;for(;he<0;)he+=h;const ke=Math.min(r.inWidth,p+de),De=ue+le*T;let Le=x,Fe=0,Xe=0;for(let yt=H;yt<L;yt+=u){const je=O+yt*s[1];for(let nt=se;nt<ie;nt+=c){const St=je+nt*s[2];for(let wt=he;wt<ke;wt+=h){const _t=St+wt*s[3],Tt=t[_t+U];if(i==="max"&&Tt>Le?Le=Tt:i==="avg"&&(Fe+=Tt,Xe++),isNaN(Le))break}if(isNaN(Le))break}if(isNaN(Le))break}const He=De+U;v[He]=i==="avg"?Fe/Math.max(Xe,1):Le}}}}return w}function KZ(t,e){const n=Ge(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,f=e.padInfo.top,p=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const x=y*s-d;let w=x;for(;w<0;)w+=a;const v=Math.min(e.inDepth,u+x);for(let S=0;S<e.outHeight;++S){const N=S*r-f;let I=N;for(;I<0;)I+=o;const T=Math.min(e.inHeight,c+N);for(let A=0;A<e.outWidth;++A){const D=A*i-p;let O=D;for(;O<0;)O+=l;const U=Math.min(e.inWidth,h+D);let B=Number.NEGATIVE_INFINITY,q=-1;for(let H=w;H<v;H+=a){const L=H-x;for(let Z=I;Z<T;Z+=o){const K=Z-N;for(let ee=O;ee<U;ee+=l){const se=ee-D,ie=t.get(m,H,Z,ee,g);ie>=B&&(B=ie,q=L*c*h+K*c+se)}}}n.set(q,m,y,S,A,g)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Te(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;R(Dn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=as(r.shape,i,a,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ke(c.inShape,c.outShape))h=Xi({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,f=Re(r.shape),p=LC(d,r.shape,r.dtype,f,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,p.values)}return h}const QZ={kernelName:Qf,backendName:"cpu",kernelFunc:YZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;Te(r,"avgPool3d");const c=pr(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=Bz(h,r.shape,r.dtype,Re(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const JZ={kernelName:Zf,backendName:"cpu",kernelFunc:ZZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;Te([r,i],"avgPool3DGrad");const c=pr(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,f=c.strideWidth,p=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,S=c.effectiveFilterHeight,N=c.effectiveFilterWidth,I=v-1-c.padInfo.front,T=N-1-c.padInfo.left,A=S-1-c.padInfo.top,D=Ge(i.shape,"float32"),O=1/(p*m*g),U=n.bufferSync(r);for(let B=0;B<c.batchSize;++B)for(let q=0;q<c.inChannels;++q)for(let H=0;H<c.inDepth;++H)for(let L=0;L<c.inHeight;++L)for(let Z=0;Z<c.inWidth;++Z){const K=H-I,ee=L-A,se=Z-T;let ie=0;for(let ue=0;ue<v;ue+=y){const le=(K+ue)/h;if(!(le<0||le>=c.outDepth||Math.floor(le)!==le))for(let de=0;de<S;de+=x){const he=(ee+de)/d;if(!(he<0||he>=c.outHeight||Math.floor(he)!==he))for(let ke=0;ke<N;ke+=w){const De=(se+ke)/f;if(De<0||De>=c.outWidth||Math.floor(De)!==De)continue;const Le=U.get(B,le,he,De,q);ie+=Le}}}D.set(ie*O,B,H,L,Z,q)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}const tJ={kernelName:ux,backendName:"cpu",kernelFunc:eJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;Te([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=as(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,f=c.filterHeight,p=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,v=y-1-c.padInfo.top,S=Ge(a.shape,"float32"),N=1/(f*p),I=n.data.get(r.dataId).values,T=Ge(r.shape,"float32",I);for(let A=0;A<c.batchSize;++A)for(let D=0;D<c.inChannels;++D)for(let O=0;O<c.inHeight;++O)for(let U=0;U<c.inWidth;++U){const B=O-v,q=U-w;let H=0;for(let L=0;L<y;L+=m){const Z=(B+L)/h;if(!(Z<0||Z>=c.outHeight||Math.floor(Z)!==Z))for(let K=0;K<x;K+=g){const ee=(q+K)/d;if(ee<0||ee>=c.outWidth||Math.floor(ee)!==ee)continue;const se=T.get(A,Z,ee,D);H+=se}}S.set(H*N,A,O,U,D)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const sJ={kernelName:lx,backendName:"cpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:i,offset:a,mean:o,variance:l}=e;R(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),R(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),R(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Te([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),p=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=p.length,y=f.length,x=d.length,w=h.length;let v=0,S=0,N=0,I=0;for(let T=0;T<c.length;++T)m[T]=p[v++]+(c[T]-h[S++])*f[N++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),S>=w&&(S=0),N>=y&&(N=0),I>=x&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}const iJ={kernelName:hp,backendName:"cpu",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;Te([r],"batchToSpaceND");const o=i.reduce((y,x)=>y*x),l=su(r.shape,i,o),u=ru(l.length,i.length),c=iu(r.shape,i,o),h=zb(a,i.length),d=Lb(c,a,i.length),f=zt({inputs:{x:r},backend:n,attrs:{shape:l}}),p=As({inputs:{x:f},backend:n,attrs:{perm:u}}),m=zt({inputs:{x:p},backend:n,attrs:{shape:c}}),g=Ul({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const oJ={kernelName:ep,backendName:"cpu",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=DC(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const uJ={kernelName:cx,backendName:"cpu",kernelFunc:lJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=Pe(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const hJ={kernelName:dx,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dJ=kt(Xc,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),fJ={kernelName:Xc,backendName:"cpu",kernelFunc:dJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ=t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(Y(e.shape)),r=n.data.get(e.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const c=o[u],h=l[u];s[u]=Math.hypot(c,h)}return n.makeOutput(s,e.shape,"float32")},mJ={kernelName:tp,backendName:"cpu",kernelFunc:pJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const gJ={kernelName:Ax,backendName:"cpu",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=qe(r,e[0].shape)[0],a=e.map(m=>m.shape);_b(a,i);let o=Is(e.map(m=>m.shape),i);if(Y(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(m=>Y(m.shape)>0);if(l.length===1)return Xi({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){const m=l.map(v=>Vl({inputs:{input:v},backend:n})),g=l.map(v=>Cc({inputs:{input:v},backend:n})),y=kc({inputs:m,backend:n,attrs:{axis:i}}),x=kc({inputs:g,backend:n,attrs:{axis:i}}),w=Bs({inputs:{real:y,imag:x},backend:n});return m.forEach(v=>n.disposeIntermediateTensorInfo(v)),g.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),w}const u=l.map(m=>{const y=[-1,Y(m.shape.slice(i))];return zt({inputs:{x:m},backend:n,attrs:{shape:y}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=Is(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=GF(c,o,e[0].dtype,h),f=Is(l.map(m=>m.shape),i),p=n.makeTensorInfo(f,e[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),p}const yJ={kernelName:np,backendName:"cpu",kernelFunc:kc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Te([r,i],"conv2d");const h=Qs(l),d=Lt(r.shape,i.shape,a,u,o,c,!1,h),f=d.filterHeight,p=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,w=d.dataFormat==="channelsLast",v=new In(d.outShape,r.dtype),S=Re(r.shape),N=Re(i.shape),I=S[0],T=w?S[1]:S[2],A=w?S[2]:1,D=w?1:S[1],O=v.strides[0],U=w?v.strides[1]:v.strides[2],B=w?v.strides[2]:1,q=w?1:v.strides[1],H=n.data.get(r.dataId).values,L=n.data.get(i.dataId).values,Z=v.values;for(let K=0;K<d.batchSize;++K){const ee=K*I,se=K*O;for(let ie=0;ie<d.outHeight;++ie){const ue=se+ie*U,le=ie*d.strideHeight-x;for(let de=0;de<f;++de){const he=le+de*m;if(he<0||he>=d.inHeight)continue;const ke=de*N[0],De=ee+he*T;for(let Le=0;Le<d.outWidth;++Le){const Fe=ue+Le*B,Xe=Le*d.strideWidth-y;for(let He=0;He<p;++He){const yt=Xe+He*g;if(yt<0||yt>=d.inWidth)continue;const je=ke+He*N[1],nt=De+yt*A;let St=je;for(let wt=0;wt<d.inChannels;++wt){const _t=H[nt+wt*D];for(let Tt=0;Tt<d.outChannels;++Tt)Z[Fe+Tt*q]+=_t*L[St+Tt];St+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,Z)}const xJ={kernelName:sp,backendName:"cpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Te([r,i],"conv2dBackpropFilter");const h=Qs(l),d=Lt(r.shape,c,a,1,o,u,!1,h),{strideHeight:f,strideWidth:p,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new In(d.filterShape,"float32"),w=d.padInfo.left,v=d.padInfo.top,S=n.data.get(r.dataId).values,N=n.data.get(i.dataId).values,I=new In(r.shape,r.dtype,S),T=new In(i.shape,i.dtype,N);for(let A=0;A<m;++A){const D=Math.max(0,Math.ceil((v-A)/f)),O=Math.min(d.outHeight,(d.inHeight+v-A)/f);for(let U=0;U<g;++U){const B=Math.max(0,Math.ceil((w-U)/p)),q=Math.min(d.outWidth,(d.inWidth+w-U)/p);for(let H=0;H<d.inChannels;++H)for(let L=0;L<d.outChannels;++L){let Z=0;for(let K=0;K<d.batchSize;++K)for(let ee=D;ee<O;++ee){const se=A+ee*f-v;for(let ie=B;ie<q;++ie){const ue=U+ie*p-w;y?Z+=I.get(K,se,ue,H)*T.get(K,ee,ie,L):Z+=I.get(K,H,se,ue)*T.get(K,L,ee,ie)}}x.set(Z,A,U,H,L)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const wJ={kernelName:px,backendName:"cpu",kernelFunc:bJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Te([r,i],"conv2dBackpropInput");const h=Re(i.shape),d=Re(r.shape);let f=Qs(u);const p=Lt(a,i.shape,o,1,l,c,!1,f),m=new In(p.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,[w,v,S]=h,{batchSize:N,filterHeight:I,filterWidth:T,inChannels:A,inHeight:D,inWidth:O,outChannels:U,outHeight:B,outWidth:q,strideHeight:H,strideWidth:L}=p;f=p.dataFormat;const Z=I-1-p.padInfo.top,K=T-1-p.padInfo.left,ee=f==="channelsLast",se=m.strides[0],ie=ee?m.strides[1]:m.strides[2],ue=ee?m.strides[2]:1,le=ee?1:m.strides[1],de=d[0],he=ee?d[1]:d[2],ke=ee?d[2]:1,De=ee?1:d[1];for(let Le=0;Le<N;++Le)for(let Fe=0;Fe<A;++Fe)for(let Xe=0;Xe<D;++Xe){const He=Xe-Z,yt=Math.max(0,Math.ceil(He/H)),je=Math.min(B,(I+He)/H);for(let nt=0;nt<O;++nt){const St=nt-K,wt=Math.max(0,Math.ceil(St/L)),_t=Math.min(q,(T+St)/L);let Tt=0;for(let mn=yt;mn<je;++mn){const Zr=mn*H-He;for(let Jn=wt;Jn<_t;++Jn){const Ci=Jn*L-St,On=de*Le+he*mn+ke*Jn,xr=w*(I-1-Zr)+v*(T-1-Ci)+S*Fe;for(let Js=0;Js<U;++Js){const br=y[On+De*Js],ki=x[xr+Js];Tt+=br*ki}}}const yr=se*Le+ie*Xe+ue*nt+le*Fe;g[yr]=Tt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const SJ={kernelName:rp,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s;Te([r,i],"conv3d");const u=vi(r.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,w=g.top,v=new In(u.outShape,r.dtype),S=n.data.get(r.dataId).values,N=n.data.get(i.dataId).values,I=v.values,T=Re(r.shape),A=Re(i.shape);for(let D=0;D<u.batchSize;++D){const O=D*T[0],U=D*v.strides[0];for(let B=0;B<u.outDepth;++B){const q=U+B*v.strides[1],H=B*u.strideDepth-y;for(let L=0;L<c;++L){const Z=H+L*f;if(Z<0||Z>=u.inDepth)continue;const K=L*A[0],ee=O+Z*T[1];for(let se=0;se<u.outHeight;++se){const ie=q+se*v.strides[2],ue=se*u.strideHeight-w;for(let le=0;le<h;++le){const de=ue+le*p;if(de<0||de>=u.inHeight)continue;const he=K+le*A[1],ke=ee+de*T[2];for(let De=0;De<u.outWidth;++De){const Le=ie+De*u.outChannels,Fe=De*u.strideWidth-x;for(let Xe=0;Xe<d;++Xe){const He=Fe+Xe*m;if(He<0||He>=u.inWidth)continue;const yt=he+Xe*A[2],je=ke+He*u.inChannels;let nt=yt;for(let St=0;St<u.inChannels;++St){const wt=S[je+St];for(let _t=0;_t<u.outChannels;++_t)I[Le+_t]+=wt*N[nt+_t];nt+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const kJ={kernelName:ip,backendName:"cpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s;Te([r,i],"conv3dBackpropFilterV2");const u=Re(r.shape),c=Re(i.shape),h=vi(r.shape,l,a,1,o),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new In(h.filterShape,"float32"),w=x.values,[v,S,N,I]=x.strides,T=n.data.get(i.dataId).values,[A,D,O,U]=c,B=n.data.get(r.dataId).values,[q,H,L,Z]=u,K=h.padInfo.front,ee=h.padInfo.left,se=h.padInfo.top;for(let ie=0;ie<m;++ie){const ue=Math.max(0,Math.ceil((K-ie)/d)),le=Math.min(h.outDepth,(h.inDepth+K-ie)/d),de=ie*v;for(let he=0;he<g;++he){const ke=Math.max(0,Math.ceil((se-he)/f)),De=Math.min(h.outHeight,(h.inHeight+se-he)/f),Le=he*S+de;for(let Fe=0;Fe<y;++Fe){const Xe=Math.max(0,Math.ceil((ee-Fe)/p)),He=Math.min(h.outWidth,(h.inWidth+ee-Fe)/p),yt=Fe*N+Le;for(let je=0;je<h.inChannels;++je){const nt=je*I+yt;for(let St=0;St<h.outChannels;++St){let wt=0;for(let _t=0;_t<h.batchSize;++_t){const Tt=_t*q,yr=_t*A;for(let mn=ue;mn<le;++mn){const Jn=(ie+mn*d-K)*H+Tt,Ci=mn*D+yr;for(let On=ke;On<De;++On){const Js=(he+On*f-se)*L+Jn,br=On*O+Ci;for(let ki=Xe;ki<He;++ki){const Qh=(Fe+ki*p-ee)*Z+Js,mu=ki*U+br;wt+=B[Qh+je]*T[mu+St]}}}}w[nt+St]=wt}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const NJ={kernelName:mx,backendName:"cpu",kernelFunc:$J};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s;Te([r],"conv3dBackpropInputV2");const u=Re(r.shape),c=Re(i.shape),h=vi(l,i.shape,o,1,a),d=new In(h.inShape,"float32"),f=d.values,[p,m,g,y]=d.strides,x=n.data.get(r.dataId).values,[w,v,S,N]=u,I=n.data.get(i.dataId).values,[T,A,D,O]=c,{batchSize:U,filterDepth:B,filterHeight:q,filterWidth:H,inChannels:L,inDepth:Z,inHeight:K,inWidth:ee,outChannels:se,outDepth:ie,outHeight:ue,outWidth:le,strideDepth:de,strideHeight:he,strideWidth:ke}=h,De=B-1-h.padInfo.front,Le=q-1-h.padInfo.top,Fe=H-1-h.padInfo.left;for(let Xe=0;Xe<U;++Xe)for(let He=0;He<L;++He)for(let yt=0;yt<Z;++yt){const je=yt-De,nt=Math.max(0,Math.ceil(je/de)),St=Math.min(ie,(B+je)/de);for(let wt=0;wt<K;++wt){const _t=wt-Le,Tt=Math.max(0,Math.ceil(_t/he)),yr=Math.min(ue,(q+_t)/he);for(let mn=0;mn<ee;++mn){const Zr=mn-Fe,Jn=Math.max(0,Math.ceil(Zr/ke)),Ci=Math.min(le,(H+Zr)/ke);let On=0;for(let xr=nt;xr<St;++xr){const Js=xr*de-je;for(let br=Tt;br<yr;++br){const ki=br*he-_t;for(let La=Jn;La<Ci;++La){const Qh=La*ke-Zr,mu=w*Xe+v*xr+S*br+N*La,bm=T*(B-1-Js)+A*(q-1-ki)+D*(H-1-Qh)+O*He;for(let $i=0;$i<se;++$i){const Zh=x[mu+$i],wm=I[bm+$i];On+=Zh*wm}}}}f[p*Xe+m*yt+g*wt+y*mn+He]=On}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const TJ={kernelName:gx,backendName:"cpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ=kt(Kc,t=>Math.cos(t)),RJ={kernelName:Kc,backendName:"cpu",kernelFunc:EJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ=kt(Yc,t=>Math.cosh(t)),DJ={kernelName:Yc,backendName:"cpu",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _J(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,f]=r.shape,p=i.shape[0],[m,g]=o,y=Ge([p,m,g,f],"float32"),x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=n.data.get(r.dataId).values,S=Re(r.shape),N=Re(y.shape);for(let I=0;I<p;I++){const T=I*4,A=x[T],D=x[T+1],O=x[T+2],U=x[T+3],B=w[I];if(B>=c)continue;const q=m>1?(O-A)*(h-1)/(m-1):0,H=g>1?(U-D)*(d-1)/(g-1):0;for(let L=0;L<m;L++){const Z=m>1?A*(h-1)+L*q:.5*(A+O)*(h-1);if(Z<0||Z>h-1){for(let K=0;K<g;K++)for(let ee=0;ee<f;ee++){const se=ee+K*N[2]+L*N[1]+I*N[0];y.values[se]=u}continue}if(l==="bilinear"){const K=Math.floor(Z),ee=Math.ceil(Z),se=Z-K;for(let ie=0;ie<g;ie++){const ue=g>1?D*(d-1)+ie*H:.5*(D+U)*(d-1);if(ue<0||ue>d-1){for(let ke=0;ke<f;ke++){const De=ke+ie*N[2]+L*N[1]+I*N[0];y.values[De]=u}continue}const le=Math.floor(ue),de=Math.ceil(ue),he=ue-le;for(let ke=0;ke<f;ke++){let De=ke+le*S[2]+K*S[1]+B*S[0];const Le=v[De];De=ke+de*S[2]+K*S[1]+B*S[0];const Fe=v[De];De=ke+le*S[2]+ee*S[1]+B*S[0];const Xe=v[De];De=ke+de*S[2]+ee*S[1]+B*S[0];const He=v[De],yt=Le+(Fe-Le)*he,je=Xe+(He-Xe)*he;De=ke+ie*N[2]+L*N[1]+I*N[0],y.values[De]=yt+(je-yt)*se}}}else for(let K=0;K<g;++K){const ee=g>1?D*(d-1)+K*H:.5*(D+U)*(d-1);if(ee<0||ee>d-1){for(let ue=0;ue<f;ue++){const le=ue+K*N[2]+L*N[1]+I*N[0];y.values[le]=u}continue}const se=Math.round(ee),ie=Math.round(Z);for(let ue=0;ue<f;ue++){const le=ue+se*S[2]+ie*S[1]+B*S[0],de=ue+K*N[2]+L*N[1]+I*N[0];y.values[de]=v[le]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const OJ={kernelName:xx,backendName:"cpu",kernelFunc:_J};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;Te(r,"cumprod");const l=It([i],r.shape.length);let u=r;l!=null&&(u=As({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Pt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Vn(u.dtype,"int32"),d=X2(Y(u.shape),h),f=n.data.get(u.dataId).values,p=u.shape[u.shape.length-1],m=o?(y,x)=>y+p-x-1:(y,x)=>y+x;for(let y=0;y<f.length;y+=p)for(let x=0;x<p;x++){const w=m(y,x);if(x===0)d[w]=a?1:f[w];else{const v=m(y,x-1);d[w]=a?f[v]*d[v]:f[w]*d[v]}}const g=n.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Ji(l),x=As({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}const zJ={kernelName:yx,backendName:"cpu",kernelFunc:FJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;Te(r,"cumsum");const l=It([i],r.shape.length);let u=r;l!=null&&(u=As({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Pt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Vn(u.dtype,"int32"),d=Kn(Y(u.shape),h),f=n.data.get(u.dataId).values,p=u.shape[u.shape.length-1],m=o?(y,x)=>y+p-x-1:(y,x)=>y+x;for(let y=0;y<f.length;y+=p)for(let x=0;x<p;x++){const w=m(y,x);if(x===0)d[w]=a?0:f[w];else{const v=m(y,x-1);d[w]=a?f[v]+d[v]:f[w]+d[v]}}const g=n.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Ji(l),x=As({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}const PJ={kernelName:ap,backendName:"cpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(r.shape.length===1){const l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=DC(l,u,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(i),c=VF(l,u,a,o);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const BJ={kernelName:bx,backendName:"cpu",kernelFunc:MJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s;R(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*i,d=u*i,f=c/(i*i),p=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*f);let g=0;for(let y=0;y<o;++y)for(let x=0;x<h;++x){const w=Math.floor(x/i),v=x%i;for(let S=0;S<d;++S){const N=Math.floor(S/i),I=S%i,T=(v*i+I)*f;for(let A=0;A<f;++A){const O=A+T+c*(N+u*(w+l*y));m[g++]=p[O]}}}return n.makeTensorInfo([o,h,d,f],r.dtype,m)}const UJ={kernelName:wx,backendName:"cpu",kernelFunc:VJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;Te([r,i],"depthwiseConv2DNative");const c=Re(r.shape),h=Re(i.shape);let d=l;d==null&&(d=[1,1]),R(Dn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const f=Lt(r.shape,i.shape,a,d,o,u,!0),{filterHeight:p,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=f,w=x.left,v=x.top,S=f.outChannels/f.inChannels,N=new In(f.outShape,r.dtype),I=n.data.get(r.dataId).values,T=n.data.get(i.dataId).values,A=N.values;for(let D=0;D<f.batchSize;++D){const O=D*c[0],U=D*N.strides[0];for(let B=0;B<f.outHeight;++B){const q=U+B*N.strides[1],H=B*f.strideHeight-v;for(let L=0;L<p;++L){const Z=H+L*g;if(Z<0||Z>=f.inHeight)continue;const K=L*h[0],ee=O+Z*c[1];for(let se=0;se<f.outWidth;++se){const ie=q+se*N.strides[2],ue=se*f.strideWidth-w;for(let le=0;le<m;++le){const de=ue+le*y;if(de<0||de>=f.inWidth)continue;const he=K+le*h[1],ke=ee+de*f.inChannels;let De=ie,Le=he;for(let Fe=0;Fe<f.inChannels;++Fe){const Xe=I[ke+Fe];for(let He=0;He<S;++He)A[De+He]+=Xe*T[Le+He];De+=S,Le+=S}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const WJ={kernelName:op,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Te([r,i],"depthwiseConv2dNativeBackpropFilter");const h=Lt(r.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:m}=h,g=new In(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,w=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,S=new In(r.shape,r.dtype,v),N=n.data.get(i.dataId).values,I=new In(i.shape,i.dtype,N);for(let T=0;T<p;++T){const A=Math.max(0,Math.ceil((x-T)/d)),D=Math.min(h.outHeight,(h.inHeight+x-T)/d);for(let O=0;O<m;++O){const U=Math.max(0,Math.ceil((y-O)/f)),B=Math.min(h.outWidth,(h.inWidth+y-O)/f);for(let q=0;q<h.outChannels;++q){const H=Math.trunc(q/w),L=q%w;let Z=0;for(let K=0;K<h.batchSize;++K)for(let ee=A;ee<D;++ee){const se=T+ee*d-x;for(let ie=U;ie<B;++ie){const ue=O+ie*f-y;Z+=S.get(K,se,ue,H)*I.get(K,ee,ie,q)}}g.set(Z,T,O,H,L)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const HJ={kernelName:vx,backendName:"cpu",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jJ(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Te([r,i],"depthwiseConv2DNativeBackpropInput");const h=Re(r.shape),d=Re(i.shape),f=Lt(c,i.shape,a,o,l,u,!0),p=new In(f.inShape,"float32"),m=p.values,[g,y,x]=p.strides,w=n.data.get(r.dataId).values,[v,S,N]=h,I=n.data.get(i.dataId).values,[T,A,D]=d,{batchSize:O,filterHeight:U,filterWidth:B,inChannels:q,inHeight:H,inWidth:L,outChannels:Z,outHeight:K,outWidth:ee,strideHeight:se,strideWidth:ie}=f,ue=U-1-f.padInfo.top,le=B-1-f.padInfo.left,de=Z/q;for(let he=0;he<O;++he)for(let ke=0;ke<q;++ke)for(let De=0;De<H;++De){const Le=De-ue,Fe=Math.max(0,Math.ceil(Le/se)),Xe=Math.min(K,(U+Le)/se);for(let He=0;He<L;++He){const yt=He-le,je=Math.max(0,Math.ceil(yt/ie)),nt=Math.min(ee,(B+yt)/ie);let St=0;for(let wt=Fe;wt<Xe;++wt){const _t=wt*se-Le;for(let Tt=je;Tt<nt;++Tt){const yr=Tt*ie-yt,mn=v*he+S*wt+N*Tt,Zr=T*(U-1-_t)+A*(B-1-yr)+D*ke;for(let Jn=0;Jn<de;++Jn){const Ci=ke*de+Jn,On=w[mn+Ci],xr=I[Zr+Jn];St+=On*xr}}}m[g*he+y*De+x*He+ke]=St}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const qJ={kernelName:Sx,backendName:"cpu",kernelFunc:jJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(t){const{inputs:e,backend:n}=t,{x:s}=e,r=Y(s.shape),i=n.data.get(s.dataId).values,a=Ge([r,r],s.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*r+u]=i[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}const KJ={kernelName:Cx,backendName:"cpu",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ={kernelName:lp,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:f,inHeight:p,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:w,strideHeight:v,strideWidth:S,filterHeight:N,filterWidth:I,dilationHeight:T,dilationWidth:A,outShape:D}=Fo(s.shape,r.shape,i,a,"NHWC",o),O=Y(D),U=D.length,B=rn(s.dtype,O);for(let H=0;H<f;++H)for(let L=0;L<y;++L){const Z=L*v-w.top;for(let K=0;K<x;++K){const ee=K*S-w.left;for(let se=0;se<g;++se){let ie=Number.MIN_SAFE_INTEGER;for(let le=0;le<N;++le){const de=Z+le*T;if(de>=0&&de<p)for(let he=0;he<I;++he){const ke=ee+he*A;if(ke>=0&&ke<m){const De=Vi([H,de,ke,se],c,Re(s.shape)),Le=Vi([le,he,se],d,Re(r.shape)),Fe=u[De]+h[Le];Fe>ie&&(ie=Fe)}}}const ue=Vi([H,L,K,se],U,Re(D));B[ue]=ie}}}return{dataId:l.write(Jl(B,s.dtype),D,s.dtype),shape:D,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ={kernelName:uy,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Ur(s.shape,u.data.get(s.dataId).values),h=Ur(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:S,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:A}=Fo(s.shape,r.shape,a,o,"NHWC",l);R(i.rank===A.length,()=>`Error in ${uy}, dy must have the same rank as output ${A.length}, but got ${i.rank}`);const D=Ur(A,u.data.get(i.dataId).values),O=LA(r.shape,r.dtype);for(let B=0;B<d;++B)for(let q=0;q<g;++q){const H=q*w-x.top;for(let L=0;L<y;++L){const Z=L*v-x.left;for(let K=0;K<m;++K){let ee=Number.MIN_SAFE_INTEGER,se=0,ie=0;for(let ue=0;ue<S;++ue){const le=H+ue*I;if(le>=0&&le<f)for(let de=0;de<N;++de){const he=Z+de*T;if(he>=0&&he<p){const ke=c[B][le][he][K]+h[ue][de][K];ke>ee&&(ee=ke,se=ue,ie=de)}}}O[se][ie][K]+=D[B][q][L][K]}}}return{dataId:u.write(Jl(O,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZJ={kernelName:ly,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Ur(s.shape,u.data.get(s.dataId).values),h=Ur(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:S,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:A}=Fo(s.shape,r.shape,a,o,"NHWC",l);R(i.rank===A.length,()=>`Error in ${ly}, dy must have the same rank as output ${A.length}, but got ${i.rank}`);const D=Ur(A,u.data.get(i.dataId).values),O=LA(s.shape,s.dtype);for(let B=0;B<d;++B)for(let q=0;q<g;++q){const H=q*w-x.top;for(let L=0;L<y;++L){const Z=L*v-x.left;for(let K=0;K<m;++K){let ee=Number.MIN_SAFE_INTEGER,se=H<0?0:H,ie=Z<0?0:Z;for(let ue=0;ue<S;++ue){const le=H+ue*I;if(le>=0&&le<f)for(let de=0;de<N;++de){const he=Z+de*T;if(he>=0&&he<p){const ke=c[B][le][he][K]+h[ue][de][K];ke>ee&&(ee=ke,se=le,ie=he)}}}O[B][se][ie][K]+=D[B][q][L][K]}}}return{dataId:u.write(Jl(O,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JJ(t){const{inputs:e,backend:n,attrs:s}=t,{image:r}=e,{canvas:i,options:a}=s,{contextOptions:o,imageOptions:l}=a||{},u=(l==null?void 0:l.alpha)||1,c=(o==null?void 0:o.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(o==null?void 0:o.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,f]=r.shape.slice(0,2),p=r.shape.length===2?1:r.shape[2],m=n.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(f*d*4);for(let w=0;w<d*f;++w){const v=[0,0,0,255*u];for(let N=0;N<p;N++){const I=m[w*p+N];if(r.dtype==="float32"){if(I<0||I>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${I}.`)}else if(r.dtype==="int32"&&(I<0||I>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${I}.`);p===1?(v[0]=I*g,v[1]=I*g,v[2]=I*g):v[N]=I*g}const S=w*4;y[S+0]=Math.round(v[0]),y[S+1]=Math.round(v[1]),y[S+2]=Math.round(v[2]),y[S+3]=Math.round(v[3])}i.width=f,i.height=d;const x=new ImageData(y,f,d);return h.putImageData(x,0,0),r}const eee={kernelName:Y2,backendName:"cpu",kernelFunc:JJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Te(r,"sum");let o;r.dtype==="bool"?o=To({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=Xi({inputs:{x:r},backend:n});const l=o.shape.length,u=qe(i,o.shape),c=It(u,l);let h=u,d=o;c!=null&&(d=As({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Pt(h.length,l)),wn("sum",h,d.shape.length);const[f,p]=dn(d.shape,h),m=Vn(d.dtype,"int32");let g=Ey(n,f,m);const y=Y(p),x=n.data.get(g.dataId).values,w=n.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const S=v*y;let N=0;for(let I=0;I<y;++I)N+=w[S+I];x[v]=N}if(a){const v=on(g.shape,u),S=g;g=zt({inputs:{x:g},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(S)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),g}const tee={kernelName:Vp,backendName:"cpu",kernelFunc:dm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nee(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Gb(r,i.length);jb(a.length,l,i);const{path:u,steps:c}=qb(o,l),h=c.length;let d=null,f=a.length;const p=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=Hb(f,l[g]);let w;Xb(y)?w=i[g]:(w=As({inputs:{x:i[g]},backend:n,attrs:{perm:y}}),p.push(w));const v=w.shape.slice();for(let S=0;S<x.length;++S)v.splice(x[S],0,1);Ke(w.shape,v)||(w=zt({inputs:{x:w},backend:n,attrs:{shape:v}}),p.push(w)),d===null?d=w:(d=l0({inputs:{a:w,b:d},backend:n}),p.push(d))}m<h-1&&(u[m]>=0&&(d=dm({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const see={kernelName:kx,backendName:"cpu",kernelFunc:nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ree(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;Te([s,r],"eluGrad");const i=new Float32Array(Y(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const u=a[l];u>=0?i[l]=o[l]:i[l]=o[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",i)}const iee={kernelName:$x,backendName:"cpu",kernelFunc:ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aee=Pb,oee=Mb,lee=Bb,uee=Vb,cee=Ub,hee=Wb,dee=kt(Jc,t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+aee*n);return e*(1-((((hee*s+cee)*s+uee)*s+lee)*s+oee)*s*Math.exp(-n*n))}),fee={kernelName:Jc,backendName:"cpu",kernelFunc:dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dy(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(R(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),zt({inputs:{x:r},backend:n,attrs:{shape:o}})}const pee={kernelName:cp,backendName:"cpu",kernelFunc:Dy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mee=pn((t,e)=>t/e),PC=_n(Qc,mee),_v={kernelName:Qc,backendName:"cpu",kernelFunc:PC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(t,e,n){const s=t.shape,r=s[0],i=s[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=Y(u),h=Rn("float32",c),d=Rn("float32",c);for(let g=0;g<r;g++){const y=Ul({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,i]}}),x=Ul({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,i]}}),w=Bs({inputs:{real:y,imag:x},backend:n}),{real:v,imag:S}=gee(w,e,n),N=fi(v,S);for(let I=0;I<i;I++){const T=aC(N,I);h[g*i+I]=T.real,d[g*i+I]=T.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w)}const f=n.makeTensorInfo(u,"float32",h),p=n.makeTensorInfo(u,"float32",d),m=Bs({inputs:{real:f,imag:p},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}function gee(t,e,n){const s=Y(t.shape),r=n.data.get(t.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(yee(s)){const o=Ov(i,a,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const u=n.makeTensorInfo(l,"float32",o.real),c=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",Do(s,"float32")),d=Xi({inputs:{x:h},backend:n}),f=_v.kernelFunc({inputs:{a:u,b:h},backend:n}),p=_v.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(f.dataId).values,g=n.data.get(p.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),{real:m,imag:g}}return o}else{const o=fi(i,a),l=xee(o,s,e);return JD(l)}}function yee(t){return(t&t-1)===0}function Ov(t,e,n,s,r){if(n===1)return{real:t,imag:e};const i=fi(t,e),a=n/2,o=e_(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),f=Bs({inputs:{real:h,imag:d},backend:r}),p=t_(i),m=p.real,g=p.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),w=r.makeTensorInfo(y,"float32",g),v=Bs({inputs:{real:x,imag:w},backend:r}),S=Ov(l,u,a,s,r),N=S.real,I=S.imag,T=[N.length],A=r.makeTensorInfo(T,"float32",N),D=r.makeTensorInfo(T,"float32",I),O=Bs({inputs:{real:A,imag:D},backend:r}),U=Ov(m,g,a,s,r),B=U.real,q=U.imag,H=[B.length],L=r.makeTensorInfo(H,"float32",B),Z=r.makeTensorInfo(H,"float32",q),K=Bs({inputs:{real:L,imag:Z},backend:r}),ee=s_(n,s),se=[ee.real.length],ie=r.makeTensorInfo(se,"float32",ee.real),ue=r.makeTensorInfo(se,"float32",ee.imag),le=Bs({inputs:{real:ie,imag:ue},backend:r}),de=l0({inputs:{a:le,b:K},backend:r}),he=Sc({inputs:{a:O,b:de},backend:r}),ke=zC({inputs:{a:O,b:de},backend:r}),De=Vl({inputs:{input:he},backend:r}),Le=Vl({inputs:{input:ke},backend:r}),Fe=Cc({inputs:{input:he},backend:r}),Xe=Cc({inputs:{input:ke},backend:r}),He=kc({inputs:[De,Le],backend:r,attrs:{axis:0}}),yt=kc({inputs:[Fe,Xe],backend:r,attrs:{axis:0}}),je=r.data.get(He.dataId).values,nt=r.data.get(yt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(Xe),r.disposeIntermediateTensorInfo(He),r.disposeIntermediateTensorInfo(yt),{real:je,imag:nt}}function xee(t,e,n){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let i=0,a=0;for(let o=0;o<e;o++){const l=r_(r*o,e,n),u=aC(t,o);i+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}n&&(i/=e,a/=e),n_(s,i,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bee(t){const{inputs:e,backend:n}=t,{input:s}=e,r=Y(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=zt({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=Wz(o,!1,n),u=zt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const wee={kernelName:Nx,backendName:"cpu",kernelFunc:bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:i}=n,a=i||Yl(r),o=rn(a,Y(s));return See(o,r,a),e.makeTensorInfo(s,a,o)}const vee={kernelName:Ix,backendName:"cpu",kernelFunc:MC};function See(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cee={kernelName:Tx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,i=Rn(s.dtype,Y(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const f=d*l*o*u;for(let p=0;p<o;p++){const m=p*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let x=0;x<u;x++){const w=Math.round(l-g-1),v=f+m+y+x;let S=c[v];if(w>=0&&w<l){const N=w*u,I=f+m+N+x;S=c[I]}i[v]=S}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let m=Vz({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const g=m;if(c==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const y=zt({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Sc({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=Sc({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(g)}if(f){const g=m;if(c==="NCHW"&&f==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const y=zt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ay(n,m,f,y,p),n.disposeIntermediateTensorInfo(y)}else m=Ay(n,m,f,o,p);n.disposeIntermediateTensorInfo(g)}return m}const $ee={kernelName:mf,backendName:"cpu",kernelFunc:kee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let m=Uz({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=Sc({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(g)}if(f){const g=m;m=Ay(n,m,f,o,p),n.disposeIntermediateTensorInfo(g)}return m}const Iee={kernelName:gf,backendName:"cpu",kernelFunc:Nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tee(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=Y(s.shape),a=r.shape,o=a[a.length-1],[l,u,c,h]=Eb(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(r.dataId).values,f=n.bufferSync(s),p=ZF(d,f,s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,p.values)}const Eee={kernelName:Ex,backendName:"cpu",kernelFunc:Tee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ree(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s;Te([r,i],"gatherV2");const l=qe(a,r.shape)[0],u=n.data.get(i.dataId).values,c=r.shape[l];for(let v=0;v<u.length;++v){const S=u[v];R(S<=c-1&&S>=0,()=>`GatherV2: the index value ${S} is not in [0, ${c-1}]`)}let h=o;o==null&&(h=0);const d=Y(i.shape),f=Yb(r,i,l,h),p=zt({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=zt({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),g=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],y=n.bufferSync(m),x=n.bufferSync(p),w=JF(x,y,g);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(f.outputShape,w.dtype,w.values)}const Aee={kernelName:dp,backendName:"cpu",kernelFunc:Ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dee(t){const{inputs:e,backend:n}=t,{input:s}=e,r=Y(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=zt({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=Wz(o,!0,n),u=zt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const _ee={kernelName:Rx,backendName:"cpu",kernelFunc:Dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee=kt(ah,t=>Number.isFinite(t)?1:0,"bool"),Fee={kernelName:ah,backendName:"cpu",kernelFunc:Oee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zee=kt(oh,t=>Math.abs(t)===1/0?1:0,"bool"),Lee={kernelName:oh,backendName:"cpu",kernelFunc:zee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pee=kt(lh,t=>Number.isNaN(t)?1:0,"bool"),Mee={kernelName:lh,backendName:"cpu",kernelFunc:Pee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bee(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=rz(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const Vee={kernelName:Dx,backendName:"cpu",kernelFunc:Bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uee=kt(ch,t=>Math.log1p(t)),Wee={kernelName:ch,backendName:"cpu",kernelFunc:Uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gee=pn((t,e)=>t&&e),Hee=_n(yp,Gee,null,"bool"),jee={kernelName:yp,backendName:"cpu",kernelFunc:Hee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qee=kt(xp,t=>t?0:1,"bool"),Xee={kernelName:xp,backendName:"cpu",kernelFunc:qee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kee=pn((t,e)=>t||e),Yee=_n(bp,Kee,null,"bool"),Qee={kernelName:bp,backendName:"cpu",kernelFunc:Yee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zee(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;Te(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=Y(r.shape),f=new Float32Array(d);function p(m){const g=m%u;let y=m-g+Math.max(0,g-i);const x=m-g+Math.min(g+i,c);let w=0;for(;y<=x;y++){const v=h[y];w+=v*v}return w}for(let m=0;m<d;m++){const g=p(m),y=h[m]*Math.pow(a+o*g,-l);f[m]=y}return n.makeTensorInfo(r.shape,r.dtype,f)}const Jee={kernelName:wp,backendName:"cpu",kernelFunc:Zee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ete(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Te(a,"LRNGrad");const h=Y(a.shape),d=a.shape[3],f=n.data.get(a.dataId).values,p=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),y=h;for(let x=0;x<y;x++){const w=x%d,v=x-w+Math.max(0,w-o),S=x-w+Math.min(d,w+o+1);let N=0;for(let I=v;I<S;I++)N+=Math.pow(p[I],2);N=u*N+l;for(let I=v;I<S;I++){let T=-2*u*c*p[I]*m[x]/N;x===I&&(T+=Math.pow(N,-c)),T*=f[x],g[I]+=T}}return n.makeTensorInfo(a.shape,r.dtype,g)}const tte={kernelName:_x,backendName:"cpu",kernelFunc:ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,c=qe(i,l);let h=c;const d=It(h,u);let f=o.data.get(r.dataId).values;if(d!=null){const v=new Array(u);for(let S=0;S<v.length;S++)v[S]=l[d[S]];f=OC(f,l,r.dtype,d,v),h=Pt(h.length,u),l=v}Te(r,"max"),wn("max",h,u);const[p,m]=dn(l,h),g=Y(m),y=az(f,g,p,r.dtype),x=o.write(y,p,r.dtype);let w=p;return a&&(w=on(p,c)),{dataId:x,shape:w,dtype:r.dtype}}const nte={kernelName:vp,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ste(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Te(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;R(Dn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=as(r.shape,i,a,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ke(c.inShape,c.outShape))h=Xi({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,f=Re(r.shape),p=LC(d,r.shape,r.dtype,f,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,p.values)}return h}const rte={kernelName:Sp,backendName:"cpu",kernelFunc:ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ite(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;Te(r,"maxPool3d");const c=pr(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=Bz(h,r.shape,r.dtype,Re(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const ate={kernelName:Cp,backendName:"cpu",kernelFunc:ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ote(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;Te([r,i],"maxPool3DGrad");const c=pr(i.shape,a,o,1,l,u),h=n.bufferSync(i),d=KZ(h,c),f=c.strideDepth,p=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,S=c.effectiveFilterWidth,N=w-1-c.padInfo.front,I=S-1-c.padInfo.left,T=v-1-c.padInfo.top,A=Ge(i.shape,"float32"),D=n.bufferSync(r);for(let O=0;O<c.batchSize;++O)for(let U=0;U<c.inChannels;++U)for(let B=0;B<c.inDepth;++B)for(let q=0;q<c.inHeight;++q)for(let H=0;H<c.inWidth;++H){const L=B-N,Z=q-T,K=H-I;let ee=0;for(let se=0;se<w;se+=g){const ie=(L+se)/f;if(!(ie<0||ie>=c.outDepth||Math.floor(ie)!==ie))for(let ue=0;ue<v;ue+=y){const le=(Z+ue)/p;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let de=0;de<S;de+=x){const he=(K+de)/m;if(he<0||he>=c.outWidth||Math.floor(he)!==he)continue;const ke=w*v*S-1-d.get(O,ie,le,he,U),De=se*v*S+ue*S+de,Le=ke===De?1:0;if(Le===0)continue;const Fe=D.get(O,ie,le,he,U);ee+=Fe*Le}}}A.set(ee,O,B,q,H,U)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}const lte={kernelName:Fx,backendName:"cpu",kernelFunc:ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ute(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;Te([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=as(o.shape,l,u,1,c,h),f=n.data.get(o.dataId).values,p=Ge(d.outShape,o.dtype,Mz(f,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,S=v-1-d.padInfo.left,N=w-1-d.padInfo.top,I=Ge(o.shape,"float32"),T=n.data.get(r.dataId).values,A=Ge(r.shape,"float32",T);for(let D=0;D<d.batchSize;++D)for(let O=0;O<d.inChannels;++O)for(let U=0;U<d.inHeight;++U)for(let B=0;B<d.inWidth;++B){const q=U-N,H=B-S;let L=0;for(let Z=0;Z<w;Z+=y){const K=(q+Z)/m;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let ee=0;ee<v;ee+=x){const se=(H+ee)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;const ie=w*v-1-p.get(D,K,se,O),ue=Z*v+ee,le=ie===ue?1:0;if(le===0)continue;const de=A.get(D,K,se,O);L+=de*le}}I.set(L,D,U,B,O)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const cte={kernelName:Ox,backendName:"cpu",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hte(t,e,n,s,r){const i=Re(e),a=LC(t,e,n,i,r,"max"),o=Mz(t,e,n,r,!0,s);return[a.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dte={kernelName:zx,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Te(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=as(s.shape,r,i,[1,1],a),[h,d]=hte(u,s.shape,s.dtype,o,c),f=l.write(h,c.outShape,s.dtype),p=l.write(d,c.outShape,s.dtype);return[{dataId:f,shape:c.outShape,dtype:s.dtype},{dataId:p,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=qe(i,r.shape),u=dn(r.shape,o)[1],c=Y(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const f=To({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(f);const p=PC({inputs:{a:f,b:d},backend:n});h.push(p);const m=dm({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:a}});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const pte={kernelName:kp,backendName:"cpu",kernelFunc:fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;Te(r,"min");const o=qe(i,r.shape);let l=o;const u=It(l,r.shape.length);let c=r;u!=null&&(c=As({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Pt(l.length,r.shape.length)),wn("min",l,c.shape.length);const[h,d]=dn(c.shape,l),f=Y(d),p=Kn(Y(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const x=y*f;let w=m[x];for(let v=0;v<f;++v){const S=m[x+v];(Number.isNaN(S)||S<w)&&(w=S)}p[y]=w}u!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,p);if(a){const y=on(h,o),x=zt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}const gte={kernelName:$p,backendName:"cpu",kernelFunc:mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,mode:a}=s;Te(r,"mirrorPad");const o=i.map((w,v)=>w[0]+r.shape[v]+w[1]),l=i.map(w=>w[0]),u=i.map((w,v)=>w[0]+r.shape[v]),c=a==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,f=Re(r.shape),p=Y(o),m=o.length,g=Re(o),y=Rn(r.dtype,p);for(let w=0;w<p;w++){let v=Pc(w,m,g);for(let N=0;N<m;N++)v[N]<l[N]?v[N]=l[N]*2-v[N]-c:v[N]>=u[N]&&(v[N]=(u[N]-1)*2-v[N]+c);v=v.map((N,I)=>N-l[I]);const S=Vi(v,d,f);y[w]=h[S]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}const xte={kernelName:Np,backendName:"cpu",kernelFunc:yte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bte=pn((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),wte=_n(fh,bte),vte={kernelName:fh,backendName:"cpu",kernelFunc:wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=r.shape.length;let o=i;if(o===-1&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=qe([o],r.shape),u=Gz({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=on(u.shape,l),h=zt({inputs:{x:u},backend:n,attrs:{shape:c}}),d=zC({inputs:{a:r,b:h},backend:n}),f=XF({inputs:{x:d},backend:n}),p=dm({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),m=zt({inputs:{x:p},backend:n,attrs:{shape:c}}),g=PC({inputs:{a:f,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const Ste={kernelName:Gp,backendName:"cpu",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cte(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s;Te(r,"multinomial");const l=o?r:Hz({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],f=Kn(Y(d),"int32");for(let p=0;p<u;++p){const m=p*c,g=new Float32Array(c-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const y=yb.alea(a.toString()),x=p*i;for(let w=0;w<i;++w){const v=y();f[x+w]=g.length;for(let S=0;S<g.length;S++)if(v<g[S]){f[x+w]=S;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",f)}const kte={kernelName:Lx,backendName:"cpu",kernelFunc:Cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $te=Ib;function Nte(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;Te(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=$te(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Ite={kernelName:Px,backendName:"cpu",kernelFunc:Nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=QS;function Ete(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Te(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:f}=Tte(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const Rte={kernelName:Q2,backendName:"cpu",kernelFunc:Ete};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ate=Tb;function Dte(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Te(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=a,f=o,p=l,m=u,{selectedIndices:g,selectedScores:y}=Ate(c,h,d,f,p,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const _te={kernelName:Mx,backendName:"cpu",kernelFunc:Dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s;Te(r,"oneHot");const u=Y(r.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...r.shape,a],i,c)}const Fte={kernelName:Rp,backendName:"cpu",kernelFunc:Ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _y(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Vl({inputs:{input:s},backend:n}),i=_y({inputs:{x:r},backend:n}),a=Cc({inputs:{input:s},backend:n}),o=_y({inputs:{x:a},backend:n}),l=Bs({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}else return MC({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const zte={kernelName:qp,backendName:"cpu",kernelFunc:_y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Vl({inputs:{input:s},backend:n}),i=jz({inputs:{x:r},backend:n}),a=Cc({inputs:{input:s},backend:n}),o=_y({inputs:{x:a},backend:n}),l=Bs({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}else return MC({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const Lte={kernelName:Ep,backendName:"cpu",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return Dy({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{_s(i,c.shape,"All tensors passed to stack must have matching shapes"),R(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=Dy({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),u=kc({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Pte={kernelName:Ap,backendName:"cpu",kernelFunc:qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mte(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;Te(r,"pad");const o=i.map((x,w)=>x[0]+r.shape[w]+x[1]),l=i.map(x=>x[0]),u=n.data.get(r.dataId).values,c=Y(r.shape),h=r.shape.length,d=Re(r.shape),f=Y(o),p=o.length,m=Re(o),g=Rn(r.dtype,f);a!==0&&g.fill(a);for(let x=0;x<c;x++){const v=Pc(x,h,d).map((N,I)=>N+l[I]),S=Vi(v,p,m);g[S]=u[x]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}const Xz={kernelName:Dp,backendName:"cpu",kernelFunc:Mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bte=pn((t,e)=>Math.pow(t,e)),Vte=_n(mh,Bte),Ute={kernelName:mh,backendName:"cpu",kernelFunc:Vte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wte(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map(y=>n.data.get(y.dataId).values),u=r.map(y=>y.shape),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,f,p]=dz(l,u,c,i.shape,i.dtype,h,a.shape),m=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(p,i.dtype,f);return m.concat([g])}const Gte={kernelName:Z2,backendName:"cpu",kernelFunc:Wte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hte(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:i}=e,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=fz(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const jte={kernelName:J2,backendName:"cpu",kernelFunc:Hte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qte(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map(g=>n.data.get(g.dataId).values),f=o.map(g=>g.shape),[p,m]=pz(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,f,l);return n.makeTensorInfo(p,i.dtype,m)}const Xte={kernelName:eS,backendName:"cpu",kernelFunc:qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kte(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:i,step:a}=n,o=mz(s,r,a,i);return e.makeTensorInfo([o.length],i,o)}const Yte={kernelName:Bx,backendName:"cpu",kernelFunc:Kte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qte=kt(gh,t=>1/t),Zte={kernelName:gh,backendName:"cpu",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jte(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Te(r,"resizeBilinear");const l=Re(r.shape),[u,c]=o,[h,d,f,p]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(Y([h,u,c,p])),y=[i&&u>1?d-1:d,i&&c>1?f-1:f],x=[i&&u>1?u-1:u,i&&c>1?c-1:c];let w=0;const v=y[0]/x[0],S=y[1]/x[1];for(let N=0;N<h;N++)for(let I=0;I<u;I++){let T;a?T=v*(I+.5)-.5:T=v*I;const A=Math.max(0,Math.floor(T)),D=T-A,O=Math.min(d-1,Math.ceil(T)),U=N*l[0]+A*l[1],B=N*l[0]+O*l[1];for(let q=0;q<c;q++){let H;a?H=S*(q+.5)-.5:H=S*q;const L=Math.max(0,Math.floor(H)),Z=H-L,K=Math.min(f-1,Math.ceil(H)),ee=U+L*l[2],se=B+L*l[2],ie=U+K*l[2],ue=B+K*l[2];for(let le=0;le<p;le++){const de=m[ee+le],he=m[se+le],ke=m[ie+le],De=m[ue+le],Le=de+(ke-de)*Z,Fe=he+(De-he)*Z,Xe=Le+(Fe-Le)*D;g[w++]=Xe}}}return n.makeTensorInfo([h,u,c,p],"float32",g)}const ene={kernelName:Lp,backendName:"cpu",kernelFunc:Jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tne(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;Te([i,r],"resizeBilinearGrad");const o=Re(r.shape),[l,u,c,h]=r.shape,[,d,f]=i.shape,p=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&f>1?c-1:c],g=[a&&d>1?d-1:d,a&&f>1?f-1:f],y=m[0]/g[0],x=m[1]/g[1],w=n.data.get(i.dataId).values;let v=0;for(let S=0;S<l;S++){const N=S*o[0];for(let I=0;I<d;I++){const T=I*y,A=Math.floor(T),D=Math.min(Math.ceil(T),u-1),O=N+A*o[1],U=N+D*o[1],B=T-A,q=1-B;for(let H=0;H<f;H++){const L=H*x,Z=Math.floor(L),K=Math.min(Math.ceil(L),c-1),ee=L-Z,se=1-ee,ie=O+Z*o[2],ue=O+K*o[2],le=U+Z*o[2],de=U+K*o[2],he=q*se,ke=q*ee,De=B*se,Le=B*ee;for(let Fe=0;Fe<h;Fe++){const Xe=w[v++];p[ie+Fe]+=Xe*he,p[ue+Fe]+=Xe*ke,p[le+Fe]+=Xe*De,p[de+Fe]+=Xe*Le}}}}return n.makeTensorInfo([l,c,u,h],"float32",p)}const nne={kernelName:Wx,backendName:"cpu",kernelFunc:tne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sne(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Te(r,"resizeNearestNeighbor");const l=Re(r.shape),[u,c]=o,[h,d,f,p]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*p),y=[i&&u>1?d-1:d,i&&c>1?f-1:f],x=[i&&u>1?u-1:u,i&&c>1?c-1:c],w=y[0]/x[0],v=y[1]/x[1];let S=0;for(let N=0;N<h;N++){const I=N*l[0];for(let T=0;T<u;T++){const A=a?w*(T+.5):w*T;let D=Math.min(d-1,i?Math.round(A):Math.floor(A));a&&(D=Math.max(0,D));const O=I+D*l[1];for(let U=0;U<c;U++){const B=a?v*(U+.5):v*U;let q=Math.min(f-1,i?Math.round(B):Math.floor(B));a&&(q=Math.max(0,q));const H=O+q*l[2];for(let L=0;L<p;L++){const Z=m[H+L];g[S++]=Z}}}}return n.makeTensorInfo([h,u,c,p],r.dtype,g)}const rne={kernelName:zp,backendName:"cpu",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ine(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s;Te([i,r],"resizeNearestNeighborGrad");const o=Re(r.shape),l=Re(i.shape),[u,c,h,d]=r.shape,[,f,p]=i.shape,m=new Float32Array(u*c*h*d),g=n.data.get(i.dataId).values,y=[a&&f>1?c-1:c,a&&p>1?h-1:h],x=[a&&f>1?f-1:f,a&&p>1?p-1:p],w=y[0]/x[0],v=y[1]/x[1],S=1/w,N=1/v,I=Math.ceil(S)*2+2,T=Math.ceil(N)*2+2;for(let A=0;A<u;A++){const D=A*o[0];for(let O=0;O<c;O++){const U=D+O*o[1],B=Math.floor(O*S),q=Math.floor(B-I/2);for(let H=0;H<h;H++){const L=U+H*o[2],Z=Math.floor(H*N),K=Math.floor(Z-T/2);for(let ee=0;ee<d;ee++){let se=0;for(let ie=0;ie<I;ie++){const ue=ie+q;if(ue<0||ue>=f)continue;const le=D+ue*l[1],de=ue*w,he=Math.min(c-1,a?Math.round(de):Math.floor(de));if(O===he)for(let ke=0;ke<T;ke++){const De=ke+K;if(De<0||De>=p)continue;const Le=le+De*l[2],Fe=De*v,Xe=Math.min(h-1,a?Math.round(Fe):Math.floor(Fe));H===Xe&&(se+=g[Le+ee])}}m[L+ee]=se}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}const ane={kernelName:Ux,backendName:"cpu",kernelFunc:ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function one(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s;Te(r,"reverse");const a=r.shape.length,o=qe(i,r.shape);if(a===0)return Xi({inputs:{x:r},backend:n});const l=new In(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();o.forEach(f=>d[f]=r.shape[f]-1-d[f]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const lne={kernelName:Pp,backendName:"cpu",kernelFunc:one};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const une={kernelName:nb,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=Rn(s.dtype,Y(s.shape)),[u,c,h,d]=s.shape,[f,p]=Fb(a,c,h),m=255,g=Math.sin(r),y=Math.cos(r),x=o.data.get(s.dataId).values;for(let v=0;v<u;v++){const S=v*h*c*d;for(let N=0;N<c;N++){const I=N*(h*d);for(let T=0;T<h;T++){const A=T*d;for(let D=0;D<d;D++){const O=[u,N,T,D],U=O[2],B=O[1];let q=(U-f)*y-(B-p)*g,H=(U-f)*g+(B-p)*y;q=Math.round(q+f),H=Math.round(H+p);let L=i;if(typeof i!="number"&&(D===3?L=m:L=i[D]),q>=0&&q<h&&H>=0&&H<c){const K=H*(h*d),ee=q*d,se=S+K+ee+D;L=x[se]}const Z=S+I+A+D;l[Z]=L}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cne=kt(bh,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),hne={kernelName:bh,backendName:"cpu",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dne(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ta(i,r,a),d=!0,f=n.bufferSync(r),p=n.bufferSync(i),m=ul(f,p,a,h,u,l,o,c,0,d);return n.makeTensorInfo(a,m.dtype,m.values)}const fne={kernelName:Gx,backendName:"cpu",kernelFunc:dne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pne(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<e?n=r+1:s=r;return s}function mne(t,e){let n=0,s=t.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),t[r]<=e?n=r+1:s=r;return s}function gne(t,e,n,s,r,i){const a=rn("int32",n*r);for(let o=0;o<n;++o){const l=t.slice(o*s,(o+1)*s),u=o*r;for(let c=0;c<r;++c)a[u+c]=i==="left"?pne(l,e[c+u]):mne(l,e[c+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yne(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:i}=e,{side:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=gne(o,l,r.shape[0],r.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",u)}const xne={kernelName:jx,backendName:"cpu",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bne(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e;Te([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=Vn(r.dtype,i.dtype),h=Kn(Y(r.shape),c);let d=0;const f=a===0||a>1||r.shape.length===1?1:Y(r.shape.slice(1));for(let p=0;p<o.length;p++)for(let m=0;m<f;m++)o[p]===1?h[d++]=l[p]:h[d++]=u[p];return n.makeTensorInfo(r.shape,c,h)}const wne={kernelName:Mp,backendName:"cpu",kernelFunc:bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne=nm,Sne=sm,Cne=kt(vh,t=>t>=0?Sne*t:vne*(Math.exp(t)-1)),kne={kernelName:vh,backendName:"cpu",kernelFunc:Cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ne=kt(kh,t=>t<0?-1:t>0?1:0),Nne={kernelName:kh,backendName:"cpu",kernelFunc:$ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ine=kt(Sh,t=>Math.sin(t)),Tne={kernelName:Sh,backendName:"cpu",kernelFunc:Ine};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ene=kt(Ch,t=>Math.sinh(t)),Rne={kernelName:Ch,backendName:"cpu",kernelFunc:Ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ane=11920928955078125e-23,vI=Math.log(Ane)+2,Dne=kt(Nh,t=>{const e=t>-vI,n=t<vI,s=Math.exp(t);let r;return n?r=s:e?r=t:r=Math.log(1+s),r}),_ne={kernelName:Nh,backendName:"cpu",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function One(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;Te([r],"spaceToBatchND");const o=Y(i),l=[[0,0]];l.push(...a);for(let N=1+i.length;N<r.shape.length;++N)l.push([0,0]);const u=Xz.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=su(u.shape,i,o,!1),h=ru(c.length,i.length,!1),d=iu(u.shape,i,o,!1),m=zt({inputs:{x:u},backend:n,attrs:{shape:c}}),x=As({inputs:{x:m},backend:n,attrs:{perm:h}}),S=zt({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),S}const Fne={kernelName:Up,backendName:"cpu",kernelFunc:One};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zne(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,f,p,m]=bz(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Lne={kernelName:tS,backendName:"cpu",kernelFunc:zne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=wz(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const Mne={kernelName:nS,backendName:"cpu",kernelFunc:Pne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bne(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=FC(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const Vne={kernelName:qx,backendName:"cpu",kernelFunc:Bne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Une(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=FC(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const Wne={kernelName:Xx,backendName:"cpu",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gne(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ta(i,r,o),f=!1,p=n.bufferSync(r);let m;switch(i.dtype){case"bool":{const g=n.bufferSync(i),y=!!n.data.get(a.dataId).values[0];m=ul(p,g,o,d,c,u,l,h,y,f);break}case"float32":{const g=n.bufferSync(i),y=n.data.get(a.dataId).values[0];m=ul(p,g,o,d,c,u,l,h,y,f);break}case"int32":{const g=n.bufferSync(i),y=n.data.get(a.dataId).values[0];m=ul(p,g,o,d,c,u,l,h,y,f);break}case"string":{const g=n.bufferSync(i),y=ci(n.data.get(a.dataId).values[0]);m=ul(p,g,o,d,c,u,l,h,y,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}const Hne={kernelName:Kx,backendName:"cpu",kernelFunc:Gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jne(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=qe(a,r.shape)[0],l=Kb(r,i,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[o]=h;const f=Ul({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[o]+=h,f})}const qne={kernelName:Wp,backendName:"cpu",kernelFunc:jne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xne={kernelName:Yx,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Te(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let o=0;o<r.length;++o){const l=r[o];i[o]=l*l}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kne=kt(_h,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),Yne={kernelName:_h,backendName:"cpu",kernelFunc:Kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qne(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Te(r,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:v}=Db(r.shape,i,a,o,l,u,c,h,d);let S;if(m)S=zt({inputs:{x:r},backend:n,attrs:{shape:p}});else if(g||y){R(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=Ab(x,w,v),I=Ul({inputs:{x:r},backend:n,attrs:{begin:x,size:N}});S=zt({inputs:{x:I},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(I)}else{const N=n.bufferSync(r),I=Cz(f,N,v,x);S=n.makeTensorInfo(p,I.dtype,I.values)}return S}const Zne={kernelName:Zx,backendName:"cpu",kernelFunc:Qne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jne(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,f=n.data.get(h.dataId).values,[p,m]=kz(d,f,r,i,a,o,l,u);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}const ese={kernelName:Jx,backendName:"cpu",kernelFunc:Jne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=$z(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const nse={kernelName:sS,backendName:"cpu",kernelFunc:tse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sse(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(i.dataId).values,o=Nz(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const rse={kernelName:rS,backendName:"cpu",kernelFunc:sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ise=kt(Rh,t=>Math.tan(t)),ase={kernelName:Rh,backendName:"cpu",kernelFunc:ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ose=kt(Ah,t=>Math.tanh(t)),lse={kernelName:Ah,backendName:"cpu",kernelFunc:ose};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(t){const{inputs:e,backend:n}=t,{tensor:s,indices:r,updates:i}=e,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=ta(i,r,s.shape),h=!1,d=n.bufferSync(r),f=n.bufferSync(i),p=n.bufferSync(s),m=ul(d,f,s.shape,c,l,o,a,u,p,h);return n.makeTensorInfo(s.shape,m.dtype,m.values)}const cse={kernelName:Hx,backendName:"cpu",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;Te(r,"tile");const a=Tz(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const dse={kernelName:Dh,backendName:"cpu",kernelFunc:hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fse(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s;Te(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=Rz(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const pse={kernelName:eb,backendName:"cpu",kernelFunc:fse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mse(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,f]=r.shape,[p,m]=u??[h,d],g=[c,p,m,f],y=Re(r.shape),x=y[0],w=y[1],v=y[2],S=Re(g),N=S[0],I=S[1],T=S[2],A=Rn(r.dtype,Y(g));A.fill(l);const D=s.data.get(r.dataId).values,O=s.data.get(i.dataId).values;for(let B=0;B<c;++B){const q=i.shape[0]===1?O:O.subarray(B*8,B*8+8);for(let H=0;H<p;++H)for(let L=0;L<m;++L)for(let Z=0;Z<f;++Z){let K;const ee=q[6]*L+q[7]*H+1;if(ee===0)continue;const se=(q[0]*L+q[1]*H+q[2])/ee,ie=(q[3]*L+q[4]*H+q[5])/ee,ue=SI(se,d,o),le=SI(ie,h,o);switch(a){case"nearest":K=vse(D,h,d,x,w,v,B,le,ue,Z,l);break;case"bilinear":K=Sse(D,h,d,x,w,v,B,le,ue,Z,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const de=B*N+H*I+L*T+Z;A[de]=K}return s.makeTensorInfo(g,r.dtype,A)}return{dataId:s.write(A,g,r.dtype),shape:r.shape,dtype:r.dtype}}const gse={kernelName:tb,backendName:"cpu",kernelFunc:mse};function SI(t,e,n){switch(n){case"reflect":return yse(t,e);case"wrap":return xse(t,e);case"nearest":return wse(t,e);case"constant":default:return bse(t)}}function yse(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=2*e;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-e?n+s:-n-1}else if(n>e-1)if(e<=1)n=0;else{const s=2*e;n-=s*Math.trunc(n/s),n>=e&&(n=s-n-1)}return El(0,n,e-1)}function xse(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const s=e-1;n+=e*(Math.trunc(-n/s)+1)}else if(n>e-1)if(e<=1)n=0;else{const s=e-1;n-=e*Math.trunc(n/s)}return El(0,n,e-1)}function bse(t,e){return t}function wse(t,e){return El(0,t,e-1)}function Ed(t,e,n,s,r,i,a,o,l,u,c){const h=a*s+o*r+l*i+u;return 0<=o&&o<e&&0<=l&&l<n?t[h]:c}function vse(t,e,n,s,r,i,a,o,l,u,c){const h=Math.round(o),d=Math.round(l);return Ed(t,e,n,s,r,i,a,h,d,u,c)}function Sse(t,e,n,s,r,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),f=h+1,p=d+1,m=(p-l)*Ed(t,e,n,s,r,i,a,h,d,u,c)+(l-d)*Ed(t,e,n,s,r,i,a,h,p,u,c),g=(p-l)*Ed(t,e,n,s,r,i,a,f,d,u,c)+(l-d)*Ed(t,e,n,s,r,i,a,f,p,u,c);return(f-o)*m+(o-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cse(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;Te(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=Az(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const kse={kernelName:iS,backendName:"cpu",kernelFunc:Cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $se(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let f=0;f<a;f++)f!==i&&(l[u++]=r.shape[f]);const c=new Array(a).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(o);for(let f=0;f<d.length;f++){c[i]=f;const p=Ul({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[f]=zt({inputs:{x:p},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(p)}return d}const Nse={kernelName:Hp,backendName:"cpu",kernelFunc:$se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ise(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s;Te(r,"unsortedSegmentSum");const o=r.shape.length,l=i.shape.length,u=[],c=[],h=o-l;let d=i;for(let p=0;p<h;++p){const m=Dy({inputs:{input:d},backend:n,attrs:{dim:p+1}});d=m,c.push(m)}for(let p=0;p<a;++p){const m=Do(p,"int32"),g=n.makeTensorInfo([],"int32",m),y=jF({inputs:{a:g,b:d},backend:n}),x=To({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),w=l0({inputs:{a:x,b:r},backend:n}),v=dm({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),c.push(g),c.push(y),c.push(x),c.push(w),c.push(v)}const f=qz({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(p=>n.disposeIntermediateTensorInfo(p)),f}const Tse={kernelName:jp,backendName:"cpu",kernelFunc:Ise};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ese=[CZ,rQ,$Z,IZ,cQ,EZ,AZ,_Z,FZ,LZ,MZ,VZ,WZ,jZ,XZ,QZ,JZ,tJ,sJ,vZ,iJ,oJ,uJ,dQ,hJ,lQ,pQ,fJ,iQ,mJ,yJ,xJ,wJ,SJ,kJ,NJ,TJ,RJ,DJ,OJ,zJ,PJ,BJ,UJ,WJ,HJ,qJ,KJ,YJ,QJ,ZJ,eee,see,pZ,iee,mQ,fee,gQ,pee,xQ,wee,vee,Cee,wQ,SQ,$ee,Iee,Eee,Aee,kQ,NQ,aQ,_ee,gJ,Fee,Lee,Mee,mZ,TQ,RQ,Vee,DQ,Wee,jee,Xee,Qee,Jee,tte,nte,OQ,rte,ate,lte,cte,dte,pte,gte,zQ,xte,vte,kte,PQ,BQ,Ite,Rte,_te,UQ,Fte,Lte,Pte,Xz,Ute,yZ,HQ,Gte,jte,Xte,Yte,oQ,_v,Zte,xZ,bZ,wZ,ene,nne,rne,ane,lne,une,hne,JQ,fne,xne,wne,kne,tZ,Nne,Tne,Rne,nZ,Ste,_ne,Fne,Lne,Mne,Vne,Wne,Hne,qne,iZ,Xne,oZ,uZ,Yne,Zne,ese,nse,rse,fZ,tee,ase,lse,cse,dse,pse,gse,WQ,kse,Nse,Tse,zte];for(const t of Ese)aS(t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sl={},tg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Rse(t,e){sl[t]=e}function yi(t,e){if(!(t in sl)||e!=null){const s=Dse(t,e);if(s!==null)sl[t]=s;else return console.log("Could not get context for WebGL version",t),null}const n=sl[t];return n==null||n.isContextLost()?(delete sl[t],yi(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),sl[t])}function Ase(t){if(!J().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Dse(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??Ase(t);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete sl[t]},!1),J().getBool("SOFTWARE_WEBGL_ENABLED")&&(tg.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",tg)||n.getContext("experimental-webgl",tg):n.getContext("webgl2",tg)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tf;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(Tf||(Tf={}));var ir;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(ir||(ir={}));var jn;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(jn||(jn={}));function fm(t,e){return[e,t]}function _se(t,e){return t*e}function ng(t){const e=Y(t),n=Math.ceil(e/4);return Ww(n)}function Bh(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Ose(t,e){const[n,s]=Bh(t,e);return n*s*4}function BC(t,e){const n=t;let s,r,i,a,o,l,u,c,h,d;return J().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=t.RGBA,r=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(t,e){const n=e();return J().getBool("DEBUG")&&Fse(t),n}function Fse(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+Mse(t,e))}const zse=596e-10,Lse=65504;function Pse(t){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||zse<Math.abs(t)&&Math.abs(t)<Lse)}function Mse(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function sg(t,e){return Fa(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Bse(t,e){const n=Fa(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ce(t,()=>t.shaderSource(n,e)),Ce(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Vse(t,e){const n=Fa(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ce(t,()=>t.shaderSource(n,e)),Ce(t,()=>t.compileShader(n)),J().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw Kz(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Use=/ERROR: [0-9]+:([0-9]+):/g;function Kz(t,e){const n=Use.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const s=+n[1],r=t.split(`
`),i=r.length.toString().length+2,a=r.map((h,d)=>ec((d+1).toString(),i)+h);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${ec(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function Wse(t){return Fa(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function Gse(t,e){if(Ce(t,()=>t.linkProgram(e)),!J().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function D1(t,e){if(Ce(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Hse(t,e){const n=Fa(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ce(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function jse(t,e){const n=Fa(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Ce(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function qse(t){return Fa(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function Xse(t,e){const n=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const s=`[${t}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(t>n||e>n){const s=`[${t}x${e}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function Kse(t){return Fa(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function CI(t,e,n,s,r,i,a){const o=t.getAttribLocation(e,n);return o===-1?!1:(Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),Ce(t,()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,i,a)),Ce(t,()=>t.enableVertexAttribArray(o)),!0)}function Yse(t,e,n){tre(t,n),Ce(t,()=>t.activeTexture(t.TEXTURE0+n)),Ce(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function Qse(t,e,n){return Fa(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function Zse(t,e,n){return t.getUniformLocation(e,n)}function Jse(t,e,n,s){Ce(t,()=>Yse(t,e,s)),Ce(t,()=>t.uniform1i(n,s))}function _1(t,e,n){Ce(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Ce(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function kI(t,e){Ce(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Ce(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function rg(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ere(t,e))}function ere(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Fa(t,e,n){const s=Ce(t,()=>e());if(s==null)throw new Error(n);return s}function tre(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n){const r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function $c(t,e=2){return Y(t.slice(0,t.length-e))}function Nc(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function ig(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[$c(t),...Nc(t)]),e}function nre(t,e=!1){let n=J().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=J().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&J().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),e&&(n=n*2,s=s*2,t=t.map((o,l)=>l>=t.length-2?H2(t[l]):t[l]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Ao(t).newShape);let r=Y(t),i=null;t.length<=1&&r<=n?i=[1,r]:t.length===2&&t[0]<=n&&t[1]<=n?i=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?i=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?i=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?i=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(i=[t[0],t[1]*t[2]*t[3]]);const a=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||a)if(e){const o=$c(t);let l=2,u=2;t.length&&([l,u]=Nc(t)),r=o*(l/2)*(u/2),i=Ww(r).map(c=>c*2)}else i=Ww(r);return i}function ag(t){return t%2===0}function Oy(t,e){if(t=t.slice(-2),e=e.slice(-2),Ke(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],s=e[e.length-1];if(n===s||ag(n)&&ag(s)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&ag(t[0])&&ag(e[0])}let O1,F1;function sre(t){if(O1==null){const e=yi(t);O1=e.getParameter(e.MAX_TEXTURE_SIZE)}return O1}function rre(t){if(F1==null){const e=yi(t);F1=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,F1)}function ire(t){if(t===0)return 0;let e;const n=yi(t);return Vr(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:Vr(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function Vr(t,e){return t.getExtension(e)!=null}function $I(t){try{if(yi(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function are(t){if(t===0)return!1;const e=yi(t);if(t===1){if(!Vr(e,"OES_texture_float"))return!1}else if(!Vr(e,"EXT_color_buffer_float"))return!1;return Fv(e)}function ore(t){if(t===0)return!1;const e=yi(t);if(t===1){if(!Vr(e,"OES_texture_float")||!Vr(e,"WEBGL_color_buffer_float"))return!1}else{if(Vr(e,"EXT_color_buffer_float"))return Fv(e);const s="EXT_color_buffer_half_float";if(Vr(e,s)){const r=e.getExtension(s);return lre(e,r)}return!1}return Fv(e)}function Fv(t){const e=BC(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(i),a}function lre(t,e){const n=BC(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(a),o}function ure(t){return t!==2?!1:yi(t).fenceSync!=null}function pm(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&R(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ee=J();Ee.registerFlag("HAS_WEBGL",()=>Ee.getNumber("WEBGL_VERSION")>0);Ee.registerFlag("WEBGL_VERSION",()=>$I(2)?2:$I(1)?1:0);Ee.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ee.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ee.get("WEBGL_VERSION")===2);Ee.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ee.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ee.registerFlag("WEBGL_PACK",()=>Ee.getBool("HAS_WEBGL"));Ee.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_CLIP",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_REDUCE",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_CONV_IM2COL",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ee.getBool("WEBGL_PACK"));Ee.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>sre(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>rre(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Ee.getNumber("WEBGL_VERSION");return t===0?0:ire(t)});Ee.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ee.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!n3());Ee.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>are(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ee.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ee.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ee.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ore(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_FENCE_API_ENABLED",()=>ure(Ee.getNumber("WEBGL_VERSION")));Ee.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ee.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ee.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});Ee.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>n3()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});Ee.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ee.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ee.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ee.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ee.registerFlag("WEBGL_EXP_CONV",()=>!1);Ee.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ee.getBool("IS_TEST"));Ee.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ee.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ee.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ee.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(){let t,e,n,s,r,i,a,o,l,u;return J().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=J().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(t,e,n="index"){const s=Re(e);return s.map((r,i)=>{const a=`int ${t[i]} = ${n} / ${r}`,o=i===s.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${r}`:`index -= ${t[i]} * ${r}`;return`${a}; ${o};`}).join("")}function u0(t,e,n="index"){const s=Re(e);return s.map((r,i)=>{const a=`int ${t[i]} = ${n} / outShapeStrides[${i}]`,o=i===s.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * outShapeStrides[${i}]`:`index -= ${t[i]} * outShapeStrides[${i}]`;return`${a}; ${o};`}).join("")}function cre(t,e){const n=t.length,s=t.map(i=>`${e}[${i}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function hre(t,e,n="index"){const s=t.map((i,a)=>a),r=cre(s,e);return r.map((i,a)=>{const o=`int ${t[a]} = ${n} / ${r[a]}`,l=a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${r[a]}`:`index -= ${t[a]} * ${r[a]}`;return`${o}; ${l};`}).join("")}function VC(t){const e=Re(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function UC(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Yz=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Qz}=Eq;function dre(t,e,n){const s=[];if(t.forEach(f=>{const p=Y(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),n.enableShapeUniforms){const{uniformShape:m}=WC(n.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const r=s.join(`
`),i=t.map(f=>fre(f,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),a=e.texShape,o=ws(),l=gre(o);let u,c,h=bre(o);return e.isPacked?(u=pre(e.logicalShape,a,n.enableShapeUniforms),c=xre(o)):(u=mre(e.logicalShape,a,n.enableShapeUniforms),c=yre(o)),n.packedInputs&&(h+=Cre),[h,l,c,r,u,i,n.userCode].join(`
`)}function Vh(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return Fre(t,e);case 1:return Lre(t,e);case 2:return Mre(t,e);case 3:return Vre(t,e);case 4:return Wre(t,e);case 5:return Gre(t);case 6:return Hre(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Zz(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return Ore(t);case 1:return zre(t,e);case 2:return Pre(t,e);case 3:return Bre(t,e);default:return Ure(t,e)}}function fre(t,e,n=!1,s){let r="";n?r+=Zz(t,s):r+=Vh(t,s);const i=t.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(n?r+=jre(t,e):r+=qre(t,e)),r}function pre(t,e,n){switch(t.length){case 0:return Jz();case 1:return kre(t,e,n);case 2:return Dre(t,e,n);case 3:return Nre(t,e,n);default:return Tre(t,e,n)}}function mre(t,e,n){switch(t.length){case 0:return Jz();case 1:return $re(t,e,n);case 2:return _re(t,e,n);case 3:return Ire(t,e,n);case 4:return Ere(t,e,n);case 5:return Rre(t,e);case 6:return Are(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function gre(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function yre(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function xre(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function bre(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${wre}
    ${vre}
    ${Sre}
  `}const wre=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vre=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Sre=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Cre=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Jz(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function kre(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function $re(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Nre(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),i=r*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Ire(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${u0(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const s=lu(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Tre(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),i=r*Math.ceil(t[t.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<t.length-1;u++)a*=t[t.length-u-1],o=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+o,l=`b${u}, `+l;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${t.length}(${l});
    }
  `}function Ere(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${u0(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const s=lu(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Rre(t,e){const n=lu(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Are(t,e){const n=lu(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Dre(t,e,n){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ke(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function _re(t,e,n){return Ke(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function uu(t){return`offset${t}`}function Ore(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=ws();return`
    vec4 ${n}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function Fre(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=t.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=uu(n);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});
      return sampleTexture(${n}, uv);
    }
  `;const[o,l]=t.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${a});
      return sampleTexture(${n}, uv);
    }
  `}function zre(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=ws();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${n}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${i.texture2D}(${n}, uv);
    }
  `}function Lre(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Uh(t)}
      }
    `;const r=t.shapeInfo.texShape,i=r[0],a=r[1];if(a===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const o=uu(n);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${n}, uv);
      }
    `:i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function Pre(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=i[0],o=i[1],l=ws();if(i!=null&&Ke(n,i))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Mre(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape;if(i!=null&&Ke(n,i)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],f=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:o}=Ao(n),l=a;if(l.length<n.length){const d=Wh(t,l),f=["row","col"];return`
      ${Vh(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${Gh(f,o)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Uh(t)}
      }
    `;const u=i[0],c=i[1],h=uu(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function Bre(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(n[0]===1){const d=n.slice(1),f=[1,2],p=Wh(t,d),m=["b","row","col"];return`
        ${Zz(p,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Gh(m,f)});
        }
      `}const o=ws();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function Vre(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=Ao(n),u=o;if(u.length<n.length){const m=Wh(t,u),g=["row","col","depth"];return`
        ${Vh(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Gh(g,l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${a}, 1)));
        ${Uh(t)}
      }
    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],f=t.shapeInfo.flatOffset;if(d===i&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===a&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const p=uu(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${a} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Ure(t,e){const n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ws();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;const i=t.shapeInfo.logicalShape,a=i.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)f=`int b${m}, `+f,d*=i[a-m-1],p=`b${m} * ${d} + `+p;return`
    vec4 ${s}(${f}) {
      int index = ${p};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function Wre(t,e){const n=t.shapeInfo.logicalShape,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=Ao(n);if(l.length<n.length){const x=Wh(t,l),w=["row","col","depth","depth2"];return`
      ${Vh(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Gh(w,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${i}, 1)));
        ${Uh(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(f===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${p}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===i&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=uu(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function Gre(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=Ao(e);if(l.length<e.length){const m=Wh(t,l),g=["row","col","depth","depth2","depth3"];return`
      ${Vh(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Gh(g,u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${i}, ${r})) +
          depth3;
        ${Uh(t)}
      }
    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1];if(f===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const p=uu(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${i} +
          depth2 * ${r} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Hre(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=Ao(e);if(r.length<e.length){const g=Wh(t,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Vh(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Gh(y,i)});
      }
    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Uh(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],p=d[1];if(p===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===a&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=uu(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Uh(t){const e=t.name,n=Y(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function jre(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=Qz(t.shapeInfo.logicalShape,e.logicalShape),l=Nt(a),u=a-i;let c;const h=["x","y","z","w","u","v"];i===0?c="":a<2&&o.length>=1?c="coords = 0;":c=o.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";a<2&&i>0?d="coords":d=t.shapeInfo.logicalShape.map((x,w)=>`coords.${h[w+u]}`).join(", ");let f="return outputValue;";const m=Y(t.shapeInfo.logicalShape)===1,y=Y(e.logicalShape)===1;if(i===1&&!m&&!y)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(o.length){const x=i-2,w=i-1;o.indexOf(x)>-1&&o.indexOf(w)>-1?f="return vec4(outputValue.x);":o.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${f}
    }
  `}function qre(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&t.shapeInfo.flatOffset==null&&Ke(a,i))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=Nt(l),c=Qz(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const f=["x","y","z","w","u","v"];o===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${f[m+h]} = 0;`).join(`
`);let p="";return l<2&&o>0?p="coords":p=t.shapeInfo.logicalShape.map((m,g)=>`coords.${f[g+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${p});
    }
  `}function Nt(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function WC(t,e,n){const{newShape:s,keptDims:r}=Ao(e),i=e.length,a=t&&i===3&&e[0]===1,o=a?e.slice(1):s,l=!t&&i>1&&!Ke(e,n)&&s.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:r}}function Wh(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Gh(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xre(t,e,n,s){const r=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),i=r.map(c=>c.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=dre(r,a,e),l=Vse(t.gl,o),u=t.createProgram(l);return J().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},eL(t,e,u)))}function eL(t,e,n){const s=[],r=[];let i,a,o,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),J().getNumber("WEBGL_VERSION")===1&&(l=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:t.getUniformLocation(n,h,c),offset:t.getUniformLocation(n,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=t.getUniformLocation(n,`${h}Shape`,c),d.texShape=t.getUniformLocation(n,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(i=t.getUniformLocation(n,"outShape",c),o=t.getUniformLocation(n,"outShapeStrides",c),a=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)r.push(t.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function NI(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,s)=>{const r=n.logicalShape,i=e[s],a=i.shape;if(!Ke(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(n.isUniform&&i.isUniform)return;const o=n.texShape,l=i.isUniform?null:i.texData.texShape;if(!Ke(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function Kre(t,e,n,s,r){e.program.enableShapeUniforms||(NI(e.inShapeInfos,n),NI([e.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):t.setOutputMatrixTexture(i.texture,a[0],a[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),J().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const u=n[l],{uniform:c,offset:h,shape:d,texShape:f}=e.variablesLocations[l];if(d){const{uniformShape:p}=WC(e.program.packedInputs,u.shape,u.texData.texShape);switch(p.length){case 1:t.gl.uniform1iv(d,new Int32Array(p));break;case 2:t.gl.uniform2iv(d,new Int32Array(p));break;case 3:t.gl.uniform3iv(d,new Int32Array(p));break;case 4:t.gl.uniform4iv(d,new Int32Array(p));break}}if(f&&t.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(Y(u.shape)<2)t.gl.uniform1f(c,u.uniformValues[0]);else{let p=u.uniformValues;p instanceof Float32Array||(p=new Float32Array(p)),t.gl.uniform1fv(c,p)}continue}u.texData.slice!=null&&h!=null&&t.gl.uniform1i(h,u.texData.slice.flatOffset),t.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Re(s.shape);switch(s.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=r[l];if(u.type==="float")t.gl.uniform1fv(c,h);else if(u.type==="vec2")t.gl.uniform2fv(c,h);else if(u.type==="vec3")t.gl.uniform3fv(c,h);else if(u.type==="vec4")t.gl.uniform4fv(c,h);else if(u.type==="int")t.gl.uniform1iv(c,h);else if(u.type==="ivec2")t.gl.uniform2iv(c,h);else if(u.type==="ivec3")t.gl.uniform3iv(c,h);else if(u.type==="ivec4")t.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}t.executeProgram()}function Yre(t,e,n){let s="";e.concat(n).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=WC(t.packedInputs,a.shape,l);let d="",f="",p="";if(c.length===1&&t.packedInputs){const S=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${S[0]>1}_${S[1]>1}`}else if(c.length===2&&!t.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const S=Re(c);p=`${S[0]===l[1]}_${S[S.length-1]===l[1]}`}const m=a.shape.length,g=c.length===2&&Ke(a.shape,l),y=Y(a.shape)===1,x=So(a.shape,n.shape),w=!t.packedInputs&&m===n.shape.length&&Ke(l,n.texData.texShape),v=t.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${u?h:""}_${c.length}_${y}_${x}_${g}_${d}_${f}_${p}_${v}_${o}`}else{const l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${o}`}});const r=t.userCode;let i=t.constructor.name;return i+="_"+s+"_"+r+`${J().getNumber("WEBGL_VERSION")}`,i}function ls(t){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qre{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Tf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ws();this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?u0(["r","c","d"],e):lu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zre{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Tf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ws();this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?u0(["r","c","d"],e):lu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jre{constructor(e){this.variableNames=["A"],this.outTexUsage=ir.DOWNLOAD;const n=ws();this.outputShape=e,this.userCode=`
      ${Yz}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ir.DOWNLOAD;const n=ws();this.outputShape=e,this.userCode=`
      ${Yz}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tie={R:0,G:1,B:2,A:3};class II{constructor(e,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ws();this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length);let i="result";n&&(i="floor(result * 255. + 0.5)");let a="";for(let o=0;o<s.length;o++){const l=s[o];a+=`
          if(offset == ${o}) {
            result = values[${tie[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?UC():VC(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nie{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=ws();this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length);let r="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const l=a*2+o;r+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?UC():VC(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(t){const e=ws(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Bse(t,n)}function rie(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Hse(t,e)}function iie(t){const e=new Uint16Array([0,1,2,2,1,3]);return jse(t,e)}function mm(t,e,n,s,r,i){Xse(e,n);const a=qse(t),o=t.TEXTURE_2D;return Ce(t,()=>t.bindTexture(o,a)),Ce(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Ce(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Ce(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),Ce(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),J().getNumber("WEBGL_VERSION")===1?Ce(t,()=>t.texImage2D(o,0,s,e,n,0,r,i,null)):Ce(t,()=>t.texStorage2D(o,1,s,e,n)),Ce(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function tL(t){return t.internalFormatFloat}function aie(t,e,n,s){const[r,i]=fm(e,n);return mm(t,r,i,tL(s),s.textureFormatFloat,t.FLOAT)}function nL(t){return t.internalFormatHalfFloat}function oie(t,e,n,s){const[r,i]=fm(e,n);return mm(t,r,i,nL(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function sL(t){return t.downloadTextureFormat}function lie(t,e,n,s){const[r,i]=fm(e,n);return mm(t,r,i,sL(s),t.RGBA,t.UNSIGNED_BYTE)}function rL(t){return t.internalFormatPackedFloat}function uie(t,e,n,s){const[r,i]=Bh(e,n);return mm(t,r,i,rL(s),t.RGBA,t.FLOAT)}function iL(t){return t.internalFormatPackedHalfFloat}function cie(t,e,n,s){const[r,i]=Bh(e,n);return mm(t,r,i,iL(s),t.RGBA,s.textureTypeHalfFloat)}function hie(t,e,n){return Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),CI(t,e,"clipSpacePos",n,3,20,0)&&CI(t,e,"uv",n,2,20,12)}function die(t,e,n,s,r,i){Ce(t,()=>t.bindTexture(t.TEXTURE_2D,e));let a,o,l;r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(r),J().getNumber("WEBGL_VERSION")===2?Ce(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,s,t.RGBA,o,a)):Ce(t,()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,a)),Ce(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function fie(t,e,n){Ce(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?Ce(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):Ce(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):J().getNumber("WEBGL_VERSION")===2?Ce(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):Ce(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Ce(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function pie(t,e,n,s){const r=t.createBuffer();Ce(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const o=4*4*e*n;return Ce(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),Ce(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Ce(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}function mie(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function gie(t,e,n,s){const[r,i]=fm(e,n),a=4,o=new Uint8Array(_se(e*n,a));return Ce(t,()=>t.readPixels(0,0,r,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function yie(t,e,n,s,r,i,a,o){const l=t,u=new Float32Array(Ose(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function xie(t,e,n){const s=new Float32Array(e*n*4);return Ce(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z1{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=J().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Rse(n,e)):this.gl=yi(n),e=this.gl,J().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>Ce(i,()=>i.createVertexArray()),this.bindVertexArray=a=>Ce(i,()=>i.bindVertexArray(a)),this.deleteVertexArray=a=>Ce(i,()=>i.deleteVertexArray(a)),this.getVertexArray=()=>Ce(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Ce(e,()=>i.createVertexArrayOES()),this.bindVertexArray=a=>Ce(e,()=>i.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Ce(e,()=>i.deleteVertexArrayOES(a)),this.getVertexArray=()=>Ce(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),J().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=sg(this.gl,i),Vr(this.gl,a))this.textureHalfFloatExtension=sg(this.gl,a);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Vr(this.gl,r))this.colorBufferHalfFloatExtension=sg(this.gl,r);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Vr(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Vr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=rie(this.gl),this.indexBuffer=iie(this.gl),this.framebuffer=Kse(this.gl),this.textureConfig=BC(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Ce(e,()=>e.finish()),Ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ce(e,()=>e.deleteFramebuffer(this.framebuffer)),Ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),aie(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),oie(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),lie(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),fie(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,s,r){this.throwIfDisposed(),die(this.gl,e,n,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),cie(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),uie(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(kI(this.gl,this.framebuffer),this.outputTexture=null),Ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,s){return this.downloadMatrixDriver(e,()=>gie(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,s,r,i,a){return yie(this.gl,e,n,s,r,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return mie(this.gl,e,n)}createBufferFromTexture(e,n,s){this.bindTextureToFrameBuffer(e);const r=pie(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,s;if(J().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(i,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},n=i}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(e,n,s){return this.downloadMatrixDriver(e,()=>xie(this.gl,n,s))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=sie(n));const s=Wse(n);Ce(n,()=>n.attachShader(s,this.vertexShader)),Ce(n,()=>n.attachShader(s,e)),Gse(n,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&D1(n,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;Ce(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),hie(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Ce(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&D1(this.gl,this.program),Ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,s=!0){return this.throwIfDisposed(),s?Qse(this.gl,e,n):Zse(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),Ce(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),Jse(this.gl,e,n,s)}setOutputMatrixTexture(e,n,s){this.setOutputMatrixTextureDriver(e,s,n)}setOutputPackedMatrixTexture(e,n,s){this.throwIfDisposed();const[r,i]=Bh(n,s);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,n,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,n)}setOutputPackedMatrixWriteRegion(e,n,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&D1(this.gl,this.program),rg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=sg(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await uN(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=bie(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in J().platform&&(s=J().platform.setTimeoutCustom.bind(J().platform)),uN(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),_1(this.gl,e,this.framebuffer),this.debug&&rg(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(_1(this.gl,this.outputTexture,this.framebuffer),this.debug&&rg(this.gl)):kI(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,n,s){this.throwIfDisposed();const r=this.gl;_1(r,e,this.framebuffer),this.debug&&rg(r),this.outputTexture=e,Ce(r,()=>r.viewport(0,0,n,s)),Ce(r,()=>r.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(e,n,s,r){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.scissor(e,n,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function bie(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:wie,bincountImpl:aL,bincountReduceImpl:vie,bitwiseAndImpl:Sie,castImpl:Cie,ceilImpl:kie,concatImpl:$ie,equalImpl:Nie,expImpl:Iie,expm1Impl:Tie,floorImpl:Eie,gatherNdImpl:Rie,gatherV2Impl:Aie,greaterImpl:Die,greaterEqualImpl:_ie,lessImpl:Oie,lessEqualImpl:Fie,linSpaceImpl:zie,logImpl:Lie,maxImpl:Pie,maximumImpl:Mie,minimumImpl:Bie,multiplyImpl:Vie,negImpl:Uie,notEqualImpl:Wie,prodImpl:Gie,raggedGatherImpl:Hie,raggedRangeImpl:jie,raggedTensorToTensorImpl:qie,rangeImpl:Xie,rsqrtImpl:Kie,scatterImpl:Yie,sigmoidImpl:Qie,simpleAbsImpl:oL,sliceImpl:Zie,sparseFillEmptyRowsImpl:Jie,sparseReshapeImpl:eae,sparseSegmentReductionImpl:lL,sqrtImpl:tae,staticRegexReplaceImpl:nae,stridedSliceImpl:sae,stringNGramsImpl:rae,stringSplitImpl:iae,stringToHashBucketFastImpl:aae,subImpl:oae,tileImpl:lae,topKImpl:uae,transposeImpl:GC,uniqueImpl:cae}=Dz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function fs(t,e){return e===1?[t]:uL(t,e)}function hae(t,e){if(t===1)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dae{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ls(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=fs("rc",this.rank),s=Nt(this.rank),r=this.getOutOfBoundsCondition(n),i=this.getSetup(n),a=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)i=`${e[e.length-1-a]},`+i;n.push(i)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cL{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${fae(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?UC():VC(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function fae(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?hre(["r","c","d"],"inputShape"):lu(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pae=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,s){const r=EI(n,s),i=RI(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=TI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let o;return r===jn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===jn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===jn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===jn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===jn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,n,s,r){if(this.freeTextures==null)return;const i=EI(s,r),a=RI(n,i,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=TI(n,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=J().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function mae(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function TI(t,e,n,s,r){const i=gae(e,s);let a;if(r){const[l,u]=Bh(t[0],t[1]);a=l*u}else{const[l,u]=fm(t[0],t[1]);a=l*u}const o=mae(n,i);return a*o}function gae(t,e){switch(t){case jn.PACKED_2X2_FLOAT32:return rL(e);case jn.PACKED_2X2_FLOAT16:return iL(e);case jn.UNPACKED_FLOAT32:return tL(e);case jn.UNPACKED_FLOAT16:return nL(e);case jn.PACKED_4X1_UNSIGNED_BYTE:return sL(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function yae(t){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?jn.PACKED_2X2_FLOAT32:jn.UNPACKED_FLOAT32:t?jn.PACKED_2X2_FLOAT16:jn.UNPACKED_FLOAT16}function EI(t,e){if(t===ir.UPLOAD)return jn.PACKED_2X2_FLOAT32;if(t===ir.RENDER||t==null)return yae(e);if(t===ir.DOWNLOAD||t===ir.PIXELS)return jn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function RI(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zi=class{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const Qr="if (isnan(x)) return x;",xae="return x;",AI="return abs(x);",bae="return (x >= 0.0) ? x : (exp(x) - 1.0);",wae=Qr+`
  return (x < 0.0) ? 0.0 : x;
`,vae=Qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ga="return x;",Sae="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cae="return x;",kae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,$ae=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Nae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Iae="return 1.0 / (1.0 + exp(-1.0 * x));";class Ja{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tae{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length);const n=e.length,s=fs("rc",n),r=Nt(n),i=hae(n,s),a=s.slice(-2),o=n<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae=XS,Rae=1e-7,Aae=1e-4,og={};function Dae(t){return t in og||(og[t]={}),og[t]}const _ae=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Oae=600;function Fae(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*Oae/1024/1024}class c0 extends ix{nextDataId(){return c0.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof z1)n=e;else{const s=yi(J().getNumber("WEBGL_VERSION"),e);n=new z1(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=yi(J().getNumber("WEBGL_VERSION"));n=new z1(s),this.binaryCache=Dae(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new pae(this.gpgpu),this.numMBBeforeWarning=Fae(),this.texData=new G2(this,cs())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,s,r,i,a){const o=this.makeTensorInfo(n,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,i]},l.texShape=[r,i];const u=ig(n),c=new II(u,!1,a),h=this.runWebGLProgram(c,[o],s,[[r,i]]);return h.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,n,s){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:n,dtype:s,values:e,usage:ir.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,s,r,i){if(J().getBool("DEBUG")&&this.checkNumericalProblems(n),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:n,usage:ir.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:i,slice:a,shape:o,isPacked:l}=n;if(a!=null){let d;l?d=new Ja(o,Ga):d=new zi(o,Ga);const f=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:r}],r),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=vs());let h;if(r==="complex64"){const d=this.readSync(i.real.dataId),f=this.readSync(i.imag.dataId);h=fi(d,f)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=vs()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const p=this.pendingRead.get(e);return new Promise(m=>p.push(m))}const n=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,complexTensorInfos:o,isPacked:l}=n;if(i!=null){let p;l?p=new Ja(r,Ga):p=new zi(r,Ga);const m=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const p=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(p.texture.texture,...ng(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const p=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),m=p[0],g=p[1];h=fi(m,g)}else if(u==null)h=this.getValuesFromTexture(e);else{const p=Y(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,p)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const p=this.gpgpu.gl;Ce(p,()=>p.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cs().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const s=this.texData.get(e),{values:r,shape:i,slice:a,dtype:o,isPacked:l,texture:u}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;l?f=new Ja(i,Ga):f=new zi(i,Ga);const p=this.runWebGLProgram(f,[{dataId:e,shape:i,dtype:o}],o),m=this.readToGPU(p,n);return this.disposeIntermediateTensorInfo(p),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),h=cs().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>ci(r));return Ge(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const s=e[n];if(!Pse(s))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:s,isPacked:r}=this.texData.get(e),i=Y(n);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...ng(n)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),p}const a=J().getBool("WEBGL_PACK")&&r===!0,o=a?ig(n):n,l=a?new eie(o):new Jre(o),u=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=Ea(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Ea(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);o.kernelMs=FA(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vs(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=vs(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:s,texShape:r,usage:i,isPacked:a,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(n,r,i,a)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=_ae){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&Y(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){rr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return Eae(e.shape,n)}packedUnaryOp(e,n,s){const r=new Ja(e.shape,n),i=this.compileAndRun(r,[e],s);return cs().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=oL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,AI,e.dtype);const n=new zi(e.shape,AI),s=this.compileAndRun(n,[e]);return cs().makeTensorFromTensorInfo(s)}makeTensorInfo(e,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Lc(s[0])){const i=s.map(a=>va(a));r=this.write(i,e,n)}else r=this.write(s,e,n);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:n}}makeOutput(e,n,s){return cs().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,s),this)}unpackTensor(e){const n=new Tae(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new dae(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){const s=[$c(e.shape),...Nc(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[$c(n),...Nc(n)],a=new cL(i,s),o=!0,l=[s],u=this.runWebGLProgram(a,[r],e.dtype,l,o);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(e,n){const s=this.texData.get(e),{isPacked:r,shape:i,dtype:a}=s;if(n!=null){const d=Y(i),f=n[0]*n[1]*4;R(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=ig(i);let l;r?l=new Zre(o):l=new Qre(o);const u=!0,c=[n??ng(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:a,dataId:e}],a,c,u,n);return{dtype:a,shape:i,dataId:h.dataId}}runWebGLProgram(e,n,s,r,i=!1,a){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Tf.DENSE){const y=a??ng(e.outputShape);l.texShape=y.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),Y(o.shape)===0)return l.values=Rn(o.dtype,0),o;const u=[],c=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(y.dataId);if(x.texture==null){if(!e.packedInputs&&Y(y.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!x.isPacked!=!!e.packedInputs)y=x.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),x=this.texData.get(y.dataId);else if(x.isPacked&&!Oy(x.shape,y.shape)){const w=y,v=y.shape;y.shape=x.shape,y=this.packedReshape(y,v),u.push(y),x=this.texData.get(y.dataId),w.shape=v}return{shape:y.shape,texData:x,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},d=Yre(e,c,h),f=this.getAndSaveBinary(d,()=>Xre(this.gpgpu,e,c,h)),p=this.activeTimers!=null;let m;p&&(m=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||Kre(this.gpgpu,f,c,h,r),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),p&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=J().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=vs();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(e,n,s,r,i=!1){return s=s||n[0].dtype,this.runWebGLProgram(e,n,s,r,i)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=J().getBool("DEBUG");J().set("DEBUG",!1);const n=this.abs(Ae(1e-8)).dataSync()[0];if(J().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Rae:Aae}uploadToGPU(e){const n=this.texData.get(e),{shape:s,dtype:r,values:i,texture:a,usage:o,isPacked:l}=n;if(a!=null)return;const u=this.activeTimers!=null;let c;u&&(c=vs());let h=n.texShape;if(h==null&&(h=nre(s,l),n.texShape=h),i!=null){const d=ig(s);let f,p=h[1],m=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!g)&&([p,m]=Bh(h[0],h[1])),l?f=new nie(d,g):f=new II(d,g);const y=g?[m,p]:h,x=this.makeTensorInfo(y,r),w=this.texData.get(x.dataId);g?w.usage=ir.PIXELS:w.usage=ir.UPLOAD,w.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),p,m,i);const v=[[m,p]],N=this.runWebGLProgram(f,[x],r,v,!0),I=this.texData.get(N.dataId);n.texShape=I.texShape,n.isPacked=I.isPacked,n.usage=I.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(n.texture=I.texture,n.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=vs()-c)}else{const d=this.acquireTexture(h,o,r,l);n.texture=d}}convertAndCacheOnCPU(e,n){const s=this.texData.get(e),{dtype:r}=s;return n!=null&&(s.values=zae(n,r)),s.values}acquireTexture(e,n,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,r)}computeBytes(e,n){return e[0]*e[1]*oy(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(n),r(!0)}catch(i){throw i}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await XD(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Kz(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:s,infLoc:r,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:l}=eL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,n,s){e.channels=e.channels||"RGBA";const{texture:r,height:i,width:a,channels:o}=e,l=cs().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,n,s,i,a,o);return cs().makeTensorFromDataId(u,n,s,l)}}c0.nextDataId=0;function zae(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let s=0;s<n.length;++s)n[s]=Math.round(t[s]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */s3()&&lS("webgl",()=>new c0,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let Wl=class{constructor(e,n,s){this.variableNames=["A","B"],this.outputShape=Pe(n,s),this.enableShapeUniforms=ls(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cu=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Hh{constructor(e,n,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pe(n,s);const i=this.outputShape.length;this.enableShapeUniforms=ls(i);let a="";if(r)if(i===0||Y(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Nt(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=fs("coords",i);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Lae={kernelName:ih,backendName:"webgl",kernelFunc:qs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=qs({inputs:{x:s},backend:n}),l=qs({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const Pae={kernelName:fx,backendName:"webgl",kernelFunc:Bo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL="return (a < 0.) ? b * a : a;",dL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Mae(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s,a=n.makeTensorInfo([],"float32",Do(i,"float32")),o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(dL,r.shape,a.shape):new Wl(hL,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}const Bae={kernelName:pp,backendName:"webgl",kernelFunc:Mae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL="return (a < 0.) ? b * a : a;",pL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Vae(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,i=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(pL,s.shape,r.shape):new Wl(fL,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}const Uae={kernelName:_p,backendName:"webgl",kernelFunc:Vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jh="if (isnan(x)) return x;";function dt({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&n!=null){const h=o.texData.get(a.dataId),d=n(h.values,l);return o.makeTensorInfo(a.shape,l,d)}const u=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new Ja(a.shape,e):c=new zi(a.shape,t),o.runWebGLProgram(c,[a],l)}}function Zn({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(s&&l.dtype==="complex64"){const p=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[p.complexTensorInfos.real,m.complexTensorInfos.real],[p.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[v,S]=w,N={dataId:v.dataId,dtype:v.dtype,shape:l.shape},I={dataId:S.dataId,dtype:S.dtype,shape:u.shape},T=new Wl(t,l.shape,u.shape);return c.runWebGLProgram(T,[N,I],Vn(v.dtype,S.dtype))}),x=Bo({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}const h=i||Vn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const p=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?pi(p):p,y=l.dtype==="string"?pi(m):m,[x,w]=r(l.shape,u.shape,g,y,h),v=c.makeTensorInfo(w,h),S=c.texData.get(v.dataId);return S.values=x,v}const d=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new Hh(e,l.shape,u.shape,n):f=new Wl(t,l.shape,u.shape),c.runWebGLProgram(f,[l,u],h)}}function Ef(t,e=!1){if(t==="linear")return e?Cae:xae;if(t==="relu")return e?$ae:wae;if(t==="elu")return e?kae:bae;if(t==="relu6")return e?Nae:vae;if(t==="prelu")return e?pL:fL;if(t==="leakyrelu")return e?dL:hL;if(t==="sigmoid")return e?Iae:Sae;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mL=class{constructor(e,n,s,r=!1,i=!1,a=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=ls(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",f=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";o&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:g=`vec4 activation(vec4 x) {
          ${o}
        }`,y="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",v="rc.x";e[0]<n[0]?w=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(v=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${v};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${m[0]});
          result += (${p[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${y}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let _I=class{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pe(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI="return a * b;";function jC(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,i=Vn(s.dtype,r.dtype);if(s.dtype==="complex64"){const o=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new _I(DI.REAL,s.shape,r.shape),c=new _I(DI.IMAG,s.shape,r.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,h,"float32"),f=n.runWebGLProgram(c,h,"float32"),p=Bo({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),p}if(n.shouldExecuteOnCPU([s,r])){const o=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=Vie(s.shape,r.shape,o.values,l.values,i),h=n.makeTensorInfo(c,i),d=n.texData.get(h.dataId);return d.values=u,h}let a;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Hh(OI,s.shape,r.shape):a=new Wl(OI,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const Wae={kernelName:ph,backendName:"webgl",kernelFunc:jC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gae(t,e,n){const s=[$c(t.shape),...Nc(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[$c(e),...Nc(e)],a=new cL(i,s),o=!0,l=[s],u=n.runWebGLProgram(a,[r],t.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ye(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=n,o=Y(r.shape),l=j2(i,o),u=Y(l);R(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(r.dataId);return c.isPacked&&!Oy(r.shape,l)&&!(c.texture!==null&&Oy(c.shape,l))?Gae(r,l,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const Hae={kernelName:Fp,backendName:"webgl",kernelFunc:ye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FI{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];const o=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(n!=null){const h=1/n;u=`sumValue += dot(values * ${mc(h)?h.toPrecision(2):h}, ones);`}let c="";i%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jae=class{constructor(e,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];let o="0.0",l="";n==="prod"?o="1.0":n==="min"?(o="1.0 / 1e-20",l="min"):n==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";n==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qae(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],s=Ob(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}function hu(t,e,n,s){const r=qae(t.shape);let i=t;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let c,h;n==="mean"?c=a===0?new FI({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new FI({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):c=new jae({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xae=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[n[a]];this.outputShape=s,this.rank=s.length;const r=Nt(this.rank),i=Kae(n);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function Kae(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<t.length;r++)s[t[r]]=n[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yae{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Nt(this.rank),i=uL("rc",this.rank),a=new Array(this.rank);for(let c=0;c<n.length;c++)a[n[c]]=i[c];const o=`vec2(${a.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(t,e,n){const s=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yae(t.shape,e):new Xae(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qae(t,e,n,s){const r=e,i=t.shape.length,a=qe(r,t.shape);let o=a;const l=It(o,i),u=l!=null;let c=t;u&&(c=h0(t,l,s),o=Pt(o.length,i)),wn("sum",o,i);const[h,d]=dn(c.shape,o);let f=h;n&&(f=on(h,a));const p=Y(d),g=Y(t.shape)/p,y=ye({inputs:{x:c},attrs:{shape:[g,p]},backend:s}),x=rb(t.dtype),w=hu(y,x,"sum",s),v=ye({inputs:{x:w},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),u&&s.disposeIntermediateTensorInfo(c),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return Qae(r,i,a,n)}const Zae={kernelName:Vp,backendName:"webgl",kernelFunc:d0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[i[c]];let u;if(a.shouldExecuteOnCPU([r])){const h=a.texData.get(r.dataId).values,d=GC(h,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype);const f=a.texData.get(u.dataId);f.values=d}else u=h0(r,i,a);return u}const Jae={kernelName:xl,backendName:"webgl",kernelFunc:xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL=1e3;function Fy({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],f=n?t.shape[u-1]:t.shape[u-2],p=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=Y(m),x=Y(g),v=Pe(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);R(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const S=n?[y,h,f]:[y,f,h],N=s?[x,p,d]:[x,d,p],I=ye({inputs:{x:t},backend:r,attrs:{shape:S}}),T=ye({inputs:{x:e},backend:r,attrs:{shape:N}}),A=[I,T],D=Math.max(y,x),O=n?I.shape[1]:I.shape[2],U=i!=null,B=a!=null,q=l==="leakyrelu",H=l!=null?Ef(l,!0):null,L=U||B||q||H!=null;let Z;if((f===1||p===1)&&O>gL&&L===!1){let ee=I,se=T;n&&(ee=xs({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),A.push(ee)),s&&(se=xs({inputs:{x:T},backend:r,attrs:{perm:[0,2,1]}}),A.push(se));const ie=p!==1,ue=p===1;let le=ee;ie&&(le=ye({inputs:{x:ee},backend:r,attrs:{shape:[D,O,1]}}),A.push(le));const de=p===1?2:1;let he=se;ue&&(he=ye({inputs:{x:se},backend:r,attrs:{shape:[D,1,O]}}),A.push(he));const ke=jC({inputs:{a:le,b:he},backend:r});Z=d0({inputs:{x:ke},backend:r,attrs:{axis:de,keepDims:!0}}),A.push(ke)}else{const ee=Vn(t.dtype,e.dtype),se=new mL(S,N,[D,f,p],n,s,U,H,B,q),ie=[I,T];if(i!=null&&ie.push(i),B&&ie.push(a),q){const ue=r.makeTensorInfo([],"float32",Do(o,"float32"));ie.push(ue),A.push(ue)}Z=r.runWebGLProgram(se,ie,ee)}const K=ye({inputs:{x:Z},backend:r,attrs:{shape:v}});A.push(Z);for(const ee of A)r.disposeIntermediateTensorInfo(ee);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eoe(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return Fy({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const toe={kernelName:pf,backendName:"webgl",kernelFunc:eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI="return abs(x);";function noe(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=n.texData.get(s.dataId),a=oL(i.values);return n.makeTensorInfo(s.shape,s.dtype,a)}let r;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ja(s.shape,zI):r=new zi(s.shape,zI),n.runWebGLProgram(r,[s],s.dtype)}const soe={kernelName:qf,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roe=Qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,ioe=dt({opSnippet:roe}),aoe={kernelName:Mc,backendName:"webgl",kernelFunc:ioe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ooe=Qr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,loe=dt({opSnippet:ooe}),uoe={kernelName:Bc,backendName:"webgl",kernelFunc:loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI="return a + b;",coe=Zn({opSnippet:LI,packedOpSnippet:LI,supportsComplex:!0,cpuKernelImpl:wie}),hoe={kernelName:Ql,backendName:"webgl",kernelFunc:coe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class doe{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let foe=class{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return qs({inputs:{x:s[0]},backend:n});if(s.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Tg({inputs:s.slice(0,l),backend:n}),c=Tg({inputs:s.slice(l),backend:n});return Tg({inputs:[u,c],backend:n})}const r=s.map(l=>l.dtype).reduce((l,u)=>Vn(l,u)),i=s.map(l=>l.shape),o=J().getBool("WEBGL_PACK")?new foe(s[0].shape,i):new doe(s[0].shape,i);return n.runWebGLProgram(o,s,r)}const poe={kernelName:Xf,backendName:"webgl",kernelFunc:Tg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=qe(i,r.shape);let u=l;const c=It(u,o);let h=r;c!=null&&(h=xs({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Pt(u.length,o)),wn("all",u,o);const[d,f]=dn(h.shape,u),p=Y(f),m=ye({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=hu(m,m.dtype,"all",n);let y;if(a){const x=on(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}const goe={kernelName:ax,backendName:"webgl",kernelFunc:moe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=qe(i,r.shape);let u=l;const c=It(u,o);let h=r;c!=null&&(h=xs({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Pt(u.length,o)),wn("any",u,o);const[d,f]=dn(h.shape,u),p=Y(f),m=ye({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=hu(m,m.dtype,"any",n);let y;if(a){const x=on(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}const xoe={kernelName:ox,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let boe=class{constructor(e,n,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const o=n==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class woe{constructor(e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,R(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],a=Math.ceil(i/n);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=Nt(l),c=fs("coords",l);let h,d;if(a===1){d=l+1;const T=Nt(d);h=`
        ${T} sourceLocR = ${T}(${c.join()}, 0);
        ++${c[l-1]};
        ${T} sourceLocG = ${T}(${c.join()}, 0);
        ++${c[l-2]};
        ${T} sourceLocA = ${T}(${c.join()}, 0);
        --${c[l-1]};
        ${T} sourceLocB = ${T}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],m=f.map(T=>"int "+T),g=fs("sourceLocR",d-1).concat("inIdx.r"),y=fs("sourceLocG",d-1).concat("inIdx.g"),x=fs("sourceLocB",d-1).concat("inIdx.b"),w=fs("sourceLocA",d-1).concat("inIdx.a"),v=s==="max"?"greaterThan":"lessThan",S=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,I=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${S}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(t,e,n,s=null){let r=e.shape[0],i=e.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const a=Ob(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new boe(o,n,s==null),u=[e];s!=null&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=yL(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function xL(t,e,n,s=null){const r=s!=null?s.shape:e.shape,i=r[r.length-1],a=Ob(i),o=new woe(r,a,n,s==null),l=s==null?[e]:[e,s],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const c=xL(t,e,n,u);return t.disposeIntermediateTensorInfo(u),c}return u}function bL(t,e,n,s){const r=[n];if(wn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],a=t.texData.get(e.dataId),o=a!==null&&a.isPacked;let l=e;o&&(l=t.unpackTensor(e),i.push(l));const[u,c]=dn(l.shape,r),h=Y(c),d=ye({inputs:{x:l},backend:t,attrs:{shape:[-1,h]}});i.push(d);const f=yL(t,d,s);i.push(f);const p=ye({inputs:{x:f},backend:t,attrs:{shape:u}});return i.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}return xL(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function voe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=xs({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),wn("argMax",[a[0]],l.shape.length);const c=bL(n,l,a[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const Soe={kernelName:Kf,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Coe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=xs({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),wn("argMin",[a[0]],l.shape.length);const c=bL(n,l,a[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const koe={kernelName:Yf,backendName:"webgl",kernelFunc:Coe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=Qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Noe=dt({opSnippet:$oe}),Ioe={kernelName:Vc,backendName:"webgl",kernelFunc:Noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Toe=Qr+"return log(x + sqrt(x * x + 1.0));",Eoe=dt({opSnippet:Toe}),Roe={kernelName:Uc,backendName:"webgl",kernelFunc:Eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aoe=Qr+`
  return atan(x);
`,Doe=dt({opSnippet:Aoe}),_oe={kernelName:Wc,backendName:"webgl",kernelFunc:Doe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ooe=HC+`
  return atan(a, b);
`,Foe=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cu+`
  return result;
`,zoe=Zn({opSnippet:Ooe,packedOpSnippet:Foe}),Loe={kernelName:Hc,backendName:"webgl",kernelFunc:zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Poe=Qr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Moe=dt({opSnippet:Poe}),Boe={kernelName:Gc,backendName:"webgl",kernelFunc:Moe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rf=class{constructor(e,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${T} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?g:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let v=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(v="avgValue / max(count, 1.0)");const S=Math.floor(a/4)*4,N=a%4,I=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${S}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${S};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${v});
      }
    `}},qC=class{constructor(e,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=n==="avg";let v="0.0";if(w||(v="-1.0 / 1e-20"),s){const D=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${D} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const S="max";let N=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(N="avgValue / max(count, 1.0)");const I=Math.floor(a/4)*4,T=a%4,A=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${S}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${x});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${I};
            if (${T===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${T===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${T===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${A}
            }
          }
        }
        setOutput(${N});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Voe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;pm(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;R(Dn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=as(r.shape,i,a,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ke(c.inShape,c.outShape))return qs({inputs:{x:r},backend:n});const h=new Rf(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const Uoe={kernelName:Qf,backendName:"webgl",kernelFunc:Voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Woe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=pr(r.shape,i,a,c,o,l,u),d=new qC(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const Goe={kernelName:Zf,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hoe=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},joe=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=f-1-e.padInfo.left,y=1/(n*s*r);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qoe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=pr(a.shape,o,l,h,u,c),f=new joe(d);return n.runWebGLProgram(f,[r],a.dtype)}const Xoe={kernelName:ux,backendName:"webgl",kernelFunc:qoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Koe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;pm([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=as(a.shape,o,l,1,u),h=new Hoe(c);return n.runWebGLProgram(h,[r],a.dtype)}const Yoe={kernelName:lx,backendName:"webgl",kernelFunc:Koe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qoe(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return Fy({a:r,b:i,transposeA:a,transposeB:o,backend:n})}const Zoe={kernelName:Jf,backendName:"webgl",kernelFunc:Qoe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Joe=class{constructor(e,n,s,r,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Pe(e,n),Pe(e,s);let o="0.0";r!=null&&(Pe(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";i!=null&&(Pe(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ele{constructor(e,n,s,r,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pe(e,n),Pe(e,s);let o="vec4(0.0)";r!=null&&(Pe(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(Pe(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tle=({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=t;R(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),R(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),R(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);const u=[s,r,i];let c=null;a!=null&&(c=a.shape,u.push(a));let h=null;o!=null&&(h=o.shape,u.push(o));const d=J().getBool("WEBGL_PACK_NORMALIZATION")?new ele(s.shape,r.shape,i.shape,c,h,l):new Joe(s.shape,r.shape,i.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},nle={kernelName:hp,backendName:"webgl",kernelFunc:tle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sle=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=Nt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=rle(this.rank);let r;const i=e.map((a,o)=>`sourceLoc.${zv[o]} = start[${o}] + coords.${zv[o]};`);r=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}};const zv=["x","y","z","w","u","v"];function rle(t){if(t===1)return"sourceLoc";if(t<=6)return zv.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ile{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Nt(this.rank),s=fs("coords",this.rank),r=fs("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${i})`,o=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ale(t,e,n,s){const r=s.texData.get(t.dataId),i=s.makeTensorInfo(n,t.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=rC(e,Re(t.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}function qh(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s,[o,l]=tm(r,i,a);if(Rb(r,o,l),Y(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.texData.get(r.dataId),d=Zie(h.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=n.texData.get(r.dataId),c=sC(r.shape,o,l);if(u||!c){const h=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ile(l):new sle(l),d=[o];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),ale(r,o,l,n)}const ole={kernelName:Bp,backendName:"webgl",kernelFunc:qh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lle=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;R(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((x,w)=>x*w),l=su(r.shape,i,o),u=ru(l.length,i.length),c=iu(r.shape,i,o),h=zb(a,i.length),d=Lb(c,a,i.length),f=[],p=ye({inputs:{x:r},backend:n,attrs:{shape:l}}),m=xs({inputs:{x:p},backend:n,attrs:{perm:u}}),g=ye({inputs:{x:m},backend:n,attrs:{shape:c}}),y=qh({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return f.push(p),f.push(m),f.push(g),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},ule={kernelName:ep,backendName:"webgl",kernelFunc:lle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cle(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=aL(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const hle={kernelName:cx,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dle=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,fle=`
  return float(int(a.r) & int(b.r));
`;function ple(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,i=J().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=J().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||a===1){const l=n.texData.get(s.dataId).values,u=n.texData.get(r.dataId).values,[c,h]=Sie(s.shape,r.shape,l,u,s.dtype),d=n.makeTensorInfo(h,s.dtype),f=n.texData.get(d.dataId);return f.values=c,d}let o;return i?o=new Hh(dle,s.shape,r.shape,!1):o=new Wl(fle,s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}const mle={kernelName:hx,backendName:"webgl",kernelFunc:ple};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gle(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,i=n.readSync(s.dataId),a=n.readSync(r.dataId),o=Pe(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const yle={kernelName:dx,backendName:"webgl",kernelFunc:gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle="return float(a != b);",wL=Zn({opSnippet:xle,cpuKernelImpl:Wie,dtype:"bool"}),ble={kernelName:Tp,backendName:"webgl",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gm(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return qs({inputs:{x:r.complexTensorInfos.real},backend:n})}const wle={kernelName:Vx,backendName:"webgl",kernelFunc:gm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vle="return float(int(x));";function Sle(t,e){const n=new zi(t.shape,vle),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return qs({inputs:{x:r},backend:n});const a=cn(r.shape),o=Lv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Bo({inputs:{real:o,imag:a},backend:n});return a.dispose(),n.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){const a=gm({inputs:{input:r},backend:n}),o=Lv({inputs:{x:a},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(a),o}if(!q2(r.dtype,i)){const a=qs({inputs:{x:r},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const a=n.texData.get(r.dataId).values,[o,l,u]=Cie(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}if(i==="int32")return Sle(r,n);if(i==="bool"){const a=n.makeTensorInfo([],"bool",Rn("bool",1)),l=wL({inputs:{a:r,b:a},backend:n});return n.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const Cle={kernelName:jc,backendName:"webgl",kernelFunc:Lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI="return ceil(x);",kle=dt({opSnippet:PI,packedOpSnippet:PI,cpuKernelImpl:kie}),$le={kernelName:qc,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nle=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ile{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tle(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;J().getBool("WEBGL_PACK_CLIP")?o=new Ile(r.shape):o=new Nle(r.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[r],r.dtype,l)}const Ele={kernelName:Xc,backendName:"webgl",kernelFunc:Tle};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rle=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Ale(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),i=new Rle(s.shape),a=[MI(s,r.complexTensorInfos.real),MI(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}const Dle={kernelName:tp,backendName:"webgl",kernelFunc:Ale};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _le=class{constructor(e){this.outputShape=[],this.outputShape=Is(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let a=1;a<n.length;a++)n[a]=n[a-1]+e[a][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<n.length;a++){const o=n[a-1];s.push(`else if (yC < ${n[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const r=n.length,i=n[n.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ole{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Is(e,n);const s=this.outputShape,r=s.length,i=Nt(r),a=fs("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][n];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][n];const u=o[n],c=o.slice(-2),h=o.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${lg(o,u,g)}),
            vec2(${lg(c,u,g)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${lg(o,u,p)}),
          vec2(${lg(c,u,p)}));`,this.userCode=`
      float getValue(${o.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function lg(t,e,n){const s=t.indexOf(e);return t.map((i,a)=>a===s?`${i} - ${n}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.texData.get(s.dataId);return qs({inputs:{x:r.complexTensorInfos.imag},backend:n})}const Fle={kernelName:Ax,backendName:"webgl",kernelFunc:f0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rd(t,e,n){const s=t[0].dtype;if(s==="complex64"){const f=t.map(x=>gm({inputs:{input:x},backend:n})),p=t.map(x=>f0({inputs:{input:x},backend:n})),m=Rd(f,e,n),g=Rd(p,e,n),y=Bo({inputs:{real:m,imag:g},backend:n});return f.forEach(x=>n.disposeIntermediateTensorInfo(x)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}let r=n.shouldExecuteOnCPU(t);if(s==="string"&&(r=!0),r){const f=t.map(v=>{const N=[-1,Y(v.shape.slice(e))];return ye({inputs:{x:v},backend:n,attrs:{shape:N}})}),p=f.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),m=Is(f.map(v=>v.shape),1),g=f[0].shape[0]===1,y=$ie(p,m,s,g),x=Is(t.map(v=>v.shape),e),w=n.makeTensorInfo(x,s,y);return f.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const i=t.filter(f=>Y(f.shape)>0),a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const f=a?new zi(t[0].shape,Ga):new Ja(t[0].shape,Ga);return n.runWebGLProgram(f,t,s)}const o=J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const f=[];for(let m=0;m<i.length;m+=o){const g=i.slice(m,m+o);f.push(Rd(g,e,n))}const p=Rd(f,e,n);for(const m of f)n.disposeIntermediateTensorInfo(m);return p}if(a){const f=new Ole(i.map(p=>p.shape),e);return n.runWebGLProgram(f,i,s)}const{tensors2D:l,outShape:u}=zle(i,e,n),c=new _le(l.map(f=>f.shape)),h=n.runWebGLProgram(c,l,s);l.forEach(f=>n.disposeIntermediateTensorInfo(f));const d=ye({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function zle(t,e,n){const s=Is(t.map(i=>i.shape),e);return{tensors2D:t.map(i=>ye({inputs:{x:i},attrs:{shape:[-1,Y(i.shape.slice(e))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=qe(r,e[0].shape)[0],a=e.map(u=>u.shape);_b(a,i);const o=Is(e.map(u=>u.shape),i);if(Y(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>Y(u.shape)>0);return l.length===1?qs({inputs:{x:l[0]},backend:n}):Rd(l,i,n)}const Lle={kernelName:np,backendName:"webgl",kernelFunc:vL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SL{constructor(e,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,x=g?2:3,w=g?3:1;let v="",S="";s&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:v=`
          float activation(float x) {
            ${s}
          }
        `,S="result = activation(result);");const N=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${S}
        setOutput(result);
      }
    `}}class Ple{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${a}, ${o});
      const ivec3 pads = ivec3(${n}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CL{constructor(e,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ls(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const y=g*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,o===1){if(y<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const x=a%2===0?H2(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):x===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";s&&(r?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,p="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mle{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ls(this.outputShape.length);const{dataFormat:s}=n,r=ws(),i=s==="channelsLast",a=i?1:2,o=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zy(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function kL({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f=n.dataFormat==="channelsLast",p=!1,m=!1;let g;const y=[];if(i!=null){const v=zy(i.shape,f);v!=null&&(i=ye({inputs:{x:i},backend:s,attrs:{shape:v}}),y.push(i))}if(r!=null){const v=zy(r.shape,f);v!=null&&(r=ye({inputs:{x:r},backend:s,attrs:{shape:v}}),y.push(r))}if(!((h===1||d===1)&&c>gL)&&u.isPacked&&f&&u.texture!=null&&l[2]%2!==0&&Ke(u.shape.slice(-3),l.slice(-3))){const v=l[0]*l[1]*(l[2]+1),S={dataId:t.dataId,shape:[1,v,n.inChannels],dtype:t.dtype},N=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,R(Oy(u.shape,S.shape),()=>`packed reshape ${u.shape} to ${S.shape} isn't free`);const I=ye({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);const T=Fy({a:S,b:I,backend:s,transposeA:p,transposeB:m,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),A=s.texData.get(T.dataId);R(A.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=N,A.shape=n.outShape,g=qs({inputs:{x:T},backend:s}),g.shape=n.outShape,y.push(T)}else{const v=n.outHeight*n.outWidth,S=ye({inputs:{x:t},backend:s,attrs:{shape:f?[n.batchSize,v,n.inChannels]:[n.batchSize,n.inChannels,v]}}),N=ye({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=Fy({a:f?S:N,b:f?N:S,transposeA:!f,transposeB:m,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});g=ye({inputs:{x:I},backend:s,attrs:{shape:n.outShape}}),y.push(S),y.push(N),y.push(I)}for(const v of y)s.disposeIntermediateTensorInfo(v);return g}function $L({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:f}=n,p=f==="channelsLast",m=l*u*c,g=d*h,y=[n.batchSize,m,g],x=!0,w=!1,v=[];if(i!=null){const K=zy(i.shape,p);K!=null&&(i=ye({inputs:{x:i},backend:s,attrs:{shape:K}}),v.push(i))}if(r!=null){const K=zy(r.shape,p);K!=null&&(r=ye({inputs:{x:r},backend:s,attrs:{shape:K}}),v.push(r))}const S=ye({inputs:{x:e},backend:s,attrs:{shape:[1,m,Y(e.shape)/m]}});v.push(S);const N=new Mle(y,n),I=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],T=s.runWebGLProgram(N,[t],"float32",I),A=ye({inputs:{x:T},backend:s,attrs:{shape:y}});v.push(T),v.push(A);const D=r!=null,O=i!=null,U=o==="leakyrelu",B=o?Ef(o,!0):null,q=new mL(p?A.shape:S.shape,p?S.shape:A.shape,p?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],x,w,D,B,O,U),H=p?[A,S]:[S,A];if(r&&H.push(r),O&&H.push(i),U){const K=s.makeTensorInfo([],"float32",Do(a,"float32"));H.push(K),v.push(K)}const L=s.runWebGLProgram(q,H,"float32"),Z=ye({inputs:{x:L},backend:s,attrs:{shape:n.outShape}});v.push(L);for(const K of v)s.disposeIntermediateTensorInfo(K);return Z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Qs(l),d=Lt(r.shape,i.shape,a,u,o,c,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=kL({x:r,filter:i,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const m=new CL(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=n.runWebGLProgram(m,[r,i],"float32",g)}else if(J().getBool("WEBGL_CONV_IM2COL"))f=$L({x:r,filter:i,convInfo:d,backend:n});else{const m=new SL(d);f=n.runWebGLProgram(m,[r,i],"float32")}const p=ye({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),p}const Vle={kernelName:sp,backendName:"webgl",kernelFunc:Ble};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ule=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Wle=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dataFormat==="channelsLast",o=n-1-e.padInfo.top,l=s-1-e.padInfo.left,u=a?1:2,c=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Gle=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Hle=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=n-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jle(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Qs(l),d=Lt(r.shape,c,a,1,o,u,!1,h),f=new Ule(d);return n.runWebGLProgram(f,[r,i],"float32")}const qle={kernelName:px,backendName:"webgl",kernelFunc:jle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xle{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ls(this.outputShape.length);const n=e.filterHeight,s=e.filterWidth,r=n-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kle(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Qs(u),d=Lt(a,i.shape,o,1,l,c,!1,h);if(J().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],p=new Xle(d);return n.runWebGLProgram(p,[r,i],"float32",f)}else{const f=new Wle(d);return n.runWebGLProgram(f,[r,i],"float32")}}const Yle={kernelName:rp,backendName:"webgl",kernelFunc:Kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qle(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=vi(r.shape,i.shape,a,l,o),c=new Ple(u);return n.runWebGLProgram(c,[r,i],"float32")}const Zle={kernelName:ip,backendName:"webgl",kernelFunc:Qle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jle(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,u=vi(r.shape,l,a,1,o),c=new Gle(u);return n.runWebGLProgram(c,[r,i],"float32")}const eue={kernelName:mx,backendName:"webgl",kernelFunc:Jle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tue(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s,u=vi(l,i.shape,o,1,a),c=new Hle(u);return n.runWebGLProgram(c,[r,i],"float32")}const nue={kernelName:gx,backendName:"webgl",kernelFunc:tue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sue=jh+`
  return cos(x);
`,rue=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${cu}
  return result;
`,iue=dt({opSnippet:sue,packedOpSnippet:rue}),aue={kernelName:Kc,backendName:"webgl",kernelFunc:iue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oue=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,lue=dt({opSnippet:oue}),uue={kernelName:Yc,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cue=class{constructor(e,n,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,l,u]=e,[c]=n,[h,d]=s;this.outputShape=[c,h,d,u];const f=r==="bilinear"?1:0,[p,m]=[`${o-1}.0`,`${l-1}.0`],[g,y,x]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[w,v,S]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${v};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${S};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hue=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new cue(r.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[r,i,a],"float32")},due={kernelName:xx,backendName:"webgl",kernelFunc:hue};var Af;(function(t){t.Prod="*",t.Sum="+"})(Af||(Af={}));let BI=class{constructor(e,n,s,r){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,a=this.op===Af.Prod?"1.0":"0.0",o=s?a:`getX(${VI(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Nt(i)} coords = getOutputCoords();
        int end = ${UI(i,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${UI(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${VI(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function VI(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function UI(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(t,e,n,s,r,i){const a=e.shape.length,o=It([s],a);let l=e;o!=null&&(l=xs({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=Pt(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=qs({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const f=new BI(t,l.shape,!1,i),p=[[d]],m=h;h=n.runWebGLProgram(f,[h],h.dtype,p),n.disposeIntermediateTensorInfo(m)}if(r){const d=new BI(t,l.shape,r,i),f=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(o!=null){const d=Ji(o),f=xs({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return NL(Af.Prod,r,n,i,a,o)}const pue={kernelName:yx,backendName:"webgl",kernelFunc:fue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return NL(Af.Sum,r,n,i,a,o)}const gue={kernelName:ap,backendName:"webgl",kernelFunc:mue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(r.shape.length===1){const l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=aL(l,u,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,c)}else if(r.shape.length===2){const l=n.bufferSync(r),u=n.bufferSync(i),c=vie(l,u,a,o);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const xue={kernelName:bx,backendName:"webgl",kernelFunc:yue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bue=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],c=a==="NHWC"?r.shape[3]:r.shape[1],h=l*i,d=u*i,f=c/(i*i),p=a==="NHWC"?[o,h,d,f]:[o,f,h,d],m=new bue(p,i,a);return n.runWebGLProgram(m,[r],r.dtype)}const vue={kernelName:wx,backendName:"webgl",kernelFunc:wue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let IL=class{constructor(e,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ls(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TL{constructor(e,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ls(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)f+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<h;y++)f+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const x=y*2;if(f+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(o%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?f+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const w=o%2===0?H2(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:f+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):w===1?f+=`
                    xC${x+1} = xTexelC${x};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(o%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(f+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(f+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",m="";s&&(r?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:p=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),R(Dn(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=Lt(r.shape,i.shape,a,c,o,u,!0);let d;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new TL(h):d=new IL(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",f)}const Cue={kernelName:op,backendName:"webgl",kernelFunc:Sue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kue=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$ue=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=n-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Lt(r.shape,c,a,o,l,u,!0),d=new kue(h);return n.runWebGLProgram(d,[r,i],"float32")}const Iue={kernelName:vx,backendName:"webgl",kernelFunc:Nue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tue(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Lt(c,i.shape,a,o,l,u,!0),d=new $ue(h);return n.runWebGLProgram(d,[r,i],"float32")}const Eue={kernelName:Sx,backendName:"webgl",kernelFunc:Tue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rue=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aue(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],i=Y(s.shape),a=ye({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new Rue(i),l=n.runWebGLProgram(o,[a],a.dtype),u=ye({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const Due={kernelName:Cx,backendName:"webgl",kernelFunc:Aue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _ue=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:s,padInfo:r,strideHeight:i,strideWidth:a,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oue(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=Fo(r.shape,i.shape,a,o,"NHWC",l);let c;const h=new _ue(u);c=n.runWebGLProgram(h,[r,i],"float32");const d=ye({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const Fue={kernelName:lp,backendName:"webgl",kernelFunc:Oue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zue(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Gb(r,i.length);jb(a.length,l,i);const{path:u,steps:c}=qb(o,l),h=c.length;let d=null,f=a.length;const p=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=Hb(f,l[g]);let w;Xb(y)?w=i[g]:(w=xs({inputs:{x:i[g]},backend:n,attrs:{perm:y}}),p.push(w));const v=w.shape.slice();for(let S=0;S<x.length;++S)v.splice(x[S],0,1);Ke(w.shape,v)||(w=ye({inputs:{x:w},backend:n,attrs:{shape:v}}),p.push(w)),d===null?d=w:(d=jC({inputs:{a:w,b:d},backend:n}),p.push(d))}m<h-1&&(u[m]>=0&&(d=d0({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const Lue={kernelName:kx,backendName:"webgl",kernelFunc:zue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pue="return (x >= 0.0) ? x : (exp(x) - 1.0);",Mue=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Bue=dt({opSnippet:Pue,packedOpSnippet:Mue}),Vue={kernelName:Zc,backendName:"webgl",kernelFunc:Bue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uue="return (b >= 0.0) ? a : a * (b + 1.0);",Wue=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Gue=t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,i=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hh(Wue,s.shape,r.shape):new Wl(Uue,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)},Hue={kernelName:$x,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jue=`
  return vec4(equal(a, b));
`,que="return float(a == b);",Xue=Zn({opSnippet:que,packedOpSnippet:jue,dtype:"bool",cpuKernelImpl:Nie}),Kue={kernelName:up,backendName:"webgl",kernelFunc:Xue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yue=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Pb};
  float a1 = ${Mb};
  float a2 = ${Bb};
  float a3 = ${Vb};
  float a4 = ${Ub};
  float a5 = ${Wb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Que=dt({opSnippet:Yue}),Zue={kernelName:Jc,backendName:"webgl",kernelFunc:Que};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jue=jh+`
  return exp(x);
`,ece=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,EL=dt({opSnippet:Jue,packedOpSnippet:ece,cpuKernelImpl:Iie,dtype:"float32"}),tce={kernelName:eh,backendName:"webgl",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(R(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),o.splice(l,0,1),ye({inputs:{x:i},backend:s,attrs:{shape:o}})}const nce={kernelName:cp,backendName:"webgl",kernelFunc:Pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI="return exp(x) - 1.0;",sce=dt({opSnippet:WI,packedOpSnippet:WI,cpuKernelImpl:Tie}),rce={kernelName:th,backendName:"webgl",kernelFunc:sce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let GI=class{constructor(e,n,s){this.variableNames=["real","imag"];const r=n[1];this.outputShape=n;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(t,e,n){const s=n.texData.get(t.dataId),r=Y(t.shape),i=t.shape[t.shape.length-1],a=r/i,o=ye({inputs:{x:t},backend:n,attrs:{shape:[a,i]}}),l=o.shape,u=new GI("real",l,e),c=new GI("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),f=n.runWebGLProgram(c,h,"float32"),p=Bo({inputs:{real:d,imag:f},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f);const m=ye({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ice(t){const{inputs:e,backend:n}=t,{input:s}=e;return RL(s,!1,n)}const ace={kernelName:Nx,backendName:"webgl",kernelFunc:ice};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oce=class{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ym(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||Yl(r),i==="string"){const a=rn(i,Y(s));return a.fill(r),e.makeTensorInfo(s,i,a)}else{const a=new oce(s,r),o=[[r]];return e.runWebGLProgram(a,[],i,o)}}const lce={kernelName:Ix,backendName:"webgl",kernelFunc:ym};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uce=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cce={kernelName:Tx,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new uce(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI="return floor(x);",hce=dt({opSnippet:HI,packedOpSnippet:HI,cpuKernelImpl:Eie}),dce={kernelName:nh,backendName:"webgl",kernelFunc:hce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fce=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,pce=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,mce=Zn({opSnippet:fce,packedOpSnippet:pce,dtype:"int32"}),gce={kernelName:sh,backendName:"webgl",kernelFunc:mce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yce=class{constructor(e){this.variableNames=["A"];const n=ws(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xce{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=ws(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bce={kernelName:cy,backendName:"webgl",kernelFunc:wce};let Su,L1=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function wce(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,i];if(o||a){const m=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Su==null||m!==L1)&&(L1=m,Su=document.createElement("canvas").getContext("2d",{willReadFrequently:L1})),Su.canvas.width=l,Su.canvas.height=u,Su.drawImage(r,0,0,l,u),r=Su.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=ir.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const f=J().getBool("WEBGL_PACK")?new xce(h):new yce(h),p=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vce(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,m=Qs(c),g=Lt(r.shape,i.shape,l,h,u,d,!1,m);let y;const x=[],w=a!=null,v=o!=null,S=f==="leakyrelu",N=()=>{const T=[r,i],A=(D,O)=>{if(O==="NCHW"&&D.shape.length===1&&D.shape[0]!==1){const U=ye({inputs:{x:D},backend:n,attrs:{shape:[D.shape[0],1,1]}});return x.push(U),U}return D};if(w&&T.push(A(a,c)),v&&T.push(A(o,c)),S){const D=n.makeTensorInfo([],"float32",Do(p,"float32"));T.push(D),x.push(D)}return T};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=kL({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:f,preluActivationWeights:o,leakyreluAlpha:p});else if(g.strideWidth<=2&&m==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const T=f?Ef(f,!0):null,A=new CL(g,w,T,v,S),D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=N();y=n.runWebGLProgram(A,O,"float32",D)}else if(J().getBool("WEBGL_CONV_IM2COL"))y=$L({x:r,filter:i,convInfo:g,backend:n,bias:a,activation:f,preluActivationWeights:o,leakyreluAlpha:p});else{const T=f?Ef(f,!1):null,A=new SL(g,w,T,v,S),D=N();y=n.runWebGLProgram(A,D,"float32")}const I=ye({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(T=>n.disposeIntermediateTensorInfo(T)),I}const Sce={kernelName:mf,backendName:"webgl",kernelFunc:vce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cce(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s,p=[];let m=c;m==null&&(m=[1,1]),R(Dn(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Lt(r.shape,i.shape,l,m,u,h,!0),y=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?Ef(d,y):null,w=[r,i],v=a!=null,S=o!=null,N=d==="leakyrelu";if(v&&w.push(a),S&&w.push(o),N){const D=n.makeTensorInfo([],"float32",Do(f,"float32"));w.push(D),p.push(D)}let I;y?I=new TL(g,v,x,S,N):I=new IL(g,v,x,S,N);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(I,w,"float32",T);return p.forEach(D=>n.disposeIntermediateTensorInfo(D)),A}const kce={kernelName:gf,backendName:"webgl",kernelFunc:Cce};let $ce=class{constructor(e,n,s,r){this.sliceDim=e,this.strides=n,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=Nt(s.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nce(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],o=Y(s.shape),[l,u,c,h]=Eb(s,r),d=ye({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),f=ye({inputs:{x:s},backend:n,attrs:{shape:[Y(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=n.readSync(r.dataId),x=n.bufferSync(s),w=Rie(y,x,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,w.values)}const p=new $ce(a,h,[u,c],s.shape),m=n.runWebGLProgram(p,[f,d],f.dtype),g=ye({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Ice={kernelName:Ex,backendName:"webgl",kernelFunc:Nce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tce=class{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=Nt(this.rank),r=Ece(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Ece(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<t.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=qe(a,r.shape)[0];if(J().get("DEBUG")){const x=n.readSync(i.dataId),w=r.shape[l];for(let v=0;v<x.length;++v){const S=x[v];R(S<=w-1&&S>=0,()=>`GatherV2: the index value ${S} is not in [0, ${w-1}]`)}}const u=Yb(r,i,l,o),c=Y(i.shape),h=[],d=ye({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ye({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const p=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const x=n.bufferSync(f),w=n.bufferSync(d),v=Aie(w,x,p);return h.forEach(S=>n.disposeIntermediateTensorInfo(S)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}const m=new Tce(d.shape,p),g=n.runWebGLProgram(m,[d,f],d.dtype);h.push(g);const y=ye({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}const Rce={kernelName:dp,backendName:"webgl",kernelFunc:AL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ace="return float(a > b);",Dce=`
  return vec4(greaterThan(a, b));
`,_ce=Zn({opSnippet:Ace,packedOpSnippet:Dce,cpuKernelImpl:Die,dtype:"bool"}),Oce={kernelName:fp,backendName:"webgl",kernelFunc:_ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fce="return float(a >= b);",zce=`
  return vec4(greaterThanEqual(a, b));
`,Lce=Zn({opSnippet:Fce,packedOpSnippet:zce,dtype:"bool",cpuKernelImpl:_ie}),Pce={kernelName:rh,backendName:"webgl",kernelFunc:Lce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mce(t){const{inputs:e,backend:n}=t,{input:s}=e;return RL(s,!0,n)}const Bce={kernelName:Rx,backendName:"webgl",kernelFunc:Mce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vce="return float(!isnan(x) && !isinf(x));",Uce=dt({opSnippet:Vce,dtype:"bool"}),Wce={kernelName:ah,backendName:"webgl",kernelFunc:Uce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gce="return float(isinf(x));",Hce=dt({opSnippet:Gce,dtype:"bool"}),jce={kernelName:oh,backendName:"webgl",kernelFunc:Hce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qce="return float(isnan(x));",Xce=dt({opSnippet:qce,dtype:"bool"}),Kce={kernelName:lh,backendName:"webgl",kernelFunc:Xce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yce="return float(a < b);",Qce=`
  return vec4(lessThan(a, b));
`,Zce=Zn({opSnippet:Yce,packedOpSnippet:Qce,cpuKernelImpl:Oie,dtype:"bool"}),Jce={kernelName:mp,backendName:"webgl",kernelFunc:Zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ehe="return float(a <= b);",the=`
  return vec4(lessThanEqual(a, b));
`,nhe=Zn({opSnippet:ehe,packedOpSnippet:the,cpuKernelImpl:Fie,dtype:"bool"}),she={kernelName:gp,backendName:"webgl",kernelFunc:nhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rhe(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=zie(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const ihe={kernelName:Dx,backendName:"webgl",kernelFunc:rhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ahe=jh+`
  return x < 0.0 ? 0./0. : log(x);
`,ohe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,lhe=dt({opSnippet:ahe,packedOpSnippet:ohe,cpuKernelImpl:Lie}),uhe={kernelName:uh,backendName:"webgl",kernelFunc:lhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const che=jh+`
  return log(1.0 + x);
`,hhe=dt({opSnippet:che}),dhe={kernelName:ch,backendName:"webgl",kernelFunc:hhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fhe="return float(a >= 1.0 && b >= 1.0);",phe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,mhe=Zn({opSnippet:fhe,packedOpSnippet:phe,dtype:"bool"}),ghe={kernelName:yp,backendName:"webgl",kernelFunc:mhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yhe="return float(!(x >= 1.0));",xhe=dt({opSnippet:yhe}),bhe={kernelName:xp,backendName:"webgl",kernelFunc:xhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whe="return float(a >= 1.0 || b >= 1.0);",vhe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,She=Zn({opSnippet:whe,packedOpSnippet:vhe,dtype:"bool"}),Che={kernelName:bp,backendName:"webgl",kernelFunc:She};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let khe=class{constructor(e,n,s,r,i){this.variableNames=["x"],this.outputShape=[];const a=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $he{constructor(e,n,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=n,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nhe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=J().getBool("WEBGL_PACK_NORMALIZATION")?new $he(r.shape,i,a,o,l):new khe(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)},Ihe={kernelName:wp,backendName:"webgl",kernelFunc:Nhe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let The=class{constructor(e,n,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ehe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new The(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,i,a],r.dtype)},Rhe={kernelName:_x,backendName:"webgl",kernelFunc:Ehe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ahe(t,e,n,s){const r=Y(e),a=Y(t.shape)/r,o=ye({inputs:{x:t},attrs:{shape:[a,r]},backend:s}),l=hu(o,t.dtype,"max",s),u=ye({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=qe(i,r.shape);let u=l;const c=It(u,o),h=c!=null,d=n.shouldExecuteOnCPU([r]);let f=r;if(h){if(d){const w=n.texData.get(f.dataId).values,v=new Array(o);for(let I=0;I<v.length;I++)v[I]=r.shape[c[I]];const S=GC(w,r.shape,r.dtype,c,v);f=n.makeTensorInfo(v,r.dtype);const N=n.texData.get(f.dataId);N.values=S}else f=h0(r,c,n);u=Pt(u.length,o)}wn("max",u,o);const[p,m]=dn(f.shape,u);let g=p;a&&(g=on(p,l));let y;if(d){const w=n.texData.get(f.dataId).values,v=Pie(w,Y(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);const S=n.texData.get(y.dataId);S.values=v}else y=Ahe(f,m,g,n);return h&&n.disposeIntermediateTensorInfo(f),y}const Dhe={kernelName:vp,backendName:"webgl",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _he=HC+`
  return max(a, b);
`,Ohe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cu+`
  return result;
`,Fhe=Zn({opSnippet:_he,packedOpSnippet:Ohe,cpuKernelImpl:Mie}),zhe={kernelName:hh,backendName:"webgl",kernelFunc:Fhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lhe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;pm(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;R(Dn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=as(r.shape,i,a,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ke(c.inShape,c.outShape))return qs({inputs:{x:r},backend:n});const h=new Rf(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const Phe={kernelName:Sp,backendName:"webgl",kernelFunc:Lhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mhe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=pr(r.shape,i,a,c,o,u,l),d=new qC(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const Bhe={kernelName:Cp,backendName:"webgl",kernelFunc:Mhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vhe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=i-1-e.padInfo.top,l=a-1-e.padInfo.left,u=i*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Uhe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,f=c-1-e.padInfo.left,p=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Whe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=pr(a.shape,o,l,h,u,c),f=new qC(d,"max",!0),p=n.runWebGLProgram(f,[a],a.dtype),m=new Uhe(d),g=n.runWebGLProgram(m,[r,p],a.dtype);return n.disposeIntermediateTensorInfo(p),g}const Ghe={kernelName:Fx,backendName:"webgl",kernelFunc:Whe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hhe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;pm([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=as(o.shape,l,u,1,c,h),f=!0,p=new Rf(d,"max",f),m=n.runWebGLProgram(p,[o],o.dtype),g=new Vhe(d),y=n.runWebGLProgram(g,[r,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}const jhe={kernelName:Ox,backendName:"webgl",kernelFunc:Hhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qhe(t,e,n,s){let r=new Rf(n,"max",!1);const i=s.runWebGLProgram(r,[t],"float32");r=new Rf(n,"max",!0,!0,e);const a=s.runWebGLProgram(r,[t],"float32");return[i,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xhe={kernelName:zx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;R(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];R(Dn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=as(s.shape,r,i,u,a),[h,d]=qhe(s,o,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Khe(t,e,n,s){const r=Y(e),a=Y(t.shape)/r,o=ye({inputs:{x:t},attrs:{shape:[a,r]},backend:s}),l=hu(o,"float32","mean",s),u=ye({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yhe={kernelName:kp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:i}=e,a=n,o=s.shape.length,l=qe(i,s.shape);let u=l;const c=It(u,o),h=c!=null,d=a.shouldExecuteOnCPU([s]),f=[];let p=s;if(h){if(d){const v=a.texData.get(p.dataId).values,S=new Array(o);for(let T=0;T<S.length;T++)S[T]=s.shape[c[T]];const N=GC(v,s.shape,s.dtype,c,S);p=a.makeTensorInfo(S,s.dtype);const I=a.texData.get(p.dataId);I.values=N}else p=h0(s,c,a);f.push(p),u=Pt(u.length,o)}wn("sum",u,o);const[m,g]=dn(p.shape,u);let y=m;r&&(y=on(m,l));const x=Khe(p,g,y,a);for(const w of f)a.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qhe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=qe(i,r.shape);let u=l;const c=It(u,o);let h=r;c!=null&&(h=xs({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Pt(u.length,r.shape.length)),wn("min",u,o);const[d,f]=dn(h.shape,u),p=Y(f),m=ye({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}}),g=hu(m,m.dtype,"min",n);let y;if(a){const x=on(d,l);y=ye({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}const Zhe={kernelName:$p,backendName:"webgl",kernelFunc:Qhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jhe=HC+`
  return min(a, b);
`,ede=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+cu+`
  return result;
`,tde=Zn({opSnippet:Jhe,packedOpSnippet:ede,cpuKernelImpl:Bie}),nde={kernelName:dh,backendName:"webgl",kernelFunc:tde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sde=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,i=Nt(r),a=n.map(c=>c[0]).join(","),o=n.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rde{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((p,m)=>p[0]+e[m]+p[1]);const r=e.length,i=Nt(r),a=n.map(p=>p[0]).join(","),o=n.map((p,m)=>p[0]+e[m]).join(","),l=fs("rc",r),u=fs("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let f="";if(r===1){const p=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${i} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const p=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${i} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${p}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[r-1]} += 1;
          if(${c}) {
            ${p}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ide=({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:i}=n,a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rde(s.shape,r,i):new sde(s.shape,r,i);return e.runWebGLProgram(a,[s],s.dtype)},ade={kernelName:Np,backendName:"webgl",kernelFunc:ide};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ode=`if (b == 0.0) return NAN;
  return mod(a, b);`,lde=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+cu+`
  return result;
`,ude=Zn({opSnippet:ode,packedOpSnippet:lde}),cde={kernelName:fh,backendName:"webgl",kernelFunc:ude};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hde=class{constructor(e,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dde=`
if (a == b) {
  return 1.0;
};
return a / b;`,fde=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,_L=Zn({opSnippet:dde,packedOpSnippet:fde,checkOutOfBounds:!0}),pde={kernelName:Qc,backendName:"webgl",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI="return a - b;",OL=Zn({opSnippet:jI,packedOpSnippet:jI,supportsComplex:!0,cpuKernelImpl:oae}),mde={kernelName:Eh,backendName:"webgl",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=qe([i],r.shape),o=DL({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=on(o.shape,a),u=ye({inputs:{x:o},backend:n,attrs:{shape:l}}),c=OL({inputs:{a:r,b:u},backend:n}),h=EL({inputs:{x:c},backend:n}),d=d0({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),f=ye({inputs:{x:d},backend:n,attrs:{shape:l}}),p=_L({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),p}const gde={kernelName:Gp,backendName:"webgl",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yde(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:FL({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new hde(u,c,i),d=[[a]],f=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),f}const xde={kernelName:Lx,backendName:"webgl",kernelFunc:yde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bde=Qr+`
  return -x;
`,wde=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function vde(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const i=n.texData.get(s.dataId),[a,o]=Uie(i.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}let r;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ja(s.shape,wde):r=new zi(s.shape,bde),n.runWebGLProgram(r,[s],s.dtype)}const Sde={kernelName:Ip,backendName:"webgl",kernelFunc:vde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cde=Ib;function kde(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=Cde(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const $de={kernelName:Px,backendName:"webgl",kernelFunc:kde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nde=QS;function Ide(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=Nde(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const Tde={kernelName:Q2,backendName:"webgl",kernelFunc:Ide};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ede=Tb;function Rde(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a,f=o,p=l,m=u,{selectedIndices:g,selectedScores:y}=Ede(c,h,d,f,p,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Ade={kernelName:Mx,backendName:"webgl",kernelFunc:Rde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dde=class{constructor(e,n,s,r){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _de=t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=Y(r.shape),c=new Dde(u,a,o,l),h=ye({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const f=[...r.shape,a],p=ye({inputs:{x:d},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),p},Ode={kernelName:Rp,backendName:"webgl",kernelFunc:_de};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ly(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const r=gm({inputs:{input:s},backend:n}),i=Ly({inputs:{x:r},backend:n}),a=f0({inputs:{input:s},backend:n}),o=Ly({inputs:{x:a},backend:n}),l=Bo({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}else return ym({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Fde={kernelName:qp,backendName:"webgl",kernelFunc:Ly};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=gm({inputs:{input:s},backend:n}),i=zL({inputs:{x:r},backend:n}),a=f0({inputs:{input:s},backend:n}),o=Ly({inputs:{x:a},backend:n}),l=Bo({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}else return ym({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const zde={kernelName:Ep,backendName:"webgl",kernelFunc:zL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lde(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return Pv({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{_s(i,c.shape,"All tensors passed to stack must have matching shapes"),R(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=Pv({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),u=vL({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}const Pde={kernelName:Ap,backendName:"webgl",kernelFunc:Lde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mde=class{constructor(e,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,i=Nt(r),a=n.map(u=>u[0]).join(","),o=n.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bde{constructor(e,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,i=Nt(r),a=n.map(m=>m[0]).join(","),o=n.map((m,g)=>m[0]+e[g]).join(","),l=fs("rc",r),u=fs("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],f=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let m=0,g=r===1?2:4;m<g;m++)p+=`
        ${d[m]}
        if (${f}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;p+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;if(Y(r.shape)===0){const u=i.map((c,h)=>c[0]+r.shape[h]+c[1]);return ym({backend:n,attrs:{shape:u,value:a,dtype:r.dtype}})}const o=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bde(r.shape,i,a):new Mde(r.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[r],r.dtype,l)},Vde={kernelName:Dp,backendName:"webgl",kernelFunc:LL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ude=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Wde=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+cu+`
  return result;
`,Gde=Zn({opSnippet:Ude,packedOpSnippet:Wde}),Hde={kernelName:mh,backendName:"webgl",kernelFunc:Gde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jde(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=qe(i,r.shape);let c=u;const h=It(c,o);let d=r;h!=null&&(d=xs({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Pt(c.length,o),l.push(d)),wn("prod",c,o);let f;if(n.shouldExecuteOnCPU([d])){const p=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=Gie(d.shape,d.dtype,p,c);f=n.makeTensorInfo(g,y,m)}else{const[p,m]=dn(d.shape,c),g=Y(m),y=ye({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=rb(r.dtype),w=hu(y,x,"prod",n);f=ye({inputs:{x:w},backend:n,attrs:{shape:p}}),l.push(y),l.push(w)}if(a){l.push(f);const p=on(f.shape,u);f=ye({inputs:{x:f},backend:n,attrs:{shape:p}})}return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),f}const qde={kernelName:Op,backendName:"webgl",kernelFunc:jde};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xde(t){const{inputs:e,backend:n,attrs:s}=t,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map(y=>n.readSync(y.dataId)),u=r.map(y=>y.shape),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,f,p]=Hie(l,u,c,i.shape,i.dtype,h,a.shape,o),m=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(p,i.dtype,f);return m.concat([g])}const Kde={kernelName:Z2,backendName:"webgl",kernelFunc:Xde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yde(t){const{inputs:e,backend:n}=t,{starts:s,limits:r,deltas:i}=e,a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=jie(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Qde={kernelName:J2,backendName:"webgl",kernelFunc:Yde};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zde(t){const{inputs:e,backend:n,attrs:s}=t,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map(g=>n.readSync(g.dataId)),f=o.map(g=>g.shape),[p,m]=qie(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,f,l);return n.makeTensorInfo(p,i.dtype,m)}const Jde={kernelName:eS,backendName:"webgl",kernelFunc:Zde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:i,dtype:a}=n,o=Xie(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},efe={kernelName:Bx,backendName:"webgl",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tfe="return 1.0 / x;",nfe=dt({opSnippet:tfe}),sfe={kernelName:gh,backendName:"webgl",kernelFunc:nfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rfe=Qr+`
  return (x < 0.0) ? 0.0 : x;
`,ife=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,afe=dt({opSnippet:rfe,packedOpSnippet:ife}),ofe={kernelName:yh,backendName:"webgl",kernelFunc:afe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lfe=Qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ufe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cfe=dt({opSnippet:lfe,packedOpSnippet:ufe}),hfe={kernelName:xh,backendName:"webgl",kernelFunc:cfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dfe=class{constructor(e,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?o-1:o,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ffe{constructor(e,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?o-1:o,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pfe(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ffe(r.shape,l,u,i,a):new dfe(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],"float32")}const mfe={kernelName:Lp,backendName:"webgl",kernelFunc:pfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gfe=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,a,o]=e,l=[s&&a>1?r-1:r,s&&o>1?i-1:i],u=[s&&a>1?a-1:a,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,f=1/h,p=Math.ceil(d)*2+2,m=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yfe(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new gfe(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const xfe={kernelName:Wx,backendName:"webgl",kernelFunc:yfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bfe=class{constructor(e,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?o-1:o,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;i?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wfe{constructor(e,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,n,s,u];const c=[r&&n>1?o-1:o,r&&s>1?l-1:l],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;i?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vfe(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wfe(r.shape,l,u,i,a):new bfe(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],r.dtype)}const Sfe={kernelName:zp,backendName:"webgl",kernelFunc:vfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cfe=class{constructor(e,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,a,o]=e,l=[s&&a>1?r-1:r,s&&o>1?i-1:i],u=[s&&a>1?a-1:a,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,f=1/h,p=Math.ceil(d)*2+2,m=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kfe(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,o=new Cfe(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const $fe={kernelName:Ux,backendName:"webgl",kernelFunc:kfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nfe=class{constructor(e,n){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=o=>n.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,i=e.map((o,l)=>r(l)).join(","),a=Nt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ife{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=fs("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,o=Nt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${i}){
            result.g = ${u(r.slice())};
          }
          if(${a}) {
            result.b = ${c(r.slice())};
            if(${i}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function u(p){return p[s-1]="("+p[s-1]+" + 1)",d(p)}function c(p){return p[s-2]="("+p[s-2]+" + 1)",d(p)}function h(p){return p[s-1]="("+p[s-1]+" + 1)",p[s-2]="("+p[s-2]+" + 1)",d(p)}function d(p){const m=e.map((x,w)=>f(w,p)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function f(p,m){return n.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${m[p]} - 1`:`${m[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tfe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s,a=r.shape.length,o=qe(i,r.shape);if(a===0)return qs({inputs:{x:r},backend:n});const l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ife(r.shape,o):new Nfe(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}const Efe={kernelName:Pp,backendName:"webgl",kernelFunc:Tfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rfe=class{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let i="";typeof n=="number"?i=`float outputValue = ${n.toFixed(2)};`:i=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Afe={kernelName:nb,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new Rfe(s.shape,i),[u,c]=Fb(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dfe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,_fe=dt({opSnippet:Dfe}),Ofe={kernelName:bh,backendName:"webgl",kernelFunc:_fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ffe="return inversesqrt(x);",zfe=dt({opSnippet:Ffe,cpuKernelImpl:Kie}),Lfe={kernelName:wh,backendName:"webgl",kernelFunc:zfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XC=class{constructor(e,n,s,r,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=Nt(i.length),c=Nt(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pfe{constructor(e,n,s,r,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=Nt(i.length),c=Nt(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=n>1?"strides[j]":"strides",x=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mfe(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ta(i,r,a),d=[h/u,u];if(h===0)return n.makeTensorInfo(a,r.dtype);const f=ye({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=ye({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;J().getBool("WEBGL_PACK")?g=new Pfe(l,o,f.shape.length,p.shape.length,c,d):g=new XC(l,o,f.shape.length,p.shape.length,c,d);const y=n.runWebGLProgram(g,[p,f,m],p.dtype),x=ye({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}const Bfe={kernelName:Gx,backendName:"webgl",kernelFunc:Mfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vfe=class{constructor(e,n,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const i="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,o=J().getNumber("WEBGL_VERSION")===2?i:a,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ufe(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:i}=e,{side:a}=s,o=new Vfe(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}const Wfe={kernelName:jx,backendName:"webgl",kernelFunc:Ufe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gfe=class{constructor(e,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<n.length;c++)u.push(`${o[c]}`),c<e&&l.push(`${o[c]}`);r=l.join(),i=u.join()}const a=Nt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hfe(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e,a=new Gfe(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],Vn(r.dtype,i.dtype))}const jfe={kernelName:Mp,backendName:"webgl",kernelFunc:Hfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qfe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${nm};
  float scale = ${sm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Xfe=dt({opSnippet:qfe}),Kfe={kernelName:vh,backendName:"webgl",kernelFunc:Xfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yfe=jh+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Qfe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Zfe=dt({opSnippet:Yfe,packedOpSnippet:Qfe,cpuKernelImpl:Qie}),Jfe={kernelName:$h,backendName:"webgl",kernelFunc:Zfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,tpe=dt({opSnippet:epe}),npe={kernelName:kh,backendName:"webgl",kernelFunc:tpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spe=jh+`
  return sin(x);
`,rpe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${cu}
  return result;
`,ipe=dt({opSnippet:spe,packedOpSnippet:rpe}),ape={kernelName:Sh,backendName:"webgl",kernelFunc:ipe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ope=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,lpe=dt({opSnippet:ope}),upe={kernelName:Ch,backendName:"webgl",kernelFunc:lpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cpe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,hpe=dt({opSnippet:cpe}),dpe={kernelName:Nh,backendName:"webgl",kernelFunc:hpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fpe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;R(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((y,x)=>y*x),l=[[0,0]];l.push(...a);for(let y=1+i.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=LL({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=su(c.shape,i,o,!1),d=ru(h.length,i.length,!1),f=iu(c.shape,i,o,!1),p=ye({inputs:{x:c},backend:n,attrs:{shape:h}}),m=xs({inputs:{x:p},backend:n,attrs:{perm:d}}),g=ye({inputs:{x:m},backend:n,attrs:{shape:f}});return u.push(c),u.push(p),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},ppe={kernelName:Up,backendName:"webgl",kernelFunc:fpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mpe(t){const{inputs:e,backend:n}=t,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,f,p,m]=Jie(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const gpe={kernelName:tS,backendName:"webgl",kernelFunc:mpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ype(t){const{inputs:e,backend:n}=t,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=eae(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const xpe={kernelName:nS,backendName:"webgl",kernelFunc:ype};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bpe(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=lL(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const wpe={kernelName:qx,backendName:"webgl",kernelFunc:bpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vpe(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=lL(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const Spe={kernelName:Xx,backendName:"webgl",kernelFunc:vpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cpe(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ta(i,r,o),f=!1;if(i.dtype==="string"){const y=n.bufferSync(r),x=n.bufferSync(i),w=ci(n.readSync(a.dataId)[0]),v=Yie(y,x,o,d,c,u,l,h,w,f);return n.makeTensorInfo(o,v.dtype,v.values)}const p=new XC(u,l,r.shape.length,i.shape.length,h,[d,1],f),m=n.runWebGLProgram(p,[i,r,a],i.dtype),g=ye({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}const kpe={kernelName:Kx,backendName:"webgl",kernelFunc:Cpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=qe(a,r.shape)[0],l=Kb(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const f=[...h];f[o]=d;const p=qh({inputs:{x:r},backend:n,attrs:{begin:c,size:f}});return c[o]+=d,p})}const Npe={kernelName:Wp,backendName:"webgl",kernelFunc:$pe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI="return sqrt(x);",Ipe=dt({opSnippet:qI,packedOpSnippet:qI,cpuKernelImpl:tae}),Tpe={kernelName:Ih,backendName:"webgl",kernelFunc:Ipe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Epe="return x * x;",Rpe=dt({opSnippet:Epe}),Ape={kernelName:Yx,backendName:"webgl",kernelFunc:Rpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI="return (a - b) * (a - b);",Dpe=Zn({opSnippet:XI,packedOpSnippet:XI}),_pe={kernelName:Th,backendName:"webgl",kernelFunc:Dpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ope(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const i=n.readSync(r.dataId),a=pi(i),o=nae(a,"string",s);return n.makeTensorInfo(r.shape,"string",o)}const Fpe={kernelName:Qx,backendName:"webgl",kernelFunc:Ope};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zpe({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=Qr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new zi(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const Lpe={kernelName:_h,backendName:"webgl",kernelFunc:zpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ppe=class{constructor(e,n,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=Nt(s.length),a=Nt(s.length);let o="";if(r===1)o="coords * strides + begin";else{let l=0;o=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${n});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:v}=Db(r.shape,i,a,o,l,u,c,h,d);let S;if(m)S=ye({inputs:{x:r},backend:n,attrs:{shape:p}});else if(g||y){R(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const I=Ab(x,w,v),T=qh({inputs:{x:r},backend:n,attrs:{begin:x,size:I}});S=ye({inputs:{x:T},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(T)}else if(n.shouldExecuteOnCPU([r])){const T=n.readSync(r.dataId),A=Ge(r.shape,r.dtype,T),D=sae(f,A,v,x);S=n.makeTensorInfo(p,r.dtype,D.values)}else{const T=new Ppe(x,v,f);S=n.runWebGLProgram(T,[r],r.dtype)}const N=ye({inputs:{x:S},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(S),N}const Bpe={kernelName:Zx,backendName:"webgl",kernelFunc:Mpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vpe(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),f=n.readSync(h.dataId),[p,m]=rae(d,f,r,i,a,o,l,u);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}const Upe={kernelName:Jx,backendName:"webgl",kernelFunc:Vpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wpe(t){const{inputs:e,backend:n,attrs:s}=t,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=iae(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const Gpe={kernelName:sS,backendName:"webgl",kernelFunc:Wpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hpe(t){const{inputs:e,backend:n,attrs:s}=t,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=aae(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const jpe={kernelName:rS,backendName:"webgl",kernelFunc:Hpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe="return tan(x);",Xpe=dt({opSnippet:qpe}),Kpe={kernelName:Rh,backendName:"webgl",kernelFunc:Xpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ype=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Qpe=dt({opSnippet:Ype}),Zpe={kernelName:Ah,backendName:"webgl",kernelFunc:Qpe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jpe(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:r,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ta(a,i,r.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(r.shape,i.dtype);const f=ye({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),p=ye({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=ye({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new XC(l,o,f.shape.length,p.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[p,f,m],m.dtype),x=ye({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),x}const eme={kernelName:Hx,backendName:"webgl",kernelFunc:Jpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tme=class{constructor(e,n){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*n[a];this.outputShape=s,this.rank=s.length;const r=Nt(this.rank),i=nme(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function nme(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<t.length;r++)s.push(`imod(${n[r]}, ${t[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>ci(d)):l,c=Ge(r.shape,r.dtype,u),h=lae(c,i);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new tme(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const sme={kernelName:Dh,backendName:"webgl",kernelFunc:ML};let rme=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},ime=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function KI(t){let e=1;for(;e<t;)e*=2;return e}function ame(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s,o=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||i>l){const D=n.readSync(r.dataId),[O,U]=uae(D,u,r.dtype,i,a);return[n.makeTensorInfo(O.shape,O.dtype,O.values),n.makeTensorInfo(U.shape,U.dtype,U.values)]}if(i===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,ym({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,f=d?n.unpackTensor(r):r,m=Y(u)/c,g=ye({inputs:{x:f},attrs:{shape:[m,c]},backend:n});d&&Xo(n,f);const y=KI(i),x=KI(c);let w=null;const v=()=>w===null?[g,g]:[g,w],S=(D,O,U)=>{const B=v(),q=new rme(U),L=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[D],[O]],Z=w;w=n.runWebGLProgram(q,B,"int32",L),Xo(n,Z)};for(let D=1;D<y;D*=2){const O=D*2;for(let U=D;U>=1;U/=2)S(O,U,[m,x])}for(let D=x;D>y;D/=2){const O=v(),U=new ime([m,D/2]),q=[[c],[w===null?1:0],[y]],H=w;w=n.runWebGLProgram(U,O,"int32",q),Xo(n,H);const L=y/2,Z=L*2;for(let K=L;K>=1;K/=2)S(Z,K,w.shape)}let N=w;w=qh({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,i]}}),Xo(n,N);let I=AL({inputs:{x:g,indices:w},backend:n,attrs:{axis:1,batchDims:1}});Xo(n,g);const T=u.slice(0,-1);T.push(i),N=w,w=ye({inputs:{x:w},attrs:{shape:T},backend:n}),Xo(n,N);const A=I;return I=ye({inputs:{x:I},attrs:{shape:T},backend:n}),Xo(n,A),[I,w]}const ome={kernelName:eb,backendName:"webgl",kernelFunc:ame};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lme=class{constructor(e,n,s,r,i,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ume(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,f]=r.shape,[p,m]=u??[h,d],g=[c,p,m,f],y=new lme(h,d,a,o,l,g);return n.runWebGLProgram(y,[r,i],"float32")}const cme={kernelName:tb,backendName:"webgl",kernelFunc:ume};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hme(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;pm(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=cae(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const dme={kernelName:iS,backendName:"webgl",kernelFunc:hme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fme(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==i&&(u[c++]=a.shape[m]);const h=[],d=new Array(o).fill(0),f=a.shape.slice();f[i]=1;const p=new Array(l);for(let m=0;m<p.length;m++){d[i]=m;const g=qh({inputs:{x:a},backend:n,attrs:{begin:d,size:f}}),y=ye({inputs:{x:g},backend:n,attrs:{shape:u}});p[m]=y,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),p}const pme={kernelName:Hp,backendName:"webgl",kernelFunc:fme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mme{constructor(e,n){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,i=e.inSize,a=e.numSegments,o=a*Math.ceil(i/s);this.outputShape=[r,o];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gme(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=It([u],o);let h=r;c!=null&&(h=xs({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Pt(1,o)[0]);const d=oC(h.shape,u,a),f=Y([h.shape[u]]),p=ye({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(p);const m=rb(r.dtype),g=(v,S,N,I,T)=>{const A=v.shape[0],D=v.shape[1],O=g_(D,T),U={windowSize:O,inSize:D,batchSize:A,numSegments:T},B=new mme(U,S),q=n.compileAndRun(B,[v,N],I);if(l.push(q),q.shape[1]===T)return q;const H=PL({backend:n,attrs:{start:0,stop:T,step:1,dtype:"float32"}}),L=ML({inputs:{x:H},backend:n,attrs:{reps:[D/O]}});return l.push(H),l.push(L),g(q,S,L,I,T)},y=g(p,"unsortedSegmentSum",i,m,a),x=ye({inputs:{x:y},backend:n,attrs:{shape:d}});let w=x;if(c!=null){l.push(x);const v=Ji(c);w=xs({inputs:{x:w},backend:n,attrs:{perm:v}})}return l.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const yme={kernelName:jp,backendName:"webgl",kernelFunc:gme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xme=[toe,soe,aoe,uoe,hoe,poe,goe,xoe,Soe,koe,Ioe,Roe,_oe,Loe,Boe,Uoe,Goe,Xoe,Yoe,Zoe,nle,ule,hle,mle,yle,Cle,$le,Ele,Pae,Dle,Lle,Vle,qle,Yle,Zle,eue,nue,aue,uue,due,pue,gue,xue,vue,Cue,Iue,Eue,Due,Fue,Lue,Vue,Hue,Kue,Zue,tce,nce,rce,ace,lce,cce,dce,gce,bce,Sce,kce,Ice,Rce,Oce,Pce,Lae,Bce,Fle,Wce,jce,Kce,Bae,Jce,she,ihe,uhe,dhe,ghe,bhe,Che,Ihe,Rhe,Dhe,zhe,Phe,Bhe,Ghe,jhe,Xhe,Yhe,Zhe,nde,ade,cde,xde,Wae,Sde,$de,Tde,Ade,ble,Ode,zde,Pde,Vde,Hde,Uae,qde,Kde,Qde,Jde,efe,wle,pde,sfe,ofe,hfe,Hae,mfe,xfe,Sfe,$fe,Efe,Afe,Ofe,Lfe,Bfe,Wfe,jfe,Kfe,Jfe,npe,ape,upe,ole,gde,dpe,ppe,gpe,xpe,wpe,Spe,kpe,Npe,Tpe,Ape,_pe,Fpe,Lpe,Bpe,Upe,Gpe,jpe,mde,Zae,Kpe,Zpe,eme,sme,ome,cme,Jae,dme,pme,yme,Fde];for(const t of xme)aS(t);var bme={};(function(){var t;function e(b){var C=0;return function(){return C<b.length?{done:!1,value:b[C++]}:{done:!0}}}var n=typeof Object.defineProperties=="function"?Object.defineProperty:function(b,C,$){return b==Array.prototype||b==Object.prototype||(b[C]=$.value),b};function s(b){b=[typeof globalThis=="object"&&globalThis,b,typeof window=="object"&&window,typeof self=="object"&&self,typeof Li=="object"&&Li];for(var C=0;C<b.length;++C){var $=b[C];if($&&$.Math==Math)return $}throw Error("Cannot find global object")}var r=s(this);function i(b,C){if(C)e:{var $=r;b=b.split(".");for(var E=0;E<b.length-1;E++){var F=b[E];if(!(F in $))break e;$=$[F]}b=b[b.length-1],E=$[b],C=C(E),C!=E&&C!=null&&n($,b,{configurable:!0,writable:!0,value:C})}}i("Symbol",function(b){function C(P){if(this instanceof C)throw new TypeError("Symbol is not a constructor");return new $(E+(P||"")+"_"+F++,P)}function $(P,z){this.h=P,n(this,"description",{configurable:!0,writable:!0,value:z})}if(b)return b;$.prototype.toString=function(){return this.h};var E="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",F=0;return C}),i("Symbol.iterator",function(b){if(b)return b;b=Symbol("Symbol.iterator");for(var C="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),$=0;$<C.length;$++){var E=r[C[$]];typeof E=="function"&&typeof E.prototype[b]!="function"&&n(E.prototype,b,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return b});function a(b){return b={next:b},b[Symbol.iterator]=function(){return this},b}function o(b){var C=typeof Symbol<"u"&&Symbol.iterator&&b[Symbol.iterator];return C?C.call(b):{next:e(b)}}function l(b){if(!(b instanceof Array)){b=o(b);for(var C,$=[];!(C=b.next()).done;)$.push(C.value);b=$}return b}var u=typeof Object.assign=="function"?Object.assign:function(b,C){for(var $=1;$<arguments.length;$++){var E=arguments[$];if(E)for(var F in E)Object.prototype.hasOwnProperty.call(E,F)&&(b[F]=E[F])}return b};i("Object.assign",function(b){return b||u});var c=typeof Object.create=="function"?Object.create:function(b){function C(){}return C.prototype=b,new C},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var f={a:!0},p={};try{p.__proto__=f,d=p.a;break e}catch{}d=!1}h=d?function(b,C){if(b.__proto__=C,b.__proto__!==C)throw new TypeError(b+" is not extensible");return b}:null}var m=h;function g(b,C){if(b.prototype=c(C.prototype),b.prototype.constructor=b,m)m(b,C);else for(var $ in C)if($!="prototype")if(Object.defineProperties){var E=Object.getOwnPropertyDescriptor(C,$);E&&Object.defineProperty(b,$,E)}else b[$]=C[$];b.za=C.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function x(b){if(b.m)throw new TypeError("Generator is already running");b.m=!0}y.prototype.u=function(b){this.i=b};function w(b,C){b.l={ma:C,na:!0},b.h=b.s||b.v}y.prototype.return=function(b){this.l={return:b},this.h=this.v};function v(b,C,$){return b.h=$,{value:C}}function S(b){this.h=new y,this.i=b}function N(b,C){x(b.h);var $=b.h.j;return $?I(b,"return"in $?$.return:function(E){return{value:E,done:!0}},C,b.h.return):(b.h.return(C),T(b))}function I(b,C,$,E){try{var F=C.call(b.h.j,$);if(!(F instanceof Object))throw new TypeError("Iterator result "+F+" is not an object");if(!F.done)return b.h.m=!1,F;var P=F.value}catch(z){return b.h.j=null,w(b.h,z),T(b)}return b.h.j=null,E.call(b.h,P),T(b)}function T(b){for(;b.h.h;)try{var C=b.i(b.h);if(C)return b.h.m=!1,{value:C.value,done:!1}}catch($){b.h.i=void 0,w(b.h,$)}if(b.h.m=!1,b.h.l){if(C=b.h.l,b.h.l=null,C.na)throw C.ma;return{value:C.return,done:!0}}return{value:void 0,done:!0}}function A(b){this.next=function(C){return x(b.h),b.h.j?C=I(b,b.h.j.next,C,b.h.u):(b.h.u(C),C=T(b)),C},this.throw=function(C){return x(b.h),b.h.j?C=I(b,b.h.j.throw,C,b.h.u):(w(b.h,C),C=T(b)),C},this.return=function(C){return N(b,C)},this[Symbol.iterator]=function(){return this}}function D(b){function C(E){return b.next(E)}function $(E){return b.throw(E)}return new Promise(function(E,F){function P(z){z.done?E(z.value):Promise.resolve(z.value).then(C,$).then(P,F)}P(b.next())})}function O(b){return D(new A(new S(b)))}i("Promise",function(b){function C(z){this.i=0,this.j=void 0,this.h=[],this.u=!1;var X=this.l();try{z(X.resolve,X.reject)}catch(te){X.reject(te)}}function $(){this.h=null}function E(z){return z instanceof C?z:new C(function(X){X(z)})}if(b)return b;$.prototype.i=function(z){if(this.h==null){this.h=[];var X=this;this.j(function(){X.m()})}this.h.push(z)};var F=r.setTimeout;$.prototype.j=function(z){F(z,0)},$.prototype.m=function(){for(;this.h&&this.h.length;){var z=this.h;this.h=[];for(var X=0;X<z.length;++X){var te=z[X];z[X]=null;try{te()}catch(ce){this.l(ce)}}}this.h=null},$.prototype.l=function(z){this.j(function(){throw z})},C.prototype.l=function(){function z(ce){return function(xe){te||(te=!0,ce.call(X,xe))}}var X=this,te=!1;return{resolve:z(this.I),reject:z(this.m)}},C.prototype.I=function(z){if(z===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(z instanceof C)this.L(z);else{e:switch(typeof z){case"object":var X=z!=null;break e;case"function":X=!0;break e;default:X=!1}X?this.F(z):this.s(z)}},C.prototype.F=function(z){var X=void 0;try{X=z.then}catch(te){this.m(te);return}typeof X=="function"?this.M(X,z):this.s(z)},C.prototype.m=function(z){this.v(2,z)},C.prototype.s=function(z){this.v(1,z)},C.prototype.v=function(z,X){if(this.i!=0)throw Error("Cannot settle("+z+", "+X+"): Promise already settled in state"+this.i);this.i=z,this.j=X,this.i===2&&this.K(),this.H()},C.prototype.K=function(){var z=this;F(function(){if(z.D()){var X=r.console;typeof X<"u"&&X.error(z.j)}},1)},C.prototype.D=function(){if(this.u)return!1;var z=r.CustomEvent,X=r.Event,te=r.dispatchEvent;return typeof te>"u"?!0:(typeof z=="function"?z=new z("unhandledrejection",{cancelable:!0}):typeof X=="function"?z=new X("unhandledrejection",{cancelable:!0}):(z=r.document.createEvent("CustomEvent"),z.initCustomEvent("unhandledrejection",!1,!0,z)),z.promise=this,z.reason=this.j,te(z))},C.prototype.H=function(){if(this.h!=null){for(var z=0;z<this.h.length;++z)P.i(this.h[z]);this.h=null}};var P=new $;return C.prototype.L=function(z){var X=this.l();z.T(X.resolve,X.reject)},C.prototype.M=function(z,X){var te=this.l();try{z.call(X,te.resolve,te.reject)}catch(ce){te.reject(ce)}},C.prototype.then=function(z,X){function te(_e,$e){return typeof _e=="function"?function(We){try{ce(_e(We))}catch(st){xe(st)}}:$e}var ce,xe,Ue=new C(function(_e,$e){ce=_e,xe=$e});return this.T(te(z,ce),te(X,xe)),Ue},C.prototype.catch=function(z){return this.then(void 0,z)},C.prototype.T=function(z,X){function te(){switch(ce.i){case 1:z(ce.j);break;case 2:X(ce.j);break;default:throw Error("Unexpected state: "+ce.i)}}var ce=this;this.h==null?P.i(te):this.h.push(te),this.u=!0},C.resolve=E,C.reject=function(z){return new C(function(X,te){te(z)})},C.race=function(z){return new C(function(X,te){for(var ce=o(z),xe=ce.next();!xe.done;xe=ce.next())E(xe.value).T(X,te)})},C.all=function(z){var X=o(z),te=X.next();return te.done?E([]):new C(function(ce,xe){function Ue(We){return function(st){_e[We]=st,$e--,$e==0&&ce(_e)}}var _e=[],$e=0;do _e.push(void 0),$e++,E(te.value).T(Ue(_e.length-1),xe),te=X.next();while(!te.done)})},C});function U(b,C){b instanceof String&&(b+="");var $=0,E=!1,F={next:function(){if(!E&&$<b.length){var P=$++;return{value:C(P,b[P]),done:!1}}return E=!0,{done:!0,value:void 0}}};return F[Symbol.iterator]=function(){return F},F}i("Array.prototype.keys",function(b){return b||function(){return U(this,function(C){return C})}}),i("Array.prototype.fill",function(b){return b||function(C,$,E){var F=this.length||0;for(0>$&&($=Math.max(0,F+$)),(E==null||E>F)&&(E=F),E=Number(E),0>E&&(E=Math.max(0,F+E)),$=Number($||0);$<E;$++)this[$]=C;return this}});function B(b){return b||Array.prototype.fill}i("Int8Array.prototype.fill",B),i("Uint8Array.prototype.fill",B),i("Uint8ClampedArray.prototype.fill",B),i("Int16Array.prototype.fill",B),i("Uint16Array.prototype.fill",B),i("Int32Array.prototype.fill",B),i("Uint32Array.prototype.fill",B),i("Float32Array.prototype.fill",B),i("Float64Array.prototype.fill",B),i("Object.is",function(b){return b||function(C,$){return C===$?C!==0||1/C===1/$:C!==C&&$!==$}}),i("Array.prototype.includes",function(b){return b||function(C,$){var E=this;E instanceof String&&(E=String(E));var F=E.length;for($=$||0,0>$&&($=Math.max($+F,0));$<F;$++){var P=E[$];if(P===C||Object.is(P,C))return!0}return!1}}),i("String.prototype.includes",function(b){return b||function(C,$){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(C instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(C,$||0)!==-1}});var q=this||self;function H(b,C){b=b.split(".");var $=q;b[0]in $||typeof $.execScript>"u"||$.execScript("var "+b[0]);for(var E;b.length&&(E=b.shift());)b.length||C===void 0?$[E]&&$[E]!==Object.prototype[E]?$=$[E]:$=$[E]={}:$[E]=C}function L(b){var C;e:{if((C=q.navigator)&&(C=C.userAgent))break e;C=""}return C.indexOf(b)!=-1}var Z=Array.prototype.map?function(b,C){return Array.prototype.map.call(b,C,void 0)}:function(b,C){for(var $=b.length,E=Array($),F=typeof b=="string"?b.split(""):b,P=0;P<$;P++)P in F&&(E[P]=C.call(void 0,F[P],P,b));return E},K={},ee=null;function se(b){var C=b.length,$=3*C/4;$%3?$=Math.floor($):"=.".indexOf(b[C-1])!=-1&&($="=.".indexOf(b[C-2])!=-1?$-2:$-1);var E=new Uint8Array($),F=0;return ie(b,function(P){E[F++]=P}),F!==$?E.subarray(0,F):E}function ie(b,C){function $(te){for(;E<b.length;){var ce=b.charAt(E++),xe=ee[ce];if(xe!=null)return xe;if(!/^[\s\xa0]*$/.test(ce))throw Error("Unknown base64 encoding at char: "+ce)}return te}ue();for(var E=0;;){var F=$(-1),P=$(0),z=$(64),X=$(64);if(X===64&&F===-1)break;C(F<<2|P>>4),z!=64&&(C(P<<4&240|z>>2),X!=64&&C(z<<6&192|X))}}function ue(){if(!ee){ee={};for(var b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),C=["+/=","+/","-_=","-_.","-_"],$=0;5>$;$++){var E=b.concat(C[$].split(""));K[$]=E;for(var F=0;F<E.length;F++){var P=E[F];ee[P]===void 0&&(ee[P]=F)}}}}var le=typeof Uint8Array<"u",de=!(L("Trident")||L("MSIE"))&&typeof q.btoa=="function";function he(b){if(!de){var C;C===void 0&&(C=0),ue(),C=K[C];for(var $=Array(Math.floor(b.length/3)),E=C[64]||"",F=0,P=0;F<b.length-2;F+=3){var z=b[F],X=b[F+1],te=b[F+2],ce=C[z>>2];z=C[(z&3)<<4|X>>4],X=C[(X&15)<<2|te>>6],te=C[te&63],$[P++]=ce+z+X+te}switch(ce=0,te=E,b.length-F){case 2:ce=b[F+1],te=C[(ce&15)<<2]||E;case 1:b=b[F],$[P]=C[b>>2]+C[(b&3)<<4|ce>>4]+te+E}return $.join("")}for(C="";10240<b.length;)C+=String.fromCharCode.apply(null,b.subarray(0,10240)),b=b.subarray(10240);return C+=String.fromCharCode.apply(null,b),btoa(C)}var ke=RegExp("[-_.]","g");function De(b){switch(b){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Le(b){if(!de)return se(b);ke.test(b)&&(b=b.replace(ke,De)),b=atob(b);for(var C=new Uint8Array(b.length),$=0;$<b.length;$++)C[$]=b.charCodeAt($);return C}var Fe;function Xe(){return Fe||(Fe=new Uint8Array(0))}var He={},yt=typeof Uint8Array.prototype.slice=="function",je=0,nt=0;function St(b){var C=0>b;b=Math.abs(b);var $=b>>>0;b=Math.floor((b-$)/4294967296),C&&($=o(_t($,b)),C=$.next().value,b=$.next().value,$=C),je=$>>>0,nt=b>>>0}var wt=typeof BigInt=="function";function _t(b,C){return C=~C,b?b=~b+1:C+=1,[b,C]}function Tt(b,C){this.i=b>>>0,this.h=C>>>0}function yr(b){if(!b)return mn||(mn=new Tt(0,0));if(!/^-?\d+$/.test(b))return null;if(16>b.length)St(Number(b));else if(wt)b=BigInt(b),je=Number(b&BigInt(4294967295))>>>0,nt=Number(b>>BigInt(32)&BigInt(4294967295));else{var C=+(b[0]==="-");nt=je=0;for(var $=b.length,E=C,F=($-C)%6+C;F<=$;E=F,F+=6)E=Number(b.slice(E,F)),nt*=1e6,je=1e6*je+E,4294967296<=je&&(nt+=je/4294967296|0,je%=4294967296);C&&(C=o(_t(je,nt)),b=C.next().value,C=C.next().value,je=b,nt=C)}return new Tt(je,nt)}var mn;function Zr(b,C){return Error("Invalid wire type: "+b+" (at position "+C+")")}function Jn(){return Error("Failed to read varint, encoding is invalid.")}function Ci(b,C){return Error("Tried to read past the end of the data "+C+" > "+b)}function On(){throw Error("Invalid UTF8")}function xr(b,C){return C=String.fromCharCode.apply(null,C),b==null?C:b+C}var Js=void 0,br,ki=typeof TextDecoder<"u",La,Qh=typeof TextEncoder<"u",mu;function bm(b){if(b!==He)throw Error("illegal external caller")}function $i(b,C){if(bm(C),this.V=b,b!=null&&b.length===0)throw Error("ByteString should be constructed with non-empty values")}function Zh(){return mu||(mu=new $i(null,He))}function wm(b){bm(He);var C=b.V;return C=C==null||le&&C!=null&&C instanceof Uint8Array?C:typeof C=="string"?Le(C):null,C==null?C:b.V=C}function DP(b){if(typeof b=="string")return{buffer:Le(b),C:!1};if(Array.isArray(b))return{buffer:new Uint8Array(b),C:!1};if(b.constructor===Uint8Array)return{buffer:b,C:!1};if(b.constructor===ArrayBuffer)return{buffer:new Uint8Array(b),C:!1};if(b.constructor===$i)return{buffer:wm(b)||Xe(),C:!0};if(b instanceof Uint8Array)return{buffer:new Uint8Array(b.buffer,b.byteOffset,b.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function ek(b,C){this.i=null,this.m=!1,this.h=this.j=this.l=0,x0(this,b,C)}function x0(b,C,$){$=$===void 0?{}:$,b.S=$.S===void 0?!1:$.S,C&&(C=DP(C),b.i=C.buffer,b.m=C.C,b.l=0,b.j=b.i.length,b.h=b.l)}ek.prototype.reset=function(){this.h=this.l};function Uo(b,C){if(b.h=C,C>b.j)throw Ci(b.j,C)}function Jh(b){var C=b.i,$=b.h,E=C[$++],F=E&127;if(E&128&&(E=C[$++],F|=(E&127)<<7,E&128&&(E=C[$++],F|=(E&127)<<14,E&128&&(E=C[$++],F|=(E&127)<<21,E&128&&(E=C[$++],F|=E<<28,E&128&&C[$++]&128&&C[$++]&128&&C[$++]&128&&C[$++]&128&&C[$++]&128)))))throw Jn();return Uo(b,$),F}function tk(b,C){if(0>C)throw Error("Tried to read a negative byte length: "+C);var $=b.h,E=$+C;if(E>b.j)throw Ci(C,b.j-$);return b.h=E,$}var nk=[];function b0(){this.h=[]}b0.prototype.length=function(){return this.h.length},b0.prototype.end=function(){var b=this.h;return this.h=[],b};function sk(b,C,$){for(;0<$||127<C;)b.h.push(C&127|128),C=(C>>>7|$<<25)>>>0,$>>>=7;b.h.push(C)}function Wo(b,C){for(;127<C;)b.h.push(C&127|128),C>>>=7;b.h.push(C)}function w0(b,C){if(nk.length){var $=nk.pop();x0($,b,C),b=$}else b=new ek(b,C);this.h=b,this.j=this.h.h,this.i=this.l=-1,this.setOptions(C)}w0.prototype.setOptions=function(b){b=b===void 0?{}:b,this.ca=b.ca===void 0?!1:b.ca},w0.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function rk(b){var C=b.h;if(C.h==C.j)return!1;b.j=b.h.h;var $=Jh(b.h)>>>0;if(C=$>>>3,$&=7,!(0<=$&&5>=$))throw Zr($,b.j);if(1>C)throw Error("Invalid field number: "+C+" (at position "+b.j+")");return b.l=C,b.i=$,!0}function vm(b){switch(b.i){case 0:if(b.i!=0)vm(b);else e:{b=b.h;for(var C=b.h,$=C+10,E=b.i;C<$;)if(!(E[C++]&128)){Uo(b,C);break e}throw Jn()}break;case 1:b=b.h,Uo(b,b.h+8);break;case 2:b.i!=2?vm(b):(C=Jh(b.h)>>>0,b=b.h,Uo(b,b.h+C));break;case 5:b=b.h,Uo(b,b.h+4);break;case 3:C=b.l;do{if(!rk(b))throw Error("Unmatched start-group tag: stream EOF");if(b.i==4){if(b.l!=C)throw Error("Unmatched end-group tag");break}vm(b)}while(!0);break;default:throw Zr(b.i,b.j)}}var Sm=[];function _P(){this.j=[],this.i=0,this.h=new b0}function gu(b,C){C.length!==0&&(b.j.push(C),b.i+=C.length)}function OP(b,C){if(C=C.R){gu(b,b.h.end());for(var $=0;$<C.length;$++)gu(b,wm(C[$])||Xe())}}var sa=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Go(b,C){return sa?b[sa]|=C:b.A!==void 0?b.A|=C:(Object.defineProperties(b,{A:{value:C,configurable:!0,writable:!0,enumerable:!1}}),C)}function ik(b,C){sa?b[sa]&&(b[sa]&=~C):b.A!==void 0&&(b.A&=~C)}function gn(b){var C;return sa?C=b[sa]:C=b.A,C??0}function Ni(b,C){sa?b[sa]=C:b.A!==void 0?b.A=C:Object.defineProperties(b,{A:{value:C,configurable:!0,writable:!0,enumerable:!1}})}function v0(b){return Go(b,1),b}function FP(b,C){Ni(C,(b|0)&-51)}function Cm(b,C){Ni(C,(b|18)&-41)}var S0={};function km(b){return b!==null&&typeof b=="object"&&!Array.isArray(b)&&b.constructor===Object}var ed,ak=[];Ni(ak,23),ed=Object.freeze(ak);function C0(b){if(gn(b.o)&2)throw Error("Cannot mutate an immutable Message")}function k0(b){var C=b.length;(C=C?b[C-1]:void 0)&&km(C)?C.g=1:(C={},b.push((C.g=1,C)))}function ok(b){var C=b.i+b.G;return b.B||(b.B=b.o[C]={})}function Jr(b,C){return C===-1?null:C>=b.i?b.B?b.B[C]:void 0:b.o[C+b.G]}function Ii(b,C,$,E){C0(b),td(b,C,$,E)}function td(b,C,$,E){b.j&&(b.j=void 0),C>=b.i||E?ok(b)[C]=$:(b.o[C+b.G]=$,(b=b.B)&&C in b&&delete b[C])}function $0(b,C,$,E){var F=Jr(b,C);Array.isArray(F)||(F=ed);var P=gn(F);if(P&1||v0(F),E)P&2||Go(F,2),$&1||Object.freeze(F);else{E=!($&2);var z=P&2;$&1||!z?E&&P&16&&!z&&ik(F,16):(F=v0(Array.prototype.slice.call(F)),td(b,C,F))}return F}function N0(b,C){var $=Jr(b,C),E=$==null?$:typeof $=="number"||$==="NaN"||$==="Infinity"||$==="-Infinity"?Number($):void 0;return E!=null&&E!==$&&td(b,C,E),E}function lk(b,C,$,E,F){b.h||(b.h={});var P=b.h[$],z=$0(b,$,3,F);if(!P){var X=z;P=[];var te=!!(gn(b.o)&16);z=!!(gn(X)&2);var ce=X;!F&&z&&(X=Array.prototype.slice.call(X));for(var xe=z,Ue=0;Ue<X.length;Ue++){var _e=X[Ue],$e=C,We=!1;if(We=We===void 0?!1:We,_e=Array.isArray(_e)?new $e(_e):We?new $e:void 0,_e!==void 0){$e=_e.o;var st=We=gn($e);z&&(st|=2),te&&(st|=16),st!=We&&Ni($e,st),$e=st,xe=xe||!!(2&$e),P.push(_e)}}return b.h[$]=P,te=gn(X),C=te|33,C=xe?C&-9:C|8,te!=C&&(xe=X,Object.isFrozen(xe)&&(xe=Array.prototype.slice.call(xe)),Ni(xe,C),X=xe),ce!==X&&td(b,$,X),(F||E&&z)&&Go(P,2),E&&Object.freeze(P),P}return F||(F=Object.isFrozen(P),E&&!F?Object.freeze(P):!E&&F&&(P=Array.prototype.slice.call(P),b.h[$]=P)),P}function I0(b,C,$){var E=!!(gn(b.o)&2);if(C=lk(b,C,$,E,E),b=$0(b,$,3,E),!(E||gn(b)&8)){for(E=0;E<C.length;E++){if($=C[E],gn($.o)&2){var F=pk($,!1);F.j=$}else F=$;$!==F&&(C[E]=F,b[E]=F.o)}Go(b,8)}return C}function Ti(b,C,$){if($!=null&&typeof $!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof $+": "+$);Ii(b,C,$)}function uk(b,C,$,E,F){C0(b);var P=lk(b,$,C,!1,!1);return $=E??new $,b=$0(b,C,2,!1),F!=null?(P.splice(F,0,$),b.splice(F,0,$.o)):(P.push($),b.push($.o)),$.C()&&ik(b,8),$}function $m(b,C){return b??C}function Ei(b,C,$){return $=$===void 0?0:$,$m(N0(b,C),$)}var Nm;function zP(b){switch(typeof b){case"number":return isFinite(b)?b:String(b);case"object":if(b)if(Array.isArray(b)){if(gn(b)&128)return b=Array.prototype.slice.call(b),k0(b),b}else{if(le&&b!=null&&b instanceof Uint8Array)return he(b);if(b instanceof $i){var C=b.V;return C==null?"":typeof C=="string"?C:b.V=he(C)}}}return b}function ck(b,C,$,E){if(b!=null){if(Array.isArray(b))b=T0(b,C,$,E!==void 0);else if(km(b)){var F={},P;for(P in b)F[P]=ck(b[P],C,$,E);b=F}else b=C(b,E);return b}}function T0(b,C,$,E){var F=gn(b);E=E?!!(F&16):void 0,b=Array.prototype.slice.call(b);for(var P=0;P<b.length;P++)b[P]=ck(b[P],C,$,E);return $(F,b),b}function LP(b){return b.ja===S0?b.toJSON():zP(b)}function PP(b,C){b&128&&k0(C)}function hk(b,C,$){if($=$===void 0?Cm:$,b!=null){if(le&&b instanceof Uint8Array)return b.length?new $i(new Uint8Array(b),He):Zh();if(Array.isArray(b)){var E=gn(b);return E&2?b:C&&!(E&32)&&(E&16||E===0)?(Ni(b,E|2),b):(b=T0(b,hk,E&4?Cm:$,!0),C=gn(b),C&4&&C&2&&Object.freeze(b),b)}return b.ja===S0?fk(b):b}}function dk(b,C,$,E,F,P,z){if(b=b.h&&b.h[$]){if(E=gn(b),E&2?E=b:(P=Z(b,fk),Cm(E,P),Object.freeze(P),E=P),C0(C),z=E==null?ed:v0([]),E!=null){for(P=!!E.length,b=0;b<E.length;b++){var X=E[b];P=P&&!(gn(X.o)&2),z[b]=X.o}P=(P?8:0)|1,b=gn(z),(b&P)!==P&&(Object.isFrozen(z)&&(z=Array.prototype.slice.call(z)),Ni(z,b|P)),C.h||(C.h={}),C.h[$]=E}else C.h&&(C.h[$]=void 0);td(C,$,z,F)}else Ii(C,$,hk(E,P,z),F)}function fk(b){return gn(b.o)&2||(b=pk(b,!0),Go(b.o,2)),b}function pk(b,C){var $=b.o,E=[];Go(E,16);var F=b.constructor.h;if(F&&E.push(F),F=b.B,F){E.length=$.length,E.fill(void 0,E.length,$.length);var P={};E[E.length-1]=P}gn($)&128&&k0(E),C=C||b.C()?Cm:FP,P=b.constructor,Nm=E,E=new P(E),Nm=void 0,b.R&&(E.R=b.R.slice()),P=!!(gn($)&16);for(var z=F?$.length-1:$.length,X=0;X<z;X++)dk(b,E,X-b.G,$[X],!1,P,C);if(F)for(var te in F)dk(b,E,+te,F[te],!0,P,C);return E}function Os(b,C,$){b==null&&(b=Nm),Nm=void 0;var E=this.constructor.i||0,F=0<E,P=this.constructor.h,z=!1;if(b==null){b=P?[P]:[];var X=48,te=!0;F&&(E=0,X|=128),Ni(b,X)}else{if(!Array.isArray(b)||P&&P!==b[0])throw Error();var ce=X=Go(b,0);if((te=(16&ce)!==0)&&((z=(32&ce)!==0)||(ce|=32)),F){if(128&ce)E=0;else if(0<b.length){var xe=b[b.length-1];if(km(xe)&&"g"in xe){E=0,ce|=128,delete xe.g;var Ue=!0,_e;for(_e in xe){Ue=!1;break}Ue&&b.pop()}}}else if(128&ce)throw Error();X!==ce&&Ni(b,ce)}this.G=(P?0:-1)-E,this.h=void 0,this.o=b;e:{if(P=this.o.length,E=P-1,P&&(P=this.o[E],km(P))){this.B=P,this.i=E-this.G;break e}C!==void 0&&-1<C?(this.i=Math.max(C,E+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!F&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if($){C=te&&!z&&!0,F=this.i;var $e;for(te=0;te<$.length;te++)z=$[te],z<F?(z+=this.G,(E=b[z])?mk(E,C):b[z]=ed):($e||($e=ok(this)),(E=$e[z])?mk(E,C):$e[z]=ed)}}Os.prototype.toJSON=function(){return T0(this.o,LP,PP)},Os.prototype.C=function(){return!!(gn(this.o)&2)};function mk(b,C){if(Array.isArray(b)){var $=gn(b),E=1;!C||$&2||(E|=16),($&E)!==E&&Ni(b,$|E)}}Os.prototype.ja=S0,Os.prototype.toString=function(){return this.o.toString()};function gk(b,C,$){if($){var E={},F;for(F in $){var P=$[F],z=P.ra;z||(E.J=P.xa||P.oa.W,P.ia?(E.aa=vk(P.ia),z=function(X){return function(te,ce,xe){return X.J(te,ce,xe,X.aa)}}(E)):P.ka?(E.Z=Sk(P.da.P,P.ka),z=function(X){return function(te,ce,xe){return X.J(te,ce,xe,X.Z)}}(E)):z=E.J,P.ra=z),z(C,b,P.da),E={J:E.J,aa:E.aa,Z:E.Z}}}OP(C,b)}var Im=Symbol();function yk(b,C,$){return b[Im]||(b[Im]=function(E,F){return C(E,F,$)})}function xk(b){var C=b[Im];if(!C){var $=R0(b);C=function(E,F){return Ck(E,F,$)},b[Im]=C}return C}function MP(b){var C=b.ia;if(C)return xk(C);if(C=b.wa)return yk(b.da.P,C,b.ka)}function BP(b){var C=MP(b),$=b.da,E=b.oa.U;return C?function(F,P){return E(F,P,$,C)}:function(F,P){return E(F,P,$)}}function bk(b,C){var $=b[C];return typeof $=="function"&&$.length===0&&($=$(),b[C]=$),Array.isArray($)&&(sd in $||nd in $||0<$.length&&typeof $[0]=="function")?$:void 0}function wk(b,C,$,E,F,P){C.P=b[0];var z=1;if(b.length>z&&typeof b[z]!="number"){var X=b[z++];$(C,X)}for(;z<b.length;){$=b[z++];for(var te=z+1;te<b.length&&typeof b[te]!="number";)te++;switch(X=b[z++],te-=z,te){case 0:E(C,$,X);break;case 1:(te=bk(b,z))?(z++,F(C,$,X,te)):E(C,$,X,b[z++]);break;case 2:te=z++,te=bk(b,te),F(C,$,X,te,b[z++]);break;case 3:P(C,$,X,b[z++],b[z++],b[z++]);break;case 4:P(C,$,X,b[z++],b[z++],b[z++],b[z++]);break;default:throw Error("unexpected number of binary field arguments: "+te)}}return C}var Tm=Symbol();function vk(b){var C=b[Tm];if(!C){var $=E0(b);C=function(E,F){return kk(E,F,$)},b[Tm]=C}return C}function Sk(b,C){var $=b[Tm];return $||($=function(E,F){return gk(E,F,C)},b[Tm]=$),$}var nd=Symbol();function VP(b,C){b.push(C)}function UP(b,C,$){b.push(C,$.W)}function WP(b,C,$,E){var F=vk(E),P=E0(E).P,z=$.W;b.push(C,function(X,te,ce){return z(X,te,ce,P,F)})}function GP(b,C,$,E,F,P){var z=Sk(E,P),X=$.W;b.push(C,function(te,ce,xe){return X(te,ce,xe,E,z)})}function E0(b){var C=b[nd];return C||(C=wk(b,b[nd]=[],VP,UP,WP,GP),sd in b&&nd in b&&(b.length=0),C)}var sd=Symbol();function HP(b,C){b[0]=C}function jP(b,C,$,E){var F=$.U;b[C]=E?function(P,z,X){return F(P,z,X,E)}:F}function qP(b,C,$,E,F){var P=$.U,z=xk(E),X=R0(E).P;b[C]=function(te,ce,xe){return P(te,ce,xe,X,z,F)}}function XP(b,C,$,E,F,P,z){var X=$.U,te=yk(E,F,P);b[C]=function(ce,xe,Ue){return X(ce,xe,Ue,E,te,z)}}function R0(b){var C=b[sd];return C||(C=wk(b,b[sd]={},HP,jP,qP,XP),sd in b&&nd in b&&(b.length=0),C)}function Ck(b,C,$){for(;rk(C)&&C.i!=4;){var E=C.l,F=$[E];if(!F){var P=$[0];P&&(P=P[E])&&(F=$[E]=BP(P))}if(!F||!F(C,b,E)){F=C,E=b,P=F.j,vm(F);var z=F;if(!z.ca){if(F=z.h.h-P,z.h.h=P,z=z.h,F==0)F=Zh();else{if(P=tk(z,F),z.S&&z.m)F=z.i.subarray(P,P+F);else{z=z.i;var X=P;F=P+F,F=X===F?Xe():yt?z.slice(X,F):new Uint8Array(z.subarray(X,F))}F=F.length==0?Zh():new $i(F,He)}(P=E.R)?P.push(F):E.R=[F]}}}return b}function kk(b,C,$){for(var E=$.length,F=E%2==1,P=F?1:0;P<E;P+=2)(0,$[P+1])(C,b,$[P]);gk(b,C,F?$[0]:void 0)}function rd(b,C){return{U:b,W:C}}var ei=rd(function(b,C,$){if(b.i!==5)return!1;b=b.h;var E=b.i,F=b.h,P=E[F],z=E[F+1],X=E[F+2];return E=E[F+3],Uo(b,b.h+4),z=(P<<0|z<<8|X<<16|E<<24)>>>0,b=2*(z>>31)+1,P=z>>>23&255,z&=8388607,Ii(C,$,P==255?z?NaN:1/0*b:P==0?b*Math.pow(2,-149)*z:b*Math.pow(2,P-150)*(z+Math.pow(2,23))),!0},function(b,C,$){if(C=N0(C,$),C!=null){Wo(b.h,8*$+5),b=b.h;var E=+C;E===0?0<1/E?je=nt=0:(nt=0,je=2147483648):isNaN(E)?(nt=0,je=2147483647):(E=($=0>E?-2147483648:0)?-E:E,34028234663852886e22<E?(nt=0,je=($|2139095040)>>>0):11754943508222875e-54>E?(E=Math.round(E/Math.pow(2,-149)),nt=0,je=($|E)>>>0):(C=Math.floor(Math.log(E)/Math.LN2),E*=Math.pow(2,-C),E=Math.round(8388608*E),16777216<=E&&++C,nt=0,je=($|C+127<<23|E&8388607)>>>0)),$=je,b.h.push($>>>0&255),b.h.push($>>>8&255),b.h.push($>>>16&255),b.h.push($>>>24&255)}}),KP=rd(function(b,C,$){if(b.i!==0)return!1;var E=b.h,F=0,P=b=0,z=E.i,X=E.h;do{var te=z[X++];F|=(te&127)<<P,P+=7}while(32>P&&te&128);for(32<P&&(b|=(te&127)>>4),P=3;32>P&&te&128;P+=7)te=z[X++],b|=(te&127)<<P;if(Uo(E,X),128>te)E=F>>>0,te=b>>>0,(b=te&2147483648)&&(E=~E+1>>>0,te=~te>>>0,E==0&&(te=te+1>>>0)),E=4294967296*te+(E>>>0);else throw Jn();return Ii(C,$,b?-E:E),!0},function(b,C,$){C=Jr(C,$),C!=null&&(typeof C=="string"&&yr(C),C!=null&&(Wo(b.h,8*$),typeof C=="number"?(b=b.h,St(C),sk(b,je,nt)):($=yr(C),sk(b.h,$.i,$.h))))}),YP=rd(function(b,C,$){return b.i!==0?!1:(Ii(C,$,Jh(b.h)),!0)},function(b,C,$){if(C=Jr(C,$),C!=null&&C!=null)if(Wo(b.h,8*$),b=b.h,$=C,0<=$)Wo(b,$);else{for(C=0;9>C;C++)b.h.push($&127|128),$>>=7;b.h.push(1)}}),$k=rd(function(b,C,$){if(b.i!==2)return!1;var E=Jh(b.h)>>>0;b=b.h;var F=tk(b,E);if(b=b.i,ki){var P=b,z;(z=br)||(z=br=new TextDecoder("utf-8",{fatal:!0})),b=F+E,P=F===0&&b===P.length?P:P.subarray(F,b);try{var X=z.decode(P)}catch(Ue){if(Js===void 0){try{z.decode(new Uint8Array([128]))}catch{}try{z.decode(new Uint8Array([97])),Js=!0}catch{Js=!1}}throw!Js&&(br=void 0),Ue}}else{X=F,E=X+E,F=[];for(var te=null,ce,xe;X<E;)ce=b[X++],128>ce?F.push(ce):224>ce?X>=E?On():(xe=b[X++],194>ce||(xe&192)!==128?(X--,On()):F.push((ce&31)<<6|xe&63)):240>ce?X>=E-1?On():(xe=b[X++],(xe&192)!==128||ce===224&&160>xe||ce===237&&160<=xe||((P=b[X++])&192)!==128?(X--,On()):F.push((ce&15)<<12|(xe&63)<<6|P&63)):244>=ce?X>=E-2?On():(xe=b[X++],(xe&192)!==128||(ce<<28)+(xe-144)>>30||((P=b[X++])&192)!==128||((z=b[X++])&192)!==128?(X--,On()):(ce=(ce&7)<<18|(xe&63)<<12|(P&63)<<6|z&63,ce-=65536,F.push((ce>>10&1023)+55296,(ce&1023)+56320))):On(),8192<=F.length&&(te=xr(te,F),F.length=0);X=xr(te,F)}return Ii(C,$,X),!0},function(b,C,$){if(C=Jr(C,$),C!=null){var E=!1;if(E=E===void 0?!1:E,Qh){if(E&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(C))throw Error("Found an unpaired surrogate");C=(La||(La=new TextEncoder)).encode(C)}else{for(var F=0,P=new Uint8Array(3*C.length),z=0;z<C.length;z++){var X=C.charCodeAt(z);if(128>X)P[F++]=X;else{if(2048>X)P[F++]=X>>6|192;else{if(55296<=X&&57343>=X){if(56319>=X&&z<C.length){var te=C.charCodeAt(++z);if(56320<=te&&57343>=te){X=1024*(X-55296)+te-56320+65536,P[F++]=X>>18|240,P[F++]=X>>12&63|128,P[F++]=X>>6&63|128,P[F++]=X&63|128;continue}else z--}if(E)throw Error("Found an unpaired surrogate");X=65533}P[F++]=X>>12|224,P[F++]=X>>6&63|128}P[F++]=X&63|128}}C=F===P.length?P:P.subarray(0,F)}Wo(b.h,8*$+2),Wo(b.h,C.length),gu(b,b.h.end()),gu(b,C)}}),Nk=rd(function(b,C,$,E,F){if(b.i!==2)return!1;C=uk(C,$,E),$=b.h.j,E=Jh(b.h)>>>0;var P=b.h.h+E,z=P-$;if(0>=z&&(b.h.j=P,F(C,b,void 0,void 0,void 0),z=P-b.h.h),z)throw Error("Message parsing ended unexpectedly. Expected to read "+(E+" bytes, instead read "+(E-z)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return b.h.h=P,b.h.j=$,!0},function(b,C,$,E,F){if(C=I0(C,E,$),C!=null)for(E=0;E<C.length;E++){var P=b;Wo(P.h,8*$+2);var z=P.h.end();gu(P,z),z.push(P.i),P=z,F(C[E],b),z=b;var X=P.pop();for(X=z.i+z.h.length()-X;127<X;)P.push(X&127|128),X>>>=7,z.i++;P.push(X),z.i++}});function A0(b){return function(C,$){e:{if(Sm.length){var E=Sm.pop();E.setOptions($),x0(E.h,C,$),C=E}else C=new w0(C,$);try{var F=R0(b),P=Ck(new F.P,C,F);break e}finally{F=C.h,F.i=null,F.m=!1,F.l=0,F.j=0,F.h=0,F.S=!1,C.l=-1,C.i=-1,100>Sm.length&&Sm.push(C)}P=void 0}return P}}function D0(b){return function(){var C=new _P;kk(this,C,E0(b)),gu(C,C.h.end());for(var $=new Uint8Array(C.i),E=C.j,F=E.length,P=0,z=0;z<F;z++){var X=E[z];$.set(X,P),P+=X.length}return C.j=[$],$}}function yu(b){Os.call(this,b)}g(yu,Os);var Ik=[yu,1,YP,2,ei,3,$k,4,$k];yu.prototype.l=D0(Ik);function _0(b){Os.call(this,b,-1,QP)}g(_0,Os),_0.prototype.addClassification=function(b,C){return uk(this,1,yu,b,C),this};var QP=[1],ZP=A0([_0,1,Nk,Ik]);function id(b){Os.call(this,b)}g(id,Os);var Tk=[id,1,ei,2,ei,3,ei,4,ei,5,ei];id.prototype.l=D0(Tk);function Ek(b){Os.call(this,b,-1,JP)}g(Ek,Os);var JP=[1],eM=A0([Ek,1,Nk,Tk]);function Em(b){Os.call(this,b)}g(Em,Os);var Rk=[Em,1,ei,2,ei,3,ei,4,ei,5,ei,6,KP],tM=A0(Rk);Em.prototype.l=D0(Rk);function Ak(b,C,$){if($=b.createShader($===0?b.VERTEX_SHADER:b.FRAGMENT_SHADER),b.shaderSource($,C),b.compileShader($),!b.getShaderParameter($,b.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+b.getShaderInfoLog($));return $}function nM(b){return I0(b,yu,1).map(function(C){var $=Jr(C,1);return{index:$??0,qa:Ei(C,2),label:Jr(C,3)!=null?$m(Jr(C,3),""):void 0,displayName:Jr(C,4)!=null?$m(Jr(C,4),""):void 0}})}function sM(b){return{x:Ei(b,1),y:Ei(b,2),z:Ei(b,3),visibility:N0(b,4)!=null?Ei(b,4):void 0}}function O0(b){return I0(eM(b),id,1).map(sM)}function F0(b,C){this.i=b,this.h=C,this.m=0}function Dk(b,C,$){return rM(b,C),typeof b.h.canvas.transferToImageBitmap=="function"?Promise.resolve(b.h.canvas.transferToImageBitmap()):$?Promise.resolve(b.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(b.h.canvas):(b.j===void 0&&(b.j=document.createElement("canvas")),new Promise(function(E){b.j.height=b.h.canvas.height,b.j.width=b.h.canvas.width,b.j.getContext("2d",{}).drawImage(b.h.canvas,0,0,b.h.canvas.width,b.h.canvas.height),E(b.j)}))}function rM(b,C){var $=b.h;if(b.s===void 0){var E=Ak($,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),F=Ak($,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),P=$.createProgram();if($.attachShader(P,E),$.attachShader(P,F),$.linkProgram(P),!$.getProgramParameter(P,$.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+$.getProgramInfoLog(P));E=b.s=P,$.useProgram(E),F=$.getUniformLocation(E,"sampler0"),b.l={O:$.getAttribLocation(E,"aVertex"),N:$.getAttribLocation(E,"aTex"),ya:F},b.v=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,b.v),$.enableVertexAttribArray(b.l.O),$.vertexAttribPointer(b.l.O,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),b.u=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,b.u),$.enableVertexAttribArray(b.l.N),$.vertexAttribPointer(b.l.N,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),$.uniform1i(F,0)}E=b.l,$.useProgram(b.s),$.canvas.width=C.width,$.canvas.height=C.height,$.viewport(0,0,C.width,C.height),$.activeTexture($.TEXTURE0),b.i.bindTexture2d(C.glName),$.enableVertexAttribArray(E.O),$.bindBuffer($.ARRAY_BUFFER,b.v),$.vertexAttribPointer(E.O,2,$.FLOAT,!1,0,0),$.enableVertexAttribArray(E.N),$.bindBuffer($.ARRAY_BUFFER,b.u),$.vertexAttribPointer(E.N,2,$.FLOAT,!1,0,0),$.bindFramebuffer($.DRAW_FRAMEBUFFER?$.DRAW_FRAMEBUFFER:$.FRAMEBUFFER,null),$.clearColor(0,0,0,0),$.clear($.COLOR_BUFFER_BIT),$.colorMask(!0,!0,!0,!0),$.drawArrays($.TRIANGLE_FAN,0,4),$.disableVertexAttribArray(E.O),$.disableVertexAttribArray(E.N),$.bindBuffer($.ARRAY_BUFFER,null),b.i.bindTexture2d(0)}function iM(b){this.h=b}var aM=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function oM(b,C){return C+b}function _k(b,C){window[b]=C}function lM(b){var C=document.createElement("script");return C.setAttribute("src",b),C.setAttribute("crossorigin","anonymous"),new Promise(function($){C.addEventListener("load",function(){$()},!1),C.addEventListener("error",function(){$()},!1),document.body.appendChild(C)})}function uM(){return O(function(b){switch(b.h){case 1:return b.s=2,v(b,WebAssembly.instantiate(aM),4);case 4:b.h=3,b.s=0;break;case 2:return b.s=0,b.l=null,b.return(!1);case 3:return b.return(!0)}})}function z0(b){if(this.h=b,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=b&&b.locateFile||oM,typeof window=="object")var C=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")C=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=C,b.options){C=o(Object.keys(b.options));for(var $=C.next();!$.done;$=C.next()){$=$.value;var E=b.options[$].default;E!==void 0&&(this.l[$]=typeof E=="function"?E():E)}}}t=z0.prototype,t.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function cM(b){var C,$,E,F,P,z,X,te,ce,xe,Ue;return O(function(_e){switch(_e.h){case 1:return b.ga?(C=b.h.files===void 0?[]:typeof b.h.files=="function"?b.h.files(b.l):b.h.files,v(_e,uM(),2)):_e.return();case 2:if($=_e.i,typeof window=="object")return _k("createMediapipeSolutionsWasm",{locateFile:b.locateFile}),_k("createMediapipeSolutionsPackedAssets",{locateFile:b.locateFile}),z=C.filter(function($e){return $e.data!==void 0}),X=C.filter(function($e){return $e.data===void 0}),te=Promise.all(z.map(function($e){var We=Rm(b,$e.url);if($e.path!==void 0){var st=$e.path;We=We.then(function(Ht){return b.overrideFile(st,Ht),Promise.resolve(Ht)})}return We})),ce=Promise.all(X.map(function($e){return $e.simd===void 0||$e.simd&&$||!$e.simd&&!$?lM(b.locateFile($e.url,b.ha)):Promise.resolve()})).then(function(){var $e,We,st;return O(function(Ht){if(Ht.h==1)return $e=window.createMediapipeSolutionsWasm,We=window.createMediapipeSolutionsPackedAssets,st=b,v(Ht,$e(We),2);st.i=Ht.i,Ht.h=0})}),xe=function(){return O(function($e){return b.h.graph&&b.h.graph.url?$e=v($e,Rm(b,b.h.graph.url),0):($e.h=0,$e=void 0),$e})}(),v(_e,Promise.all([ce,te,xe]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return E=C.filter(function($e){return $e.simd===void 0||$e.simd&&$||!$e.simd&&!$}).map(function($e){return b.locateFile($e.url,b.ha)}),importScripts.apply(null,l(E)),F=b,v(_e,createMediapipeSolutionsWasm(Module),6);case 6:F.i=_e.i,b.m=new OffscreenCanvas(1,1),b.i.canvas=b.m,P=b.i.GL.createContext(b.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),b.i.GL.makeContextCurrent(P),_e.h=4;break;case 7:if(b.m=document.createElement("canvas"),Ue=b.m.getContext("webgl2",{}),!Ue&&(Ue=b.m.getContext("webgl",{}),!Ue))return alert("Failed to create WebGL canvas context when passing video frame."),_e.return();b.K=Ue,b.i.canvas=b.m,b.i.createContext(b.m,!0,!0,{});case 4:b.j=new b.i.SolutionWasm,b.ga=!1,_e.h=0}})}function hM(b){var C,$,E,F,P,z,X,te;return O(function(ce){if(ce.h==1){if(b.h.graph&&b.h.graph.url&&b.fa===b.h.graph.url)return ce.return();if(b.u=!0,!b.h.graph||!b.h.graph.url){ce.h=2;return}return b.fa=b.h.graph.url,v(ce,Rm(b,b.h.graph.url),3)}for(ce.h!=2&&(C=ce.i,b.j.loadGraph(C)),$=o(Object.keys(b.D)),E=$.next();!E.done;E=$.next())F=E.value,b.j.overrideFile(F,b.D[F]);if(b.D={},b.h.listeners)for(P=o(b.h.listeners),z=P.next();!z.done;z=P.next())X=z.value,mM(b,X);te=b.l,b.l={},b.setOptions(te),ce.h=0})}t.reset=function(){var b=this;return O(function(C){b.j&&(b.j.reset(),b.s={},b.v={}),C.h=0})},t.setOptions=function(b,C){var $=this;if(C=C||this.h.options){for(var E=[],F=[],P={},z=o(Object.keys(b)),X=z.next();!X.done;P={X:P.X,Y:P.Y},X=z.next())if(X=X.value,!(X in this.l&&this.l[X]===b[X])){this.l[X]=b[X];var te=C[X];te!==void 0&&(te.onChange&&(P.X=te.onChange,P.Y=b[X],E.push(function(ce){return function(){var xe;return O(function(Ue){if(Ue.h==1)return v(Ue,ce.X(ce.Y),2);xe=Ue.i,xe===!0&&($.u=!0),Ue.h=0})}}(P))),te.graphOptionXref&&(X=Object.assign({},{calculatorName:"",calculatorIndex:0},te.graphOptionXref,{valueNumber:te.type===1?b[X]:0,valueBoolean:te.type===0?b[X]:!1,valueString:te.type===2?b[X]:""}),F.push(X)))}(E.length!==0||F.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(F),this.F=(this.F===void 0?[]:this.F).concat(E))}};function dM(b){var C,$,E,F,P,z,X;return O(function(te){switch(te.h){case 1:if(!b.u)return te.return();if(!b.F){te.h=2;break}C=o(b.F),$=C.next();case 3:if($.done){te.h=5;break}return E=$.value,v(te,E(),4);case 4:$=C.next(),te.h=3;break;case 5:b.F=void 0;case 2:if(b.H){for(F=new b.i.GraphOptionChangeRequestList,P=o(b.H),z=P.next();!z.done;z=P.next())X=z.value,F.push_back(X);b.j.changeOptions(F),F.delete(),b.H=void 0}b.u=!1,te.h=0}})}t.initialize=function(){var b=this;return O(function(C){return C.h==1?v(C,cM(b),2):C.h!=3?v(C,hM(b),3):v(C,dM(b),0)})};function Rm(b,C){var $,E;return O(function(F){return C in b.L?F.return(b.L[C]):($=b.locateFile(C,""),E=fetch($).then(function(P){return P.arrayBuffer()}),b.L[C]=E,F.return(E))})}t.overrideFile=function(b,C){this.j?this.j.overrideFile(b,C):this.D[b]=C},t.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},t.send=function(b,C){var $=this,E,F,P,z,X,te,ce,xe,Ue;return O(function(_e){switch(_e.h){case 1:return $.h.inputs?(E=1e3*(C??performance.now()),v(_e,$.I,2)):_e.return();case 2:return v(_e,$.initialize(),3);case 3:for(F=new $.i.PacketDataList,P=o(Object.keys(b)),z=P.next();!z.done;z=P.next())if(X=z.value,te=$.h.inputs[X]){e:{var $e=b[X];switch(te.type){case"video":var We=$.s[te.stream];if(We||(We=new F0($.i,$.K),$.s[te.stream]=We),We.m===0&&(We.m=We.i.createTexture()),typeof HTMLVideoElement<"u"&&$e instanceof HTMLVideoElement)var st=$e.videoWidth,Ht=$e.videoHeight;else typeof HTMLImageElement<"u"&&$e instanceof HTMLImageElement?(st=$e.naturalWidth,Ht=$e.naturalHeight):(st=$e.width,Ht=$e.height);Ht={glName:We.m,width:st,height:Ht},st=We.h,st.canvas.width=Ht.width,st.canvas.height=Ht.height,st.activeTexture(st.TEXTURE0),We.i.bindTexture2d(We.m),st.texImage2D(st.TEXTURE_2D,0,st.RGBA,st.RGBA,st.UNSIGNED_BYTE,$e),We.i.bindTexture2d(0),We=Ht;break e;case"detections":for(We=$.s[te.stream],We||(We=new iM($.i),$.s[te.stream]=We),We.data||(We.data=new We.h.DetectionListData),We.data.reset($e.length),Ht=0;Ht<$e.length;++Ht){st=$e[Ht];var Mt=We.data,es=Mt.setBoundingBox,wr=Ht,Fs=st.la,xt=new Em;if(Ti(xt,1,Fs.sa),Ti(xt,2,Fs.ta),Ti(xt,3,Fs.height),Ti(xt,4,Fs.width),Ti(xt,5,Fs.rotation),Ii(xt,6,Fs.pa),Fs=xt.l(),es.call(Mt,wr,Fs),st.ea)for(Mt=0;Mt<st.ea.length;++Mt){xt=st.ea[Mt],es=We.data,wr=es.addNormalizedLandmark,Fs=Ht,xt=Object.assign({},xt,{visibility:xt.visibility?xt.visibility:0});var ts=new id;Ti(ts,1,xt.x),Ti(ts,2,xt.y),Ti(ts,3,xt.z),xt.visibility&&Ti(ts,4,xt.visibility),xt=ts.l(),wr.call(es,Fs,xt)}if(st.ba)for(Mt=0;Mt<st.ba.length;++Mt)es=We.data,wr=es.addClassification,Fs=Ht,xt=st.ba[Mt],ts=new yu,Ti(ts,2,xt.qa),xt.index&&Ii(ts,1,xt.index),xt.label&&Ii(ts,3,xt.label),xt.displayName&&Ii(ts,4,xt.displayName),xt=ts.l(),wr.call(es,Fs,xt)}We=We.data;break e;default:We={}}}switch(ce=We,xe=te.stream,te.type){case"video":F.pushTexture2d(Object.assign({},ce,{stream:xe,timestamp:E}));break;case"detections":Ue=ce,Ue.stream=xe,Ue.timestamp=E,F.pushDetectionList(Ue);break;default:throw Error("Unknown input config type: '"+te.type+"'")}}return $.j.send(F),v(_e,$.I,4);case 4:F.delete(),_e.h=0}})};function fM(b,C,$){var E,F,P,z,X,te,ce,xe,Ue,_e,$e,We,st,Ht;return O(function(Mt){switch(Mt.h){case 1:if(!$)return Mt.return(C);for(E={},F=0,P=o(Object.keys($)),z=P.next();!z.done;z=P.next())X=z.value,te=$[X],typeof te!="string"&&te.type==="texture"&&C[te.stream]!==void 0&&++F;1<F&&(b.M=!1),ce=o(Object.keys($)),z=ce.next();case 2:if(z.done){Mt.h=4;break}if(xe=z.value,Ue=$[xe],typeof Ue=="string")return st=E,Ht=xe,v(Mt,pM(b,xe,C[Ue]),14);if(_e=C[Ue.stream],Ue.type==="detection_list"){if(_e){for(var es=_e.getRectList(),wr=_e.getLandmarksList(),Fs=_e.getClassificationsList(),xt=[],ts=0;ts<es.size();++ts){var Pa=tM(es.get(ts)),gM=Ei(Pa,1),yM=Ei(Pa,2),xM=Ei(Pa,3),bM=Ei(Pa,4),wM=Ei(Pa,5,0),Am=void 0;Am=Am===void 0?0:Am,Pa={la:{sa:gM,ta:yM,height:xM,width:bM,rotation:wM,pa:$m(Jr(Pa,6),Am)},ea:O0(wr.get(ts)),ba:nM(ZP(Fs.get(ts)))},xt.push(Pa)}es=xt}else es=[];E[xe]=es,Mt.h=7;break}if(Ue.type==="proto_list"){if(_e){for(es=Array(_e.size()),wr=0;wr<_e.size();wr++)es[wr]=_e.get(wr);_e.delete()}else es=[];E[xe]=es,Mt.h=7;break}if(_e===void 0){Mt.h=3;break}if(Ue.type==="float_list"){E[xe]=_e,Mt.h=7;break}if(Ue.type==="proto"){E[xe]=_e,Mt.h=7;break}if(Ue.type!=="texture")throw Error("Unknown output config type: '"+Ue.type+"'");return $e=b.v[xe],$e||($e=new F0(b.i,b.K),b.v[xe]=$e),v(Mt,Dk($e,_e,b.M),13);case 13:We=Mt.i,E[xe]=We;case 7:Ue.transform&&E[xe]&&(E[xe]=Ue.transform(E[xe])),Mt.h=3;break;case 14:st[Ht]=Mt.i;case 3:z=ce.next(),Mt.h=2;break;case 4:return Mt.return(E)}})}function pM(b,C,$){var E;return O(function(F){return typeof $=="number"||$ instanceof Uint8Array||$ instanceof b.i.Uint8BlobList?F.return($):$ instanceof b.i.Texture2dDataOut?(E=b.v[C],E||(E=new F0(b.i,b.K),b.v[C]=E),F.return(Dk(E,$,b.M))):F.return(void 0)})}function mM(b,C){for(var $=C.name||"$",E=[].concat(l(C.wants)),F=new b.i.StringList,P=o(C.wants),z=P.next();!z.done;z=P.next())F.push_back(z.value);P=b.i.PacketListener.implement({onResults:function(X){for(var te={},ce=0;ce<C.wants.length;++ce)te[E[ce]]=X.get(ce);var xe=b.listeners[$];xe&&(b.I=fM(b,te,C.outs).then(function(Ue){Ue=xe(Ue);for(var _e=0;_e<C.wants.length;++_e){var $e=te[E[_e]];typeof $e=="object"&&$e.hasOwnProperty&&$e.hasOwnProperty("delete")&&$e.delete()}Ue&&(b.I=Ue)}))}}),b.j.attachMultiListener(F,P),F.delete()}t.onResults=function(b,C){this.listeners[C||"$"]=b},H("Solution",z0),H("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Ok(b){switch(b===void 0&&(b=0),b){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function Fk(b){var C=this;b=b||{},this.h=new z0({locateFile:b.locateFile,files:function($){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Ok($.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:O0},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:O0},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function($){var E,F,P;return O(function(z){return z.h==1?(E=Ok($),F="third_party/mediapipe/modules/pose_landmark/"+E,v(z,Rm(C.h,E),2)):(P=z.i,C.h.overrideFile(F,P),z.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}t=Fk.prototype,t.reset=function(){this.h.reset()},t.close=function(){return this.h.close(),Promise.resolve()},t.onResults=function(b){this.h.onResults(b)},t.initialize=function(){var b=this;return O(function(C){return v(C,b.h.initialize(),0)})},t.send=function(b,C){var $=this;return O(function(E){return v(E,$.h.send(b,C),0)})},t.setOptions=function(b){this.h.setOptions(b)},H("Pose",Fk),H("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),H("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),H("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),H("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),H("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),H("VERSION","0.5.1675469404")}).call(Li);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr=J();gr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);gr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);gr.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);gr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);gr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);gr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);gr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);gr.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);gr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);gr.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);gr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);gr.registerFlag("WEBGPU_PRINT_SHADER",()=>"");gr.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wme{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vme{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,n,s=!1,r=!0){let i;const a=YI(e,n);return r?(this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).length>0?(i=this.freeBuffers.get(a).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e)):(i=this.device.createBuffer({size:e,usage:n,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(a)||this.usedBuffers.set(a,[]),this.usedBuffers.get(a).push(i),this.numUsedBuffers++,this.numBytesUsed+=e,i}releaseBuffer(e,n=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,i=YI(s,r),a=this.usedBuffers.get(i),o=a.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");a[o]=a[a.length-1],a.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,n?(this.freeBuffers.get(i).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function YI(t,e){return`${t}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sme{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,n,s,r){const i=ZI(s),a=e*n*i,o=QI(e,n,s,r);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const u=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(u),u}this.numBytesAllocated+=a;const l=this.device.createTexture({size:[e,n],format:s,usage:r});return this.usedTextures.get(o).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const n=e.width,s=e.height,r=e.format,i=e.usage,a=QI(n,s,r,i);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(a),l=o.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(l,1);const u=ZI(r),c=n*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,n)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function QI(t,e,n,s){return`${t}_${e}_${n}_${s}`}function ZI(t){if(t==="rgba8unorm")return 16;throw new Error(`${t} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cme(t,e){if(Math.max(...t)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=t.length,s="xyzwuv",r=t.map(a=>`${e}.${s[a]}`),i=new Array(n-1);i[n-2]=r[n-1];for(let a=n-3;a>=0;--a)i[a]=`(${i[a+1]} * ${r[a+1]})`;return i}const Vo=(t,e,n)=>n==="int32"?`atomicAdd(${t}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${t}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ic;(function(t){t[t.FROM_PIXELS=0]="FROM_PIXELS",t[t.DRAW=1]="DRAW"})(Ic||(Ic={}));const kme=(t,e,n,s,r)=>{const i={dtype:s.dtype,shape:s.shape},a=Nme(n,i,e),o=t.createShaderModule({code:a,label:e.constructor.name});let l=J().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(a),console.groupEnd())}return r?t.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):t.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},Ye=(t,e="f32")=>{switch(t){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component ${e} is not supported.`)}};function hn(t){if(t<=1)return"i32";if(t===2)return"vec2<i32>";if(t===3)return"vec3<i32>";if(t===4)return"vec4<i32>";if(t===5)return"vec5";if(t===6)return"vec6";throw Error(`GPU for rank ${t} is not yet supported`)}function ka(t){if(t===0)return"x";if(t===1)return"y";if(t===2)return"z";if(t===3)return"w";if(t===4)return"u";if(t===5)return"v";throw Error(`Index ${t} is not yet supported`)}function me(...t){let e;switch(t.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${t[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function JI(t,e){let n;return n=`
     ${$me(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${t?"main(getGlobalIndex());":"main();"};
      }
    `,n}function $me(t){return`
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})
`}function Nme(t,e,n){const s=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${BL(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),n.pixelsOpType!=null){const p=n.pixelsOpType===Ic.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${rl(e.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${rl(t[0].dtype,n.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${p}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const g=tT(n);return[eT,s.join(`
`),Eg(e.shape),n.getUserCode(),JI(g,n)].join(`
`)}let i,a,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((p,m)=>{const g=hn(t[m].shape.length);o+=`${p.charAt(0).toLowerCase()+p.slice(1)}Shape : ${g}, `,i=t[m].shape.length-1,a=hn(i),o+=`${p.charAt(0).toLowerCase()+p.slice(1)}ShapeStrides: ${a}, `});const l=hn(e.shape.length);o+=`outShape : ${l}, `,i=e.shape.length-1,a=hn(i),o+=`
         outShapeStrides: ${a}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=Fme(o),s.push(o),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${rl(e.dtype,n.outputComponent)}>;
    `),n.variableNames.forEach((p,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${p}: array<${n.variableComponents?rl(t[m].dtype,n.variableComponents[m]):rl(t[m].dtype,n.outputComponent)}>;
        `)}),o!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=Dme(e.shape,n.dispatchLayout),c=[eT,s.join(`
`)+Tme,Eg(e.shape),u,_me(e.shape.length)];n.atomic||c.push(Ome(e.shape,e.dtype,n.outputComponent)),n.variableNames.forEach((p,m)=>{c.push(`${Eg(t[m].shape,p)}`)});const h=t.map((p,m)=>Ame(p,e.shape,n.variableComponents?n.variableComponents[m]:n.outputComponent,n.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(n.getUserCode());const d=tT(n);return c.push(JI(d,n)),c.join(`
`)}function Ime(t,e,n){let s=t.shaderKey;if(t.pixelsOpType!=null)return s;const r=[],i=[];e.forEach(c=>{r.push(c.shape),i.push(c.dtype)}),r.push(n.shape),i.push(n.dtype);const a=e.map(c=>So(c.shape,n.shape)),o=e.map(c=>Ke(c.shape,n.shape)).join("_"),l=a.map(c=>c.join("_")).join(";"),u=BL(t)?"flatDispatch":"";return s+="_"+(t.workgroupSize?t.workgroupSize.join(","):"")+r.map(c=>c.length).join(",")+i.join(",")+t.variableNames.join(",")+l+o+u,s}const eT=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Tme=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Eg(t,e=""){const n=t.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const i=Re(t),a=hn(n),o=[];for(let u=0;u<n;u++)o.push(`d${u}`);if(i.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((u,c)=>{const h=`let ${o[c]} = index2 / uniforms.${r}.${ka(c)}`,d=c===i.length-1?`let ${o[c+1]} = index2 - ${o[c]} * uniforms.${r}.${ka(c)}`:`index2 = index2 - ${o[c]} * uniforms.${r}.${ka(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${s}(index : i32) -> ${a} {
      ${l}
      return ${a}(${o.join(",")});
    }
  `}function Eme(t,e){const n=t.name,s=t.shape.length,r=hn(s),i="get"+n.charAt(0).toUpperCase()+n.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=a.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${i}() -> ${Ye(e)} {
        return ${Ye(e)}(${n}[0]);
      }
    `;const l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${i}(${o}) -> ${Ye(e)} {
      return ${Ye(e)}(${n}[getIndexFromCoords${u}(${r}(${a.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function Rme(t,e,n,s){const r=t.name,i=r.charAt(0).toUpperCase()+r.slice(1),a="get"+i+"ByOutput",o=t.shape.length,l=e.length,u=hn(l);if(Ke(t.shape,e)&&s)return`
    fn ${a}Index(globalIndex : i32) -> ${Ye(n)} {
      return ${Ye(n)}(${r}[globalIndex]);
    }

    fn ${a}Coords(coords : ${u}) -> ${Ye(n)} {
      return ${Ye(n)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${n===1?"":` / ${n}`}]);
    }
    `;const c=So(t.shape,e),h=l-o;let d="";if(o===0)return`
    fn ${a}Index(globalIndex : i32) -> ${Ye(n)}{
      return get${i}();
    }

    fn ${a}Coords(coords : ${u}) -> ${Ye(n)}{
      return get${i}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${ka(g+h)} = 0;`).join(`
`);let f="";if(l<2&&o>0)f="coords";else if(l>1){const g=hn(o),y=t.shape.map((x,w)=>`coords.${ka(w+h)}`).join(", ");f=`${g}(${y})`}else f="coords";const p=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${Ye(n)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${Ye(n)}(${r}[getIndexFromCoords${m}(${f}, ${p})${n===1?"":` / ${n}`}]);
  }

  fn ${a}Coords(coordsIn : ${u}) -> ${Ye(n)} {
    var coords = coordsIn;
    ${d}
    return ${Ye(n)}(${r}[getIndexFromCoords${m}(${f}, ${p})${n===1?"":` / ${n}`}]);
  }
`}function Ame(t,e,n,s){let r=Eme(t,n);return t.shape.length<=e.length&&(r+=Rme(t,e,n,s)),r}function Dme(t,e){const{x:n,y:s=[],z:r=[]}=e,i=t.length,a=n.length+s.length+r.length;if(a!==i)return"";if(n.length===i)return`fn getOutputCoords() -> ${hn(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="";const l=[n,s,r];for(let d=0;d<l.length;d++){const f=l[d];if(f.length!==0)if(f.length===1)o+=`let d${f[0]} = i32(globalId[${d}]);`;else{const p=Cme(f,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<p.length;m++)o+=`let d${f[m]} = index${d} / ${p[m]};`,m===p.length-1?o+=`let d${f[m+1]} = index${d} - d${f[m]} * ${p[m]};`:o+=`index${d} = index${d} - d${f[m]} * ${p[m]};`}}const u=[];for(let d=0;d<a;d++)u.push(`d${d}`);const c=hn(a);let h=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function _me(t){let e="";switch(t){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:R(!1,()=>`Unsupported ${t}D shape`);break}return e}function BL(t){return t.dispatch[1]===1&&t.dispatch[2]===1}function rl(t,e=1){if(t==="float32")return Ye(e,"f32");if(t==="int32"||t==="bool")return Ye(e,"i32");throw new Error(`type ${t} is not supported.`)}function Ome(t,e,n){const s=t.length,r=rl(e,n);let i=`fn setOutputAtIndex(flatIndex : i32, value : ${Ye(n)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ye(n,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const a=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=hn(s);i+=`
      fn setOutputAtCoords(${a.map(l=>`${l} : i32`).join(", ")}, value : ${Ye(n)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${n===1?"":` / ${n}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(l=>`${l} : i32`).join(", ")}, value : ${Ye(n,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${n===1?"":` / ${n}`}, value);
      }
    `}return i}function Fme(t){const e=/(\w+)\s*:\s*vec(5|6)/g;t=t.replace(e,s=>"@align(16) "+s);const n=/vec(5|6)\s*,\s*(\w+)/g;return t=t.replace(n,(s,r,i)=>`vec${r}, @align(16) ${i}`),t}function tT(t){return!(t.dispatchLayout.hasOwnProperty("y")&&t.dispatchLayout.y.length!==0||t.dispatchLayout.hasOwnProperty("z")&&t.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vl=t=>{let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e};function ge(t,e,n=[1,1,1],s=[1,1,1]){const[r,i,a]=[Math.ceil(vl(t.x.map(o=>e[o]))/(n[0]*s[0])),t.y?Math.ceil(vl(t.y.map(o=>e[o]))/(n[1]*s[1])):1,t.z?Math.ceil(vl(t.z.map(o=>e[o]))/(n[2]*s[2])):1];return[r,i,a]}function zme(t,e,n,s=!1){const r=[8,8,1],i=[4,4,1];return s||(t<=8&&(i[1]=1),e<=16&&n<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:i}}function VL(t,e,n=!1){if(n)return[8,8,1];const s=vl(t.x.map(i=>e[i])),r=vl(t.y.map(i=>e[i]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function UL(t,e,n=!1){if(n)return[4,4,1];const s=vl(t.x.map(i=>e[i])),r=vl(t.y.map(i=>e[i]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Se(t){return{x:t.map((e,n)=>n)}}function nT(t){if(t==="float32"||t==="int32"||t==="bool"||t==="string")return 4;if(t==="complex64")return 8;throw new Error(`Unknown dtype ${t}`)}function WL(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function GL(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&R(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var Ri;(function(t){t[t.MatMulReduceProgram=0]="MatMulReduceProgram",t[t.MatMulSplitKProgram=1]="MatMulSplitKProgram",t[t.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",t[t.MatMulPackedProgram=3]="MatMulPackedProgram",t[t.MatMulMax=4]="MatMulMax"})(Ri||(Ri={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lme=J().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Pme=(t,e)=>{const n=t.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(a=>a<=n))return r;R(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r[0]));return i>n?(i=Math.ceil(Math.cbrt(r[0])),R(i<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]};class Xh extends ix{nextDataId(){return Xh.nextDataId++}constructor(e,n){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!WL())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new wme(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new vme(this.device),this.textureManager=new Sme(this.device),this.tensorMap=new G2(this,cs()),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return n?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);n.refCount--}}write(e,n,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:n,values:e,refCount:1}),r}move(e,n,s,r,i){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:n,refCount:i})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,s)=>{this.pipelineCache[n]=e[s]})}async getBufferData(e){if(J().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const n=e.size,s=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(R(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,n){const s=this.tensorMap.get(e);return s.values=n,s.values}readSync(e){const n=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=n;if(s!=null||n.dtype==="string")return s;if(n.dtype==="complex64"){const m=this.readSync(r.real.dataId),g=this.readSync(r.imag.dataId),y=kg(fi(m,g).buffer,"float32");return this.convertAndCacheOnCPU(e,y),y}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const i=["opaque","premultiplied"],a=n.resource,o=a.size;R(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=o/4,u=new ArrayBuffer(o),c=256,h=256,d=i.map(m=>new OffscreenCanvas(c,h)),f=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((m,g)=>{const y=m.getContext("webgpu");return y.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:i[g]}),y.getCurrentTexture()}).map((m,g)=>{const y=c*4,x=(T,A,D)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:y,offset:D},{texture:m},{width:T,height:A}),this.submitQueue();const O=f.getContext("2d",{willReadFrequently:!0});O.clearRect(0,0,T,A),O.drawImage(d[g],0,0);const U=O.getImageData(0,0,T,A).data,B=i[g],q=new Uint8ClampedArray(u,D,T*A*4);for(let H=0;H<q.length;H+=4)if(B==="premultiplied")q[H+3]=U[H+3];else{const L=U[H];q[H]=U[H+2],q[H+1]=U[H+1],q[H+2]=L}},w=Math.floor(l/(c*h));let v=c,S=h,N=0;for(let T=0;T<w;T++)x(v,S,N),N+=c*h*4;const I=l%(c*h);S=Math.floor(I/c),S>0&&(x(v,S,N),N+=S*(c*4)),v=I%c,v>0&&x(v,1,N)});const p=kg(u,n.dtype);return this.convertAndCacheOnCPU(e,p),p}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const n=this.tensorMap.get(e),{values:s}=n;if(s!=null)return s;let r;if(n.dtype==="complex64"){const i=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),a=i[0],o=i[1];r=fi(a,o)}else{const i=await this.getBufferData(n.resource);r=kg(i,n.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const n=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(n,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,n),this.submitQueue(),r}createTensorFromGPUData(e,n,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const i={id:this.nextDataId()};this.tensorMap.set(i,{dtype:s,shape:n,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(i),o=nT(a.dtype)*Y(a.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),a.resource=r,cs().makeTensorFromDataId(i,n,s,this)}readToGPU(e){const n=this.tensorMap.get(e),{values:s,dtype:r,shape:i,resource:a}=n;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=a,l=o.size,u=o.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(i,r),d=cs().makeTensorFromTensorInfo(h),f=this.tensorMap.get(h.dataId);return f.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const s=n.map(r=>ci(r));return Ge(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=Ea(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=Ea(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(i);return o.kernelMs=FA(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,n,s){return n==="string"&&s!=null&&s.length>0&&Lc(s[0])&&(s=s.map(i=>va(i))),{dataId:this.write(s,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const n=this.tensorMap.get(e);if(n.resource!=null)return;const s=nT(n.dtype)*Y(n.shape);let r;const i=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(r=this.bufferManager.acquireBuffer(s,i,!0),r.mapState==="unmapped"){const a=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(o).set(n.values):new Float32Array(o).set(n.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,r,0,s),this.stagingPendingDisposal.push(a)}else{const a=r.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(a).set(n.values):new Float32Array(a).set(n.values),r.unmap()}n.values=null}else r=this.bufferManager.acquireBuffer(s,i);n.resource=r}makeUniforms(e){let n=0,s=0;const r=[];let i=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:R(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>i&&(i=u),n=Math.ceil(n/u)*u,s=l.data.length,r.push(n),n+=l.data.length*4}),n=Math.ceil(n/i)*i;const a=new ArrayBuffer(n);e.forEach((l,u)=>{const c=r[u];l.type==="int32"?new Int32Array(a,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(a,c,l.data.length).set(l.data):new Float32Array(a,c,l.data.length).set(l.data)});const o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,a,0,n),this.uniformPendingDisposal.push(o),{offset:0,size:n,buffer:o}}runWebGPUProgram(e,n,s,r,i){if(i||(i=this.makeTensorInfo(e.outputShape,s)),Y(i.shape)===0)return this.tensorMap.get(i.dataId).values=Rn(i.dtype,0),i;this.uploadToGPU(i.dataId),e.dispatch=Pme(this.device,e);const a=n.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=Ime(e,a,i);const o=J().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=kme(this.device,e,a,i,o)),e.pipeline=this.pipelineCache[e.shaderKey],o||this.recordAndSubmit(e,i,n,r),i}recordAndSubmit(e,n,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let i=[],a=[];const o="int32";if(e.pixelsOpType==null){i.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=s.concat(n).map(f=>f.shape);const d="int32";a.map(f=>{i.push({type:d,data:f});const p=Re(f);i.push({type:d,data:p})})}else{const d=Re(n.shape);i.push({type:o,data:d})}if(e.size){const d=Y(e.outputShape);i.push({type:o,data:[e.outputComponent?d/e.outputComponent:d]})}r&&(i=[...i,...r]);const l=[this.tensorToBinding(n),...s.map(d=>this.tensorToBinding(d)),this.makeUniforms(i)];s.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(n.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,f)=>({binding:f,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||J().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Ic.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const n=new BigUint64Array(e.getMappedRange()),s=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,n=Lme){return J().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&Y(s.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Xh.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */WL()&&lS("webgpu",async()=>{const t={powerPreference:J().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(t),n={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),n.requiredFeatures=s;const r=e.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const i=await e.requestDevice(n),a="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Xh(i,a)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Me;(function(t){t[t.ADD=0]="ADD",t[t.ATAN2=1]="ATAN2",t[t.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",t[t.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",t[t.DIV=4]="DIV",t[t.ELU_DER=5]="ELU_DER",t[t.EQUAL=6]="EQUAL",t[t.FLOOR_DIV=7]="FLOOR_DIV",t[t.GREATER=8]="GREATER",t[t.GREATER_EQUAL=9]="GREATER_EQUAL",t[t.LESS=10]="LESS",t[t.LESS_EQUAL=11]="LESS_EQUAL",t[t.LOGICAL_AND=12]="LOGICAL_AND",t[t.LOGICAL_OR=13]="LOGICAL_OR",t[t.MAX=14]="MAX",t[t.MIN=15]="MIN",t[t.MOD=16]="MOD",t[t.MUL=17]="MUL",t[t.NOT_EQUAL=18]="NOT_EQUAL",t[t.POW=19]="POW",t[t.PRELU=20]="PRELU",t[t.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",t[t.SUB=22]="SUB"})(Me||(Me={}));const Mme="let resultTemp = a + b;",Bme="let resultTemp = atan2(a, b);",Vme="let resultTemp = areal * breal - aimag * bimag;",Ume="let resultTemp = areal * bimag + aimag * breal;",Wme="let resultTemp = a / b;",Gme="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Hme=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,jme=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,qme=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Xme=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,Kme=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,Yme=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,Qme="return f32(a >= 1.0 && b >= 1.0);",Zme=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Jme="return f32(a >= 1.0 || b >= 1.0);",ege=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,tge="let resultTemp = max(a, b);",nge="let resultTemp = min(a, b);",sge=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,rge=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,ige="let resultTemp = a * b;",age=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,oge=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,lge=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,uge=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,cge="if (a < 0.0) { return b * a; }  return a;",hge=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,dge="let resultTemp = (a - b) * (a - b);",fge="let resultTemp = a - b;";function KC(t,e){let n;do{switch(t){case Me.ATAN2:n=Bme;break;case Me.MAX:n=tge;break;case Me.MIN:n=nge;break;case Me.MOD:n=e?rge:sge;break;case Me.NOT_EQUAL:n=e?oge:age;break;case Me.POW:n=e?uge:lge;break;default:continue}let s,r,i;return e?(s="isnanVec4",r="vec4<f32>",i="vec4<bool>"):(s="isnan",r="f32",i="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${n}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(t){case Me.ADD:n=Mme;break;case Me.COMPLEX_MULTIPLY_IMAG:n=Ume;break;case Me.COMPLEX_MULTIPLY_REAL:n=Vme;break;case Me.DIV:n=Wme;break;case Me.ELU_DER:n=Gme;break;case Me.EQUAL:n=Hme;break;case Me.FLOOR_DIV:n=jme;break;case Me.GREATER:n=qme;break;case Me.GREATER_EQUAL:n=Xme;break;case Me.LESS:n=Kme;break;case Me.LESS_EQUAL:n=Yme;break;case Me.LOGICAL_AND:return e?Zme:Qme;case Me.LOGICAL_OR:return e?ege:Jme;case Me.MUL:n=ige;break;case Me.PRELU:return e?hge:cge;case Me.SQUARED_DIFFERENCE:n=dge;break;case Me.SUB:n=fge;break}return`
    ${n}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fe;(function(t){t[t.ABS=0]="ABS",t[t.ACOS=1]="ACOS",t[t.ACOSH=2]="ACOSH",t[t.ASIN=3]="ASIN",t[t.ASINH=4]="ASINH",t[t.ATAN=5]="ATAN",t[t.ATANH=6]="ATANH",t[t.CEIL=7]="CEIL",t[t.COS=8]="COS",t[t.COSH=9]="COSH",t[t.ELU=10]="ELU",t[t.ERF=11]="ERF",t[t.EXP=12]="EXP",t[t.EXPM1=13]="EXPM1",t[t.FLOOR=14]="FLOOR",t[t.IS_FINITE=15]="IS_FINITE",t[t.IS_INF=16]="IS_INF",t[t.IS_NAN=17]="IS_NAN",t[t.LINEAR=18]="LINEAR",t[t.LOG=19]="LOG",t[t.LOG1P=20]="LOG1P",t[t.LOGICAL_NOT=21]="LOGICAL_NOT",t[t.NEG=22]="NEG",t[t.RELU=23]="RELU",t[t.RELU6=24]="RELU6",t[t.LEAKYRELU=25]="LEAKYRELU",t[t.RECIPROCAL=26]="RECIPROCAL",t[t.ROUND=27]="ROUND",t[t.RSQRT=28]="RSQRT",t[t.SELU=29]="SELU",t[t.SIGMOID=30]="SIGMOID",t[t.SIGN=31]="SIGN",t[t.SIN=32]="SIN",t[t.SINH=33]="SINH",t[t.SOFTPLUS=34]="SOFTPLUS",t[t.SQRT=35]="SQRT",t[t.SQUARE=36]="SQUARE",t[t.STEP=37]="STEP",t[t.TAN=38]="TAN",t[t.TANH=39]="TANH",t[t.TO_INT=40]="TO_INT"})(fe||(fe={}));const pge="return abs(a);",mge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,gge=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,yge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,xge="return asinh(a);",bge=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,wge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,vge="return ceil(a);",Sge="return cos(a);",Cge=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,kge="return exp(a) - 1.0;",$ge="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Nge=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Ige=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${Pb};
  let a1 = ${Mb};
  let a2 = ${Bb};
  let a3 = ${Vb};
  let a4 = ${Ub};
  let a5 = ${Wb};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Tge="return exp(a);",Ege="return floor(a);",Rge="return f32(!isnan(a) && !isinf(a));",Age="return f32(isinf(a));",Dge="return f32(isnan(a));",_ge="return a;",Oge=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Fge=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,zge="return f32(!(a >= 1.0));",Lge="return -a;",Pge="if (a < 0.0) { return uniforms.alpha * a; } return a;",Mge=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Bge="return 1.0 / a;",Vge="return select(a, 0.0, a < 0.0);",Uge="return clamp(a, 0.0, 6.0);",Wge="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Gge=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Hge="return round(a);",jge="return inverseSqrt(a);",qge=`
  if (a >= 0.0) {
    return ${sm} * a;
  } else {
    return ${nm} * (exp(a) - 1.0);
  }
`,Xge="return 1.0 / (1.0 + exp(-1.0 * a));",Kge="return sign(a);",Yge="return sin(a);",Qge=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Zge=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Jge="return sqrt(a);",eye="return a * a;",tye=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,nye="return tan(a);",sye=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,rye="return f32(i32((a)));";function Zo(t,e){switch(t){case fe.ABS:return pge;case fe.ACOS:return mge;case fe.ACOSH:return gge;case fe.ASIN:return yge;case fe.ASINH:return xge;case fe.ATAN:return bge;case fe.ATANH:return wge;case fe.COS:return Sge;case fe.COSH:return Cge;case fe.CEIL:return vge;case fe.ELU:return e?Nge:$ge;case fe.ERF:return Ige;case fe.EXP:return Tge;case fe.EXPM1:return kge;case fe.FLOOR:return Ege;case fe.IS_FINITE:return Rge;case fe.IS_INF:return Age;case fe.IS_NAN:return Dge;case fe.LINEAR:return _ge;case fe.LOG:return Oge;case fe.LOG1P:return Fge;case fe.LOGICAL_NOT:return zge;case fe.NEG:return Lge;case fe.LEAKYRELU:return e?Mge:Pge;case fe.RECIPROCAL:return Bge;case fe.RELU:return e?Gge:Vge;case fe.RELU6:return e?Wge:Uge;case fe.ROUND:return Hge;case fe.RSQRT:return jge;case fe.SELU:return qge;case fe.SIGMOID:return Xge;case fe.SIGN:return Kge;case fe.SIN:return Yge;case fe.SINH:return Qge;case fe.SOFTPLUS:return Zge;case fe.SQRT:return Jge;case fe.SQUARE:return eye;case fe.STEP:return tye;case fe.TAN:return nye;case fe.TANH:return sye;case fe.TO_INT:return rye;default:throw new Error(`BinaryType ${t} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(t,e=!1,n=!1,s=3){if(t===null)return"";let r="";if(t==="linear")r=Zo(fe.LINEAR);else if(t==="relu")r=Zo(fe.RELU,n);else if(t==="elu")r=Zo(fe.ELU,n);else if(t==="relu6")r=Zo(fe.RELU6,n);else if(t==="prelu")r=KC(Me.PRELU,n);else if(t==="sigmoid")r=Zo(fe.SIGMOID,n);else if(t==="leakyrelu")r=Zo(fe.LEAKYRELU,n);else throw new Error(`Activation ${t} has not been implemented for the WebGPU backend.`);const a=Ye(n?4:1);let o="";return e?o=`
      fn activation(a : ${a}, coords : vec${s}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:o=`
      fn activation(a : ${a}, coords : vec${s}<i32>) -> ${a} {
        ${r}
      }`,o}function du(t,e){return`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(t,e,n=!1,s=!1,r=!1,i=1){R(t&&i===1||!t,()=>`transposeA ${t} is not compatible with component size ${i}`);const a=`
      ${t?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Ye(i)} {
    var value = ${Ye(i)}(0.0);
    ${n&&r?a:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Ye(i)} {
    var value = ${Ye(i)}(0.0);
    ${o}
    return value;
  }
  `}function YC(t,e,n,s,r=!1,i=!1,a=!1,o=1){return`
  ${HL(n,s,r,i,a,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Ye(o)}) {
    ${r&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${du(t,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const iye=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,aye=(t,e,n,s)=>{if(t)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${n}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",i="";for(let a=0;a<e;a++)r+=`let BCached${a} = mm_Bsub[k * ${e} + ${a}][tileCol];`,i+=`acc[i] = fma(BCached${a}, vec4<f32>(ACached[${a}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${n}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function p0(t,e,n=!1,s=32,r=!1,i=32,a=!1){const o=e[1]*t[1],l=e[0]*t[0],u=n?o:s,c=n?s:o,h=u/e[0],d=s/e[1],f=t[1],p=t[0];return R((n&&h===4&&t[1]===4||!n&&(h===3||h===4))&&u%e[0]===0&&s%e[1]===0&&t[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${t[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/t[0]}>, ${s}>;

  ${me()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${f};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${f};
    let globalCol = i32(globalId.x) * ${p};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${f}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${f}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${iye(n,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${aye(n,h,f,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const sT=t=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,oye=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function m0(t,e,n=!1,s=32,r=!1,i=32,a=!1,o=!1){const l=t[1]*e[1],u=t[0]*e[0],c=n?l:s,h=n?s:l;R(h%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],f=c/e[0],p=s/e[1],m=t[1],g=t[0],y=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${sT(n)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${f};
  let tileRowB = i32(localId.y) * ${p};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${f}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${sT(n)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${oye(n)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${me()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}const lye=t=>t?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function uye(t,e=!1){R(t[1]===1&&t[2]===1,()=>`A linear work group size is required. But got ${t}.`);const n=t[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${t[0]}>;

    ${me()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${n} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${lye(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/4}; k++) {
          let rowB = t * ${n} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class cye{constructor(e,n,s=!1,r=!1,i=null,a=null,o=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||n[1]%4===0&&s)&&n[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=n[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=zme(n[1],u,n[2],s);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=i!=null,h=o!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=a,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(n[1],n[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,n,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;const a=e%r===0,o=n%i===0,l=s%this.tileInner===0;return[a,o,l]}getUserCode(){return`
      ${za(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${YC(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?p0(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?uye(this.workgroupSize,this.transposeA):m0(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hye(t){return`
    var<workgroup> sumValues : array<f32, ${t}>;
    ${me()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${t}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${t/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class dye{constructor(e,n=!1,s=!1,r=null,i=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=r!=null,l=a!=null;o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=s,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${n}_${s}`}getUserCode(){return`
      ${za(this.activation,this.hasPreluActivationWeights)}
      ${YC(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${hye(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fye(t){const e=t[1],n=t[0],s=e>n?e:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${me()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class pye{constructor(e,n,s,r=!1,i=!1,a=null,o=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=a!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=i,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${i}`}getUserCode(){return`
      ${za(this.activation,this.hasPreluActivationWeights)}
      ${YC(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${fye(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mye{constructor(e,n,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,R(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const i=(s&&this.outputShape[1]%4===0||!s&&n%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ge(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],n],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${HL(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Ye(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Vo("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?p0(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):m0(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class gye{constructor(e,n=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${za(this.activation,this.hasPreluActivationWeights)}
    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${du(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yye{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||Yl(r),i==="string"){const a=rn(i,Y(s));return a.fill(r),e.makeTensorInfo(s,i,a)}else{const a=new yye(s),o=[{type:"float32",data:[r]}];return e.runWebGPUProgram(a,[],i,o)}}const xye={kernelName:Ix,backendName:"webgpu",kernelFunc:Ts};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ne(t){const{inputs:e,attrs:n}=t,{x:s}=e,{shape:r}=n,i=Y(s.shape),a=j2(r,i),o=Y(a);return R(i===o,()=>`The new shape (${a}) has ${o} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const bye={kernelName:Fp,backendName:"webgpu",kernelFunc:Ne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],f=n?t.shape[u-1]:t.shape[u-2],p=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=Y(m),x=Y(g),v=Pe(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);R(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`);const S=n?[y,h,f]:[y,f,h],N=s?[x,p,d]:[x,d,p],I=Ne({inputs:{x:t},backend:r,attrs:{shape:S}}),T=Ne({inputs:{x:e},backend:r,attrs:{shape:N}}),A=[I,T],D=Math.max(y,x),O=[I,T],U=[{type:"int32",data:[f]},{type:"int32",data:[p]},{type:"int32",data:[h]}];let B,q;const H=[D,f,p];let L=J().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(L<0){const K=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),ee=K>0?K:r.thresholdToIncreaseWorkgroups,se=D*Math.ceil(f/32)*Math.ceil(p/32);se<=ee||f<=8&&se<=ee*2?D*f*p<=128?L=Ri.MatMulReduceProgram:D===1&&d>=2e3?L=Ri.MatMulSplitKProgram:L=Ri.MatMulSmallOutputSizeProgram:L=Ri.MatMulPackedProgram}switch(L){case Ri.MatMulReduceProgram:B=new dye(H,n,s,i,l,a);break;case Ri.MatMulSplitKProgram:{if(q=Ts({backend:r,attrs:{shape:H,value:0,dtype:t.dtype}}),B=new mye(H,d,n,s),i||l){q=r.runWebGPUProgram(B,O,t.dtype,U,q);const ee=new gye(q.shape,i,l,a);let se=null;const ie=[q];i&&ie.push(i),a&&ie.push(a),l==="leakyrelu"&&(se=[{type:"float32",data:[o]}],ee.uniforms+=" alpha : f32,");const ue=r.runWebGPUProgram(ee,ie,q.dtype,se);A.push(q);const le=Ne({inputs:{x:ue},backend:r,attrs:{shape:v}});A.push(ue);for(const de of A)r.disposeData(de.dataId);return le}break}case Ri.MatMulSmallOutputSizeProgram:B=new pye(S,N,H,n,s,i,l,a);break;case Ri.MatMulPackedProgram:const K=r.adapterInfo.isIntel();B=new cye(S,H,n,s,i,l,a,K);break;default:throw new Error(`Unsupported MatMulProgramType ${L}.`)}i&&O.push(i),a&&O.push(a),l==="leakyrelu"&&(U.push({type:"float32",data:[o]}),B.uniforms+=" alpha : f32,"),q=r.runWebGPUProgram(B,O,t.dtype,U,q);const Z=Ne({inputs:{x:q},backend:r,attrs:{shape:v}});A.push(q);for(const K of A)r.disposeData(K.dataId);return Z}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wye(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return g0({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const vye={kernelName:pf,backendName:"webgpu",kernelFunc:wye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rT{constructor(e,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Pe(n,s),this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${KC(this.op,!1)}
      }

      ${me("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Py{constructor(e,n,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Pe(n,s),this.dispatchLayout=Se(this.outputShape),this.op=e,this.useSharedMemoryWithA=n.length<=1&&s.length>1&&n[0]<128,this.useSharedMemoryWithB=s.length<=1&&n.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:n[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=n.length>0&&n[n.length-1]%4===0,i=s.length>0&&s[s.length-1]%4===0;r&&i?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(lN(s)||s[s.length-1]===1)||i&&(lN(n)||n[n.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const n=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${n}, b : ${n}) -> ${n} {
      ${KC(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${me("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${me("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${n}(getAByOutputCoords(coords));
           let b = ${n}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(t){const{inputs:e}=t,{x:n}=e;return t.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Sye={kernelName:ih,backendName:"webgpu",kernelFunc:Xs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fu(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.makeTensorInfo(s.shape,"complex64"),a=n.tensorMap.get(i.dataId),o=Xs({inputs:{x:s},backend:n}),l=Xs({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const Cye={kernelName:fx,backendName:"webgpu",kernelFunc:fu};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kh{constructor(e,n,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=n,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${n}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Zo(this.op,!1)}
      }
      ${me("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ft({opType:t,cpuKernelImpl:e,dtype:n}){return({inputs:s,backend:r})=>{const{x:i}=s,a=r,o=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){const u=a.tensorMap.get(i.dataId),c=e(u.values,o);return a.makeTensorInfo(i.shape,o,c)}const l=new Kh(i.shape,t);return a.runWebGPUProgram(l,[i],o)}}function Un({opType:t,cpuKernelImpl:e,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;if(n&&a.dtype==="complex64"){const h=l.tensorMap.get(a.dataId),d=l.tensorMap.get(o.dataId);let f,p;if(t!==Me.MUL)[f,p]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{const[y,x]=g,w={dataId:y.dataId,dtype:y.dtype,shape:a.shape},v={dataId:x.dataId,dtype:x.dtype,shape:o.shape},S=new Py(t,a.shape,o.shape);return l.runWebGPUProgram(S,[w,v],Vn(y.dtype,x.dtype))});else{const g=new rT(Me.COMPLEX_MULTIPLY_REAL,a.shape,o.shape),y=new rT(Me.COMPLEX_MULTIPLY_IMAG,a.shape,o.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:a.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];f=l.runWebGPUProgram(g,x,"float32"),p=l.runWebGPUProgram(y,x,"float32")}const m=fu({inputs:{real:f,imag:p},backend:l});return l.disposeData(f.dataId),l.disposeData(p.dataId),m}const u=s||Vn(a.dtype,o.dtype);if((a.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([a,o]))&&e!=null){const h=l.tensorMap.get(a.dataId).values,d=l.tensorMap.get(o.dataId).values,f=a.dtype==="string"?pi(h):h,p=a.dtype==="string"?pi(d):d,[m,g]=e(a.shape,o.shape,f,p,u);return l.makeTensorInfo(g,u,m)}const c=new Py(t,a.shape,o.shape);return l.runWebGPUProgram(c,[a,o],u)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:kye,castImpl:$ye,ceilImpl:Nye,concatImpl:Iye,equalImpl:Tye,expImpl:Eye,expm1Impl:Rye,floorImpl:Aye,floorDivImpl:Dye,gatherNdImpl:_ye,gatherV2Impl:Oye,greaterEqualImpl:Fye,greaterImpl:zye,lessEqualImpl:Lye,lessImpl:Pye,logImpl:Mye,maxImpl:Bye,maximumImpl:Vye,minimumImpl:Uye,multiplyImpl:Wye,negImpl:Gye,notEqualImpl:Hye,prodImpl:jye,rangeImpl:qye,rsqrtImpl:Xye,scatterImpl:Kye,simpleAbsImpl:Yye,sliceImpl:Qye,stridedSliceImpl:Zye,stringNGramsImpl:Jye,subImpl:exe,tileImpl:txe,topKImpl:nxe,transposeImpl:sxe}=Dz;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rxe=ft({opType:fe.ABS,cpuKernelImpl:Yye}),ixe={kernelName:qf,backendName:"webgpu",kernelFunc:rxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const axe=ft({opType:fe.ACOS}),oxe={kernelName:Mc,backendName:"webgpu",kernelFunc:axe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lxe=ft({opType:fe.ACOSH}),uxe={kernelName:Bc,backendName:"webgpu",kernelFunc:lxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cxe=Un({opType:Me.ADD,cpuKernelImpl:kye,supportsComplex:!0}),hxe={kernelName:Ql,backendName:"webgpu",kernelFunc:cxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dxe{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const n=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${me("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${n});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fxe(t){const{inputs:e,backend:n}=t,s=e;if(s.length===1)return Xs({inputs:{x:s[0]},backend:n});const r=s.map(o=>o.dtype).reduce((o,l)=>Vn(o,l)),i=s.map(o=>o.shape),a=new dxe(i);return n.runWebGPUProgram(a,s,r)}const pxe={kernelName:Xf,backendName:"webgpu",kernelFunc:fxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mxe{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[n[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){R(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${me()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gxe{constructor(e,n){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[n[r]];this.outputShape=s,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=n,this.shaderKey=`transpose_${n}`}getUserCode(){const e=hn(this.outputShape.length),n=jL(this.newDim);return`
      ${me("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${n}), uniforms.aShape)]);
          }
        }
      }
    `}}function jL(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=new Array(e);for(let s=0;s<t.length;s++)n[t[s]]=`coords.${ka(s)}`;return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[i[c]];if(n.shouldExecuteOnCPU([r])){const h=a.tensorMap.get(r.dataId).values,d=sxe(h,r.shape,r.dtype,i,l);return n.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&Ke(i,[1,0])){const c=new mxe(r.shape,i);return a.runWebGPUProgram(c,[r],r.dtype)}const u=new gxe(r.shape,i);return a.runWebGPUProgram(u,[r],r.dtype)}const yxe={kernelName:xl,backendName:"webgpu",kernelFunc:Ki};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xxe{constructor(e,n,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=dn(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=n,this.shaderKey=`reduce_${n}`}getUserCode(){let e="",n="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,n="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",n="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",n="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",n="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${me("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bxe={mean:"float32",all:"bool",any:"bool"};function pu(t,e,n,s,r){const i=t.shape.length,a=[],o=qe(e,t.shape);let l=o;const u=It(l,i);let c=t;u!=null&&(c=Ki({inputs:{x:t},attrs:{perm:u},backend:r}),l=Pt(l.length,i),a.push(c)),wn(s,l,i);const[h,d]=dn(c.shape,l);let f=h;n&&(f=on(h,o));let p;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){const m=r.tensorMap.get(c.dataId).values;switch(s){case"max":const g=Bye(m,Y(d),f,t.dtype);p=r.makeTensorInfo(f,t.dtype,g);break;case"prod":const{outVals:y,outShape:x,outDtype:w}=jye(c.shape,c.dtype,m,l);p=r.makeTensorInfo(x,w,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=Y(d),y=Y(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},w=bxe[s]||rb(t.dtype),v=[{type:"int32",data:[m]}],S=new xxe(x,s,r.device.limits.maxComputeWorkgroupSizeX),N=r.runWebGPUProgram(S,[c],w,v);a.push(N),p=Ne({inputs:{x:N},attrs:{shape:f},backend:r})}return a.forEach(m=>r.disposeData(m.dataId)),p}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{keepDims:i,axis:a}=s;return pu(r,a,i,"all",n)}const vxe={kernelName:ax,backendName:"webgpu",kernelFunc:wxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{keepDims:i,axis:a}=s;return pu(r,a,i,"any",n)}const Cxe={kernelName:ox,backendName:"webgpu",kernelFunc:Sxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qL{constructor(e,n,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[n];this.op=s==="min"?"<":">";const[i,a]=dn(e,r);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=Se(this.outputShape),Y(a)<32?(this.type="plain",this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ge(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],n=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ka(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)r+=`outputCoords.${ka(i)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${me("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${n()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${me("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${n()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=Ki({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),wn("argMax",[a[0]],l.shape.length);const c=new qL(l.shape,a[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>n.disposeData(f.dataId)),d}const $xe={kernelName:Kf,backendName:"webgpu",kernelFunc:kxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i}=s;let a=qe(i,r.shape);const o=It(a,r.shape.length);let l=r;const u=[];o!=null&&(l=Ki({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Pt(a.length,l.shape.length)),wn("argMin",[a[0]],l.shape.length);const c=new qL(l.shape,a[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>n.disposeData(f.dataId)),d}const Ixe={kernelName:Yf,backendName:"webgpu",kernelFunc:Nxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Txe=ft({opType:fe.ASIN}),Exe={kernelName:Vc,backendName:"webgpu",kernelFunc:Txe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rxe=ft({opType:fe.ASINH}),Axe={kernelName:Uc,backendName:"webgpu",kernelFunc:Rxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dxe=ft({opType:fe.ATAN}),_xe={kernelName:Wc,backendName:"webgpu",kernelFunc:Dxe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oxe=Un({opType:Me.ATAN2}),Fxe={kernelName:Hc,backendName:"webgpu",kernelFunc:Oxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zxe=ft({opType:fe.ATANH}),Lxe={kernelName:Gc,backendName:"webgpu",kernelFunc:zxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pxe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Df{constructor(e,n,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool2D_${n}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}class QC{constructor(e,n,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool3D_${n}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:i,keepDims:a}=s;return pu(r,i,a,"max",n)}const Mxe={kernelName:vp,backendName:"webgpu",kernelFunc:XL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{keepDims:i,axis:a}=s;return pu(r,a,i,"mean",n)}const Bxe={kernelName:kp,backendName:"webgpu",kernelFunc:KL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(t,e,n,s){if(e.filterWidth===1&&e.filterHeight===1&&Ke(e.inShape,e.outShape))return Xs({inputs:{x:t},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const a=t.shape.length,o=Ne({inputs:{x:t},backend:s,attrs:{shape:[t.shape[a-3]*t.shape[a-2],t.shape[a-1]]}});let l;n==="avg"?l=KL({inputs:{x:o},backend:s,attrs:{axis:0,keepDims:!1}}):(R(n==="max",()=>`Invalid pool type ${n}`),l=XL({inputs:{x:o},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=Ne({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(o.dataId),s.disposeData(l.dataId),u}let r;const i=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new Pxe(e):(n==="avg"?r=new Df(e,"avg"):(R(n==="max",()=>`Invalid pool type ${n}`),r=new Df(e,"max")),i.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[t],t.dtype,i)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=as(r.shape,i,a,1,o,l);return YL(r,c,"avg",n)}const Uxe={kernelName:Qf,backendName:"webgpu",kernelFunc:Vxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wxe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=pr(r.shape,i,a,c,o,u,l),d=new QC(h,"avg"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[r],r.dtype,f)}const Gxe={kernelName:Zf,backendName:"webgpu",kernelFunc:Wxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hxe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class jxe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qxe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=pr(a.shape,o,l,1,u,c),d=new jxe(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return n.runWebGPUProgram(d,[r],a.dtype,p)}const Xxe={kernelName:ux,backendName:"webgpu",kernelFunc:qxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kxe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;GL([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=as(a.shape,o,l,1,u),h=new Hxe(c),d=1/(c.filterHeight*c.filterWidth),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return n.runWebGPUProgram(h,[r],a.dtype,f)}const Yxe={kernelName:lx,backendName:"webgpu",kernelFunc:Kxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qxe(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return g0({a:r,b:i,transposeA:a,transposeB:o,backend:n})}const Zxe={kernelName:Jf,backendName:"webgpu",kernelFunc:Qxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jxe{constructor(e,n){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.rank=n.length,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${hn(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=hn(this.rank),n=ebe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((i,a)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((i,a)=>`sourceLoc.${Mv[a]} = uniforms.start.${ka(a)} + coords.${Mv[a]};`),`
      ${me("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${n}));
        }
      }
    `}}const Mv=["x","y","z","w","u","v"];function ebe(t){if(t===1)return"sourceLoc";if(t<=6)return Mv.slice(0,t).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yh(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s,[o,l]=tm(r,i,a);if(Rb(r,o,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.tensorMap.get(r.dataId),d=Qye(h.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}if(Y(l)===0)return n.makeTensorInfo(l,r.dtype,[]);const u=new Jxe(o,l),c=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[r],r.dtype,c)}const tbe={kernelName:Bp,backendName:"webgpu",kernelFunc:Yh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nbe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,crops:a}=s;R(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce((x,w)=>x*w),l=su(r.shape,i,o),u=ru(l.length,i.length),c=iu(r.shape,i,o),h=zb(a,i.length),d=Lb(c,a,i.length),f=[],p=Ne({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Ki({inputs:{x:p},backend:n,attrs:{perm:u}}),g=Ne({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Yh({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return f.push(p),f.push(m),f.push(g),f.forEach(x=>n.disposeData(x.dataId)),y},sbe={kernelName:ep,backendName:"webgpu",kernelFunc:nbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rbe=`
  fn bincount_write(index: i32, value: f32) {
    ${Vo("&result[index]","value","float32")}
  }
`,ibe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class QL{constructor(e,n,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=n,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?ibe:rbe}
  ${me("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a}=s,o=Y(r.shape),u=Y(i.shape)>0,c=[a],h=i.dtype,d=Ts({backend:n,attrs:{shape:c,value:0,dtype:h}}),f=new QL([o],u),p=[{type:"int32",data:[a]}],m=u?[r,i]:[r];return n.runWebGPUProgram(f,m,h,p,d)}const obe={kernelName:cx,backendName:"webgpu",kernelFunc:abe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lbe{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${me("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ube(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e;if(n.shouldExecuteOnCPU([s,r])){const c=n.tensorMap.get(s.dataId),h=n.tensorMap.get(r.dataId),d=c.values,f=h.values,p=Pe(Array.from(d),Array.from(f));return n.makeTensorInfo([p.length],"int32",Int32Array.from(p))}const i=Y(s.shape),a=Y(r.shape),o=Math.max(i,a),l=new lbe(o),u=[{type:"int32",data:[i]},{type:"int32",data:[a]}];return n.runWebGPUProgram(l,[s,r],"int32",u)}const cbe={kernelName:dx,backendName:"webgpu",kernelFunc:ube};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL=Un({opType:Me.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Hye}),hbe={kernelName:Tp,backendName:"webgpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xm(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.tensorMap.get(s.dataId);return Xs({inputs:{x:r.complexTensorInfos.real},backend:n})}const dbe={kernelName:Vx,backendName:"webgpu",kernelFunc:xm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fbe(t,e){const n=new Kh(t.shape,fe.TO_INT),s=e.runWebGPUProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Xs({inputs:{x:r},backend:n});const a=cn(r.shape),o=Bv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=fu({inputs:{real:o,imag:a},backend:n});return a.dispose(),n.disposeData(o.dataId),l}if(r.dtype==="complex64"){const a=xm({inputs:{input:r},backend:n}),o=Bv({inputs:{x:a},backend:n,attrs:{dtype:i}});return n.disposeData(a.dataId),o}if(!q2(r.dtype,i)){const a=Xs({inputs:{x:r},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const a=n.tensorMap.get(r.dataId).values,[o,l,u]=$ye(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}if(i==="int32")return fbe(r,n);if(i==="bool"){const a=n.makeTensorInfo([],"bool",Rn("bool",1)),l=ZL({inputs:{a:r,b:a},backend:n});return n.disposeData(a.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const pbe={kernelName:jc,backendName:"webgpu",kernelFunc:Bv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mbe=ft({opType:fe.CEIL,cpuKernelImpl:Nye}),gbe={kernelName:qc,backendName:"webgpu",kernelFunc:mbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ybe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${me("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xbe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${me("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;const l=[{type:"float32",data:[i]},{type:"float32",data:[a]}];return Y(r.shape)%4===0?o=new ybe(r.shape):o=new xbe(r.shape),n.runWebGPUProgram(o,[r],r.dtype,l)}const wbe={kernelName:Xc,backendName:"webgpu",kernelFunc:bbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vbe{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Sbe(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.tensorMap.get(s.dataId),i=new vbe(s.shape),a=[iT(s,r.complexTensorInfos.real),iT(s,r.complexTensorInfos.imag)];return n.runWebGPUProgram(i,a,a[0].dtype)}const Cbe={kernelName:tp,backendName:"webgpu",kernelFunc:Sbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kbe{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Is(e,1),this.variableNames=e.map((n,s)=>`T${s}`),this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let n=0;n<this.offsetLength;n++)this.uniforms+=`offset${n} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)e.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${me("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y0(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.tensorMap.get(s.dataId);return Xs({inputs:{x:r.complexTensorInfos.imag},backend:n})}const $be={kernelName:Ax,backendName:"webgpu",kernelFunc:y0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(t,e,n){const s=t[0].dtype;if(s==="complex64"){const p=t.map(w=>xm({inputs:{input:w},backend:n})),m=t.map(w=>y0({inputs:{input:w},backend:n})),g=Ad(p,e,n),y=Ad(m,e,n),x=fu({inputs:{real:g,imag:y},backend:n});return p.forEach(w=>n.disposeData(w.dataId)),m.forEach(w=>n.disposeData(w.dataId)),n.disposeData(g.dataId),n.disposeData(y.dataId),x}let r=n.shouldExecuteOnCPU(t);if(s==="string"&&(r=!0),r){const p=t.map(S=>{const I=[-1,Y(S.shape.slice(e))];return Ne({inputs:{x:S},backend:n,attrs:{shape:I}})}),m=p.map(S=>({vals:n.readSync(S.dataId),shape:S.shape})),g=Is(p.map(S=>S.shape),1),y=p[0].shape[0]===1,x=Iye(m,g,s,y),w=Is(t.map(S=>S.shape),e),v=n.makeTensorInfo(w,s,x);return p.forEach(S=>n.disposeData(S.dataId)),v}const i=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>i){const p=[];for(let g=0;g<t.length;g+=i){const y=t.slice(g,g+i);p.push(Ad(y,e,n))}const m=Ad(p,e,n);for(const g of p)n.disposeData(g.dataId);return m}const{tensors2D:a,outShape:o}=Nbe(t,e,n),l=a.map(p=>p.shape),u=new kbe(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let p=1;p<h.length;p++)h[p]=h[p-1]+l[p][1],c.push({type:"int32",data:[h[p]]})}const d=n.runWebGPUProgram(u,a,a[0].dtype,c);a.forEach(p=>n.disposeData(p.dataId));const f=Ne({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),f}function Nbe(t,e,n){const s=Is(t.map(i=>i.shape),e);return{tensors2D:t.map(i=>Ne({inputs:{x:i},backend:n,attrs:{shape:[Y(i.shape.slice(0,e)),Y(i.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=qe(r,e[0].shape)[0],a=e.map(u=>u.shape);_b(a,i);const o=Is(e.map(u=>u.shape),i);if(Y(o)===0)return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>Y(u.shape)>0);return l.length===1?Xs({inputs:{x:l[0]},backend:n}):Ad(l,i,n)}const Ibe={kernelName:np,backendName:"webgpu",kernelFunc:JL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tbe(t,e,n,s,r=!1,i=null,a=!1,o=4,l=4,u=4){const c=A=>{switch(A){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${A} is not supported.`)}},h=A=>{switch(A){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=t?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,f=t?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,p=t?"uniforms.xShape[1]":"uniforms.xShape[2]",m=t?"uniforms.xShape[2]":"uniforms.xShape[3]",g=t?"row":"col",y=t?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${Ye(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,w=t?e&&s?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${Ye(o)}(0.0);`:s&&n?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${Ye(o)}(0.0);`,v=`${h(l)}`,S=Ye(u),N=Ye(t?o:l),I=Ye(t?l:o);return`
      ${za(i,a,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${N} {
        ${t?w:v}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${I} {
        ${t?v:w}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${S}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${f}
        ${du(r,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class Ebe{constructor(e,n,s,r,i=!1,a=null,o=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=VL(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=UL(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),o&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=n%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?p0(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):m0(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),n=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Tbe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,n[0],n[1],n[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rbe{constructor(e,n=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n,this.activation=s,this.hasPreluActivationWeights=r,n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${za(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${du(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${me("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Abe{constructor(e,n){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=n,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${me("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${n}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function My(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function Dbe({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=n.dataFormat==="channelsLast",u=!l,c=!1,h=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[];let f,p;if(h){const y=n.inHeight*n.inWidth*n.inChannels;f=Ne({inputs:{x:t},backend:s,attrs:{shape:[1,n.batchSize,y]}}),p=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,y,n.outChannels]}})}else f=Ne({inputs:{x:t},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),p=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(f),d.push(p),i!=null){const y=My(i.shape,l);y!=null&&(i=Ne({inputs:{x:i},backend:s,attrs:{shape:y}}),d.push(i))}if(r!=null){const y=My(r.shape,l);y!=null&&(r=Ne({inputs:{x:r},backend:s,attrs:{shape:y}}),d.push(r))}const m=g0({a:l?f:p,b:l?p:f,transposeA:u,transposeB:c,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),g=Ne({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(const y of d)s.disposeData(y.dataId);return g}function _be({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:f,outWidth:p,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,w=x==="channelsLast",v=l*u*c,S=m*p,N=w?[n.batchSize,S,v]:[n.batchSize,v,S],I=new Abe(N,w),T=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[d,h]},{type:"int32",data:[y,g]},{type:"int32",data:[p]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],A=s.runWebGPUProgram(I,[t],t.dtype,T),D=[];D.push(A);const O=Ne({inputs:{x:e},backend:s,attrs:{shape:[1,v,-1]}});if(D.push(O),i!=null){const L=My(i.shape,w);L!=null&&(i=Ne({inputs:{x:i},backend:s,attrs:{shape:L}}),D.push(i))}if(r!=null){const L=My(r.shape,w);L!=null&&(r=Ne({inputs:{x:r},backend:s,attrs:{shape:L}}),D.push(r))}const q=g0({a:w?A:O,b:w?O:A,transposeA:!w,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),H=Ne({inputs:{x:q},backend:s,attrs:{shape:n.outShape}});D.push(q);for(const L of D)s.disposeData(L.dataId);return H}function eP({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=r!=null,u=i!=null,c=n.dataFormat==="channelsLast",h=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=J().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID")))return Dbe({x:t,filter:e,convInfo:n,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});const f=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),p=f>-1?f:s.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(J().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=p)return _be({x:t,filter:e,convInfo:n,backend:s,bias:r,preluActivationWeights:i,leakyreluAlpha:a,activation:o});let g;const y=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(d)g=new Rbe(n,l,o,u);else{const N=c?n.outHeight*n.outWidth:n.outChannels,I=c?n.outChannels:n.outHeight*n.outWidth,T=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[N]},{type:"int32",data:[I]},{type:"int32",data:[T]});const A=s.adapterInfo.isIntel();g=new Ebe(n,N,I,T,l,o,u,A)}const w=[],v=[t,e];l&&(!c&&r.shape.length===1&&(r=Ne({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),w.push(r)),v.push(r)),u&&(!c&&i.shape.length===1&&(i=Ne({inputs:{x:i},backend:s,attrs:{shape:[i.shape[0],1,1]}}),w.push(i)),v.push(i)),o==="leakyrelu"&&(x.push({type:"float32",data:[a]}),g.uniforms+=" alpha : f32,");const S=s.runWebGPUProgram(g,v,t.dtype,x);for(const N of w)s.disposeData(N.dataId);return S}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Obe(t){const{inputs:e,attrs:n,backend:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=Qs(l),d=Lt(r.shape,i.shape,a,u,o,c,!1,h);return eP({x:r,filter:i,convInfo:d,backend:s})}const Fbe={kernelName:sp,backendName:"webgpu",kernelFunc:Obe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zbe{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${me()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${me("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${n}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Lbe{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${me("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Pbe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${me("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Mbe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${me("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Qs(l),d=Lt(r.shape,c,a,1,o,u,!1,h),f=new Lbe(d),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return n.runWebGPUProgram(f,[r,i],r.dtype,p)}const Vbe={kernelName:px,backendName:"webgpu",kernelFunc:Bbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ube(t=4){const e=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ye(t)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ye(t)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${t}];`}
      }
      return ${Ye(t)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Ye(t)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Ye(t)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(t)}
    }
    return ${Ye(t)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Ye(t)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${t}] = value;
    }
  }`}class Wbe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,R(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=VL(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=UL(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?p0(this.elementsPerThread,this.workgroupSize):m0(this.elementsPerThread,this.workgroupSize);return`
    ${Ube(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gbe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Qs(u),d=Lt(a,i.shape,o,1,l,c,!1,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let p;if(J().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")p=new zbe(d);else{p=new Wbe(d);const m=d.inHeight*d.inWidth,g=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;f.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(p,[r,i],"float32",f)}const Hbe={kernelName:rp,backendName:"webgpu",kernelFunc:Gbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jbe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=vi(r.shape,i.shape,a,l,o),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new jbe(u),f=Vn(r.dtype,i.dtype);return n.runWebGPUProgram(d,[r,i],f,h)}const Xbe={kernelName:ip,backendName:"webgpu",kernelFunc:qbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kbe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,u=vi(r.shape,l,a,1,o),c=new Pbe(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(c,[r,i],i.dtype,h)}const Ybe={kernelName:mx,backendName:"webgpu",kernelFunc:Kbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qbe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,pad:o,inputShape:l}=s,u=vi(l,i.shape,a,1,o),c=new Mbe(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(c,[r,i],r.dtype,h)}const Zbe={kernelName:gx,backendName:"webgpu",kernelFunc:Qbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jbe=ft({opType:fe.COS}),e0e={kernelName:Kc,backendName:"webgpu",kernelFunc:Jbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t0e=ft({opType:fe.COSH}),n0e={kernelName:Yc,backendName:"webgpu",kernelFunc:t0e};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s0e{constructor(e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[i]=n;this.outputShape=[i,s[0],s[1],e],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,n]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,i]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,l]=this.cropWidthBiggerThan1?[`(${n} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${n} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${n}`];return`
    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${o};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${n} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r0e=t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new s0e(r.shape[3],i.shape,o,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,i,a],"float32",h)},i0e={kernelName:xx,backendName:"webgpu",kernelFunc:r0e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _f;(function(t){t.Prod="*",t.Sum="+"})(_f||(_f={}));class aT{constructor(e,n,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,n=this.op===_f.Prod?"1.0":"0.0",s=this.exclusive?n:`getX(${oT(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let i="",a="";return this.exclusive?(i=this.reverse?`end != ${r-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${r}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${me("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${lT(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${a};
           ${lT(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${oT(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function oT(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function lT(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(t,e,n,s,r,i){const a=e.shape.length,o=It([s],a);let l=e;o!=null&&(l=Ki({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=Pt(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=Xs({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const f=new aT(t,l.shape,!1,i),p=h,m=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(f,[h],h.dtype,m),n.disposeData(p.dataId)}if(r){const d=new aT(t,l.shape,r,i),f=h,p=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(d,[h],h.dtype,p),n.disposeData(f.dataId)}if(o!=null){const d=Ji(o),f=Ki({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeData(h.dataId),n.disposeData(l.dataId),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return tP(_f.Prod,r,n,i,a,o)}const o0e={kernelName:yx,backendName:"webgpu",kernelFunc:a0e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return tP(_f.Sum,r,n,i,a,o)}const u0e={kernelName:ap,backendName:"webgpu",kernelFunc:l0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s,l=r.shape.length===1,c=Y(i.shape)>0,h=i.dtype,d=l?[r.shape[0]]:[r.shape[0],r.shape[1]],f=l?[a]:[r.shape[0],a],p=Ts({backend:n,attrs:{shape:f,value:0,dtype:h}}),m=new QL(d,c,o),g=[{type:"int32",data:[a]}],y=c?[r,i]:[r];return n.runWebGPUProgram(m,y,h,g,p)}const h0e={kernelName:bx,backendName:"webgpu",kernelFunc:c0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d0e{constructor(e,n){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${n}`,this.dataFormat=n}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],c=a==="NHWC"?r.shape[3]:r.shape[1],h=l*i,d=u*i,f=c/(i*i),p=a==="NHWC"?[o,h,d,f]:[o,f,h,d],m=[{type:"int32",data:[i]}],g=new d0e(p,a);return n.runWebGPUProgram(g,[r],r.dtype,m)}const p0e={kernelName:wx,backendName:"webgpu",kernelFunc:f0e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m0e{constructor(e,n,s,r=!1,i=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=i,this.hasPreluActivation=a,this.filterHeight=n,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,n=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${za(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${me()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<n?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${n})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${du(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nP{constructor(e,n=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Se(i),this.dispatch=ge(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),R(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,n=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${za(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${me("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${n}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${du(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sP{constructor(e,n=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${za(this.activation,this.hasPreluActivation,!1,4)}

      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${du(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Qs(l);let d=u;d==null&&(d=[1,1]);const f=Lt(r.shape,i.shape,a,d,o,c,!0,h),p=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],m=f.dataFormat==="channelsLast";let g;return!m&&f.inHeight>16&&f.inWidth>16&&f.strideHeight===1&&f.strideWidth===1&&f.dilationWidth===1&&f.dilationHeight===1&&f.inChannels===f.outChannels?g=new m0e(f.outShape,f.filterHeight,f.filterWidth):m&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&f.dilationHeight===1&&f.dilationWidth===1&&f.inChannels%4===0?(g=new nP(f),p.push({type:"int32",data:[g.virtualWidth]})):(g=new sP(f),p.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(g,[r,i],r.dtype,p)}const y0e={kernelName:op,backendName:"webgpu",kernelFunc:g0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x0e{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class b0e{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Lt(r.shape,c,a,o,l,u,!0),d=new x0e(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[r,i],"float32",f)}const v0e={kernelName:vx,backendName:"webgpu",kernelFunc:w0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S0e(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Lt(c,i.shape,a,o,l,u,!0),d=new b0e(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[r,i],r.dtype,f)}const C0e={kernelName:Sx,backendName:"webgpu",kernelFunc:S0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k0e{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0e(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],i=Y(s.shape),a=Ne({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new k0e(i),l=n.runWebGPUProgram(o,[a],a.dtype),u=Ne({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeData(a.dataId),n.disposeData(l.dataId),u}const N0e={kernelName:Cx,backendName:"webgpu",kernelFunc:$0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I0e{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${me("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,u=Fo(r.shape,i.shape,a,o,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new I0e(u);return n.runWebGPUProgram(d,[r,i],r.dtype,h)}const E0e={kernelName:lp,backendName:"webgpu",kernelFunc:T0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R0e{constructor(e,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(e.outShape),this.dispatch=ge(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${me("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Vo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class A0e{constructor(e,n,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Se(e.outShape),this.dispatch=ge(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${me("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Vo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,dy:a}=e,{strides:o,pad:l,dilations:u}=s,c=Fo(r.shape,i.shape,o,l,"NHWC",u),h=i.dtype,d=new A0e(c,i.shape,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Y(c.outShape)]}],p=Ts({backend:n,attrs:{shape:i.shape,value:0,dtype:h}});return n.runWebGPUProgram(d,[r,i,a],h,f,p)}const _0e={kernelName:uy,backendName:"webgpu",kernelFunc:D0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,dy:a}=e,{strides:o,pad:l,dilations:u}=s,c=Fo(r.shape,i.shape,o,l,"NHWC",u),h=r.dtype,d=new R0e(c,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[Y(c.outShape)]}],p=Ts({backend:n,attrs:{shape:c.inShape,value:0,dtype:h}});return n.runWebGPUProgram(d,[r,i,a],h,f,p)}const F0e={kernelName:ly,backendName:"webgpu",kernelFunc:O0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z0e{constructor(e,n,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Ic.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=n,this.textureFormat=s,this.shaderKey=`draw_${n}_${s}`}getUserCode(){let e;const n=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${n};
        rgba[1] = ${n};
        rgba[2] = ${n};
      } else {
        rgba[d] = ${n};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${me("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0e(t){const{inputs:e,backend:n,attrs:s}=t,{image:r}=e,{canvas:i,options:a}=s,[o,l]=r.shape.slice(0,2),{imageOptions:u}=a||{},c=(u==null?void 0:u.alpha)||1,h=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[o,l],f=new z0e(d,r.dtype,h);i.width=l,i.height=o;const p="webgpu";let m=i.getContext(p),g;m||(g=new OffscreenCanvas(l,o),m=g.getContext(p));const y=r.shape.length===3?r.shape[2]:1;m.configure({device:n.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",w=n.makeTensorInfo(d,x),v=n.tensorMap.get(w.dataId);v.resource=m.getCurrentTexture(),v.external=!0;const S=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(f,[r],x,S,w),g){const N=i.getContext("2d");if(!N)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");N.drawImage(g,0,0)}return n.disposeData(w.dataId),r}const P0e={kernelName:Y2,backendName:"webgpu",kernelFunc:L0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rP=Un({opType:Me.MUL,cpuKernelImpl:Wye,supportsComplex:!0}),M0e={kernelName:ph,backendName:"webgpu",kernelFunc:rP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return pu(r,i,a,"sum",n)}const B0e={kernelName:Vp,backendName:"webgpu",kernelFunc:iP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0e(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Gb(r,i.length);jb(a.length,l,i);const{path:u,steps:c}=qb(o,l),h=c.length;let d=null,f=a.length;const p=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=Hb(f,l[g]);let w;Xb(y)?w=i[g]:(w=Ki({inputs:{x:i[g]},backend:n,attrs:{perm:y}}),p.push(w));const v=w.shape.slice();for(let S=0;S<x.length;++S)v.splice(x[S],0,1);Ke(w.shape,v)||(w=Ne({inputs:{x:w},backend:n,attrs:{shape:v}}),p.push(w)),d===null?d=w:(d=rP({inputs:{a:w,b:d},backend:n}),p.push(d))}m<h-1&&(u[m]>=0&&(d=iP({inputs:{x:d},backend:n,attrs:{axis:u[m]-(a.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeData(m.dataId);return d}const U0e={kernelName:kx,backendName:"webgpu",kernelFunc:V0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W0e=ft({opType:fe.ELU}),G0e={kernelName:Zc,backendName:"webgpu",kernelFunc:W0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H0e=t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,i=new Py(Me.ELU_DER,s.shape,r.shape);return n.runWebGPUProgram(i,[s,r],s.dtype)},j0e={kernelName:$x,backendName:"webgpu",kernelFunc:H0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0e=Un({opType:Me.EQUAL,dtype:"bool",cpuKernelImpl:Tye}),X0e={kernelName:up,backendName:"webgpu",kernelFunc:q0e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K0e=ft({opType:fe.ERF}),Y0e={kernelName:Jc,backendName:"webgpu",kernelFunc:K0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q0e=ft({opType:fe.EXP,cpuKernelImpl:Eye,dtype:"float32"}),Z0e={kernelName:eh,backendName:"webgpu",kernelFunc:Q0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(R(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),o.splice(l,0,1),Ne({inputs:{x:i},backend:s,attrs:{shape:o}})}const J0e={kernelName:cp,backendName:"webgpu",kernelFunc:Vv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1e=ft({opType:fe.EXPM1,cpuKernelImpl:Rye}),t1e={kernelName:th,backendName:"webgpu",kernelFunc:e1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uT{constructor(e,n){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(t,e,n){const s=n.tensorMap.get(t.dataId),r=Y(t.shape),i=t.shape[t.shape.length-1],a=r/i,o=[],l=Ne({inputs:{x:t},backend:n,attrs:{shape:[a,i]}});o.push(l);const u=l.shape,c=new uT("real",u),h=new uT("imag",u),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],f=e?2*Math.PI:-2*Math.PI,p=e?u[1]:1,m=[{type:"float32",data:[f]},{type:"float32",data:[p]}],g=n.runWebGPUProgram(c,d,"float32",m);o.push(g);const y=n.runWebGPUProgram(h,d,"float32",m);o.push(y);const x=fu({inputs:{real:g,imag:y},backend:n});o.push(x);const w=Ne({inputs:{x},backend:n,attrs:{shape:t.shape}});return o.forEach(v=>n.disposeData(v.dataId)),w}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1e(t){const{inputs:e,backend:n}=t,{input:s}=e;return aP(s,!1,n)}const s1e={kernelName:Nx,backendName:"webgpu",kernelFunc:n1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r1e{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i1e={kernelName:Tx,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new r1e(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a1e=ft({opType:fe.FLOOR,cpuKernelImpl:Aye}),o1e={kernelName:nh,backendName:"webgpu",kernelFunc:a1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l1e=Un({opType:Me.FLOOR_DIV,cpuKernelImpl:Dye,dtype:"int32"}),u1e={kernelName:sh,backendName:"webgpu",kernelFunc:l1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c1e{constructor(e,n,s=!1){this.pixelsOpType=Ic.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[n,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${me("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h1e={kernelName:cy,backendName:"webgpu",kernelFunc:d1e};let Cu,P1=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function d1e(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[c,h]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c,i],f=J().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,p=a||o;if(u||l||p){let x;if(f)x=n.device.importExternalTexture({source:r});else{if(p){const B=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Cu==null||B!==P1)&&(P1=B,Cu=document.createElement("canvas").getContext("2d",{willReadFrequently:P1})),Cu.canvas.width=c,Cu.canvas.height=h,Cu.drawImage(r,0,0,c,h),r=Cu.canvas}const D=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,U=n.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",D);n.queue.copyExternalImageToTexture({source:r},{texture:U},[d[1],d[0]]),x=U}const w=Y(d),v=Re(d),S=new c1e(d,i,f),N=[{type:"uint32",data:[w]},{type:"uint32",data:[i]},{type:"uint32",data:[...v]}],I=n.makeTensorInfo([h,c],"int32"),T=n.tensorMap.get(I.dataId);T.resource=x;const A=n.runWebGPUProgram(S,[I],"int32",N);return n.disposeData(I.dataId),A}const m=r.data;let g=m;if(i!=null&&i!==4){g=new Uint8Array(r.width*r.height*i);const x=m.length;let w=0;for(let v=0;v<x;v++)v%4<i&&(g[w++]=m[v])}const y=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f1e{constructor(e,n,s,r,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Pe(e,n),Pe(e,s),this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Pe(e,r),this.variableNames.push("offset")),i!=null&&(Pe(e,i),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let n="1.0";return this.scaleShape!=null&&(n="getScaleByOutputIndex(index)"),`
      ${me("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${n};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p1e={kernelName:hp,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s,scale:r,offset:i,mean:a,variance:o}=t,{varianceEpsilon:l}=e,u=n,c=[s,a,o];let h=null;i!=null&&(h=i.shape,c.push(i));let d=null;r!=null&&(d=r.shape,c.push(r));const f=new f1e(s.shape,a.shape,o.shape,h,d),p=[{type:"float32",data:[l]}];return u.runWebGPUProgram(f,c,s.dtype,p)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,m=Qs(c),g=Lt(r.shape,i.shape,l,h,u,d,!1,m);return eP({x:r,filter:i,convInfo:g,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:p,activation:f})}const g1e={kernelName:mf,backendName:"webgpu",kernelFunc:m1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s;let p=c;p==null&&(p=[1,1]),R(Dn(l,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${p}'`);const m=Lt(r.shape,i.shape,l,p,u,h,!0),g=[r,i],y=a!=null,x=o!=null;y&&g.push(a),x&&g.push(o);const w=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(v=new nP(m,y,d,x),w.push({type:"int32",data:[v.virtualWidth]})):(v=new sP(m,y,d,x),w.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(w.push({type:"float32",data:[f]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,g,"float32",w)}const x1e={kernelName:gf,backendName:"webgpu",kernelFunc:y1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b1e{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${hn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1e(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],o=Y(s.shape),[l,u,c,h]=Eb(s,r),d=Ne({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),f=Ne({inputs:{x:s},backend:n,attrs:{shape:[Y(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=n.readSync(r.dataId),w=n.bufferSync(s),v=_ye(x,w,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,v.values)}const p=new b1e(a,[u,c]),m=[{type:"int32",data:[a]},{type:"int32",data:h}],g=n.runWebGPUProgram(p,[f,d],f.dtype,m),y=Ne({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(g.dataId),y}const v1e={kernelName:Ex,backendName:"webgpu",kernelFunc:w1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S1e{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=C1e(this.aShape);return`
      ${me("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function C1e(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<t.length;s++)s===2?n.push("indexZ"):n.push(`${e[s]}`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=qe(a,r.shape)[0],u=Yb(r,i,l,o),c=Y(i.shape),h=[],d=Ne({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=Ne({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const p=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])){const w=n.tensorMap.get(f.dataId).values,v=Ge(f.shape,f.dtype,w),N=n.tensorMap.get(d.dataId).values,I=Ge(d.shape,d.dtype,N),T=Oye(I,v,p);return h.forEach(A=>n.disposeData(A.dataId)),n.makeTensorInfo(u.outputShape,T.dtype,T.values)}const m=new S1e(d.shape,p),g=n.runWebGPUProgram(m,[d,f],d.dtype);h.push(g);const y=Ne({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeData(x.dataId)),y}const k1e={kernelName:dp,backendName:"webgpu",kernelFunc:oP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $1e=Un({opType:Me.GREATER,cpuKernelImpl:zye,dtype:"bool"}),N1e={kernelName:fp,backendName:"webgpu",kernelFunc:$1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I1e=Un({opType:Me.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Fye}),T1e={kernelName:rh,backendName:"webgpu",kernelFunc:I1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1e(t){const{inputs:e,backend:n}=t,{input:s}=e;return aP(s,!0,n)}const R1e={kernelName:Rx,backendName:"webgpu",kernelFunc:E1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1e=ft({opType:fe.IS_FINITE,dtype:"bool"}),D1e={kernelName:ah,backendName:"webgpu",kernelFunc:A1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _1e=ft({opType:fe.IS_INF,dtype:"bool"}),O1e={kernelName:oh,backendName:"webgpu",kernelFunc:_1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1e=ft({opType:fe.IS_NAN,dtype:"bool"}),z1e={kernelName:lh,backendName:"webgpu",kernelFunc:F1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:i}=s,a=[{type:"float32",data:[i]}],o=new Kh(r.shape,fe.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[r],"float32",a)}const P1e={kernelName:pp,backendName:"webgpu",kernelFunc:L1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M1e=Un({opType:Me.LESS,dtype:"bool",cpuKernelImpl:Pye}),B1e={kernelName:mp,backendName:"webgpu",kernelFunc:M1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1e=Un({opType:Me.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Lye}),U1e={kernelName:gp,backendName:"webgpu",kernelFunc:V1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W1e{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1e(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:i}=n,a=(r-s)/(i-1),o=new W1e(i),l=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return e.runWebGPUProgram(o,[],"float32",l)}const H1e={kernelName:Dx,backendName:"webgpu",kernelFunc:G1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j1e=ft({opType:fe.LOG,cpuKernelImpl:Mye}),q1e={kernelName:uh,backendName:"webgpu",kernelFunc:j1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X1e=ft({opType:fe.LOG1P}),K1e={kernelName:ch,backendName:"webgpu",kernelFunc:X1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1e=Un({opType:Me.LOGICAL_AND,dtype:"bool"}),Q1e={kernelName:yp,backendName:"webgpu",kernelFunc:Y1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1e=ft({opType:fe.LOGICAL_NOT}),J1e={kernelName:xp,backendName:"webgpu",kernelFunc:Z1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ewe=Un({opType:Me.LOGICAL_OR}),twe={kernelName:bp,backendName:"webgpu",kernelFunc:ewe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class nwe{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${lP}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class swe{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,R(n<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${n}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ge(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${me()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${lP}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rwe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;let u;i>16?u=new nwe(r.shape):u=new swe(r.shape,i);const c=[{type:"int32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[r],r.dtype,c)}const iwe={kernelName:wp,backendName:"webgpu",kernelFunc:rwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class awe{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function owe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new awe(r.shape),d=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return n.runWebGPUProgram(h,[r,i,a],r.dtype,d)}const lwe={kernelName:_x,backendName:"webgpu",kernelFunc:owe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uwe=Un({opType:Me.MAX,cpuKernelImpl:Vye}),cwe={kernelName:hh,backendName:"webgpu",kernelFunc:uwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hwe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=as(r.shape,i,a,1,o,l);return YL(r,c,"max",n)}const dwe={kernelName:Sp,backendName:"webgpu",kernelFunc:hwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fwe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=pr(r.shape,i,a,c,o,u,l),d=new QC(h,"max"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return n.runWebGPUProgram(d,[r],r.dtype,f)}const pwe={kernelName:Cp,backendName:"webgpu",kernelFunc:fwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mwe{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class gwe{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${me("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ywe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=pr(a.shape,o,l,h,u,c),f=new QC(d,"max",!0);let p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(f,[a],"int32",p),g=new gwe(d);p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=n.runWebGPUProgram(g,[r,m],a.dtype,p);return n.disposeData(m.dataId),y}const xwe={kernelName:Fx,backendName:"webgpu",kernelFunc:ywe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bwe(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;GL([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=as(o.shape,l,u,1,c,h),f=new Df(d,"max",!0);let p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(f,[o],"int32",p),g=new mwe(d);p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=n.runWebGPUProgram(g,[r,m],o.dtype,p);return n.disposeData(m.dataId),y}const wwe={kernelName:Ox,backendName:"webgpu",kernelFunc:bwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vwe(t){const{inputs:e,backend:n,attrs:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=s,{x:l}=e;R(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];R(Dn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=as(l.shape,r,i,u,a),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new Df(c,"max",!1);const f=n.runWebGPUProgram(d,[l],l.dtype,h);d=new Df(c,"max",!0,!0,o);const p=n.runWebGPUProgram(d,[l],"int32",h);return[f,p]}const Swe={kernelName:zx,backendName:"webgpu",kernelFunc:vwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cwe(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return pu(r,i,a,"min",n)}const kwe={kernelName:$p,backendName:"webgpu",kernelFunc:Cwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $we=Un({opType:Me.MIN,cpuKernelImpl:Uye}),Nwe={kernelName:dh,backendName:"webgpu",kernelFunc:$we};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iwe{constructor(e,n,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((r,i)=>r[0]+e[i]+r[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,n.map((r,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,n=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),r=e===1?"start":"start[i]",i=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=hn(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${me("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${n});
          let end = ${o}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${r}) {
              ${a} = ${r} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${i}) {
              ${a} = (${i} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Twe={kernelName:Np,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{paddings:r,mode:i}=e,a=n,o=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Iwe(s.shape,r,i);return a.runWebGPUProgram(l,[s],s.dtype,o)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ewe=Un({opType:Me.MOD}),Rwe={kernelName:fh,backendName:"webgpu",kernelFunc:Ewe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Awe{constructor(e,n){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${me("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dwe{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${me("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:i}=s,a=Ne({inputs:{x:r},backend:n,attrs:{shape:[Y(r.shape)/r.shape[i],r.shape[i]]}}),o=new Dwe(a.shape),l=n.runWebGPUProgram(o,[a],r.dtype),u=Ne({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeData(a.dataId),n.disposeData(l.dataId),u}const _we={kernelName:Gp,backendName:"webgpu",kernelFunc:uP};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Owe(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:uP({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Awe(u,i),d=[{type:"float32",data:[a]},{type:"int32",data:[c]}],f=n.runWebGPUProgram(h,[l],"int32",d);return o||n.disposeData(l.dataId),f}const Fwe={kernelName:Lx,backendName:"webgpu",kernelFunc:Owe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zwe(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const i=n.tensorMap.get(s.dataId),[a,o]=Gye(i.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}const r=new Kh(s.shape,fe.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}const Lwe={kernelName:Ip,backendName:"webgpu",kernelFunc:zwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pwe(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=Ib(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Mwe={kernelName:Px,backendName:"webgpu",kernelFunc:Pwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bwe(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a,f=o,p=l,m=u,{selectedIndices:g,selectedScores:y}=Tb(c,h,d,f,p,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Vwe={kernelName:Mx,backendName:"webgpu",kernelFunc:Bwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uwe{constructor(e,n){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${me("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wwe(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=Y(r.shape),c=new Uwe(u,a),h=Ne({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=[{type:"float32",data:[o]},{type:"float32",data:[l]}],f=n.runWebGPUProgram(c,[h],i,d);n.disposeData(h.dataId);const p=[...r.shape,a],m=Ne({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(f.dataId),m}const Gwe={kernelName:Rp,backendName:"webgpu",kernelFunc:Wwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="complex64"){const r=xm({inputs:{input:s},backend:n}),i=By({inputs:{x:r},backend:n}),a=y0({inputs:{input:s},backend:n}),o=By({inputs:{x:a},backend:n}),l=fu({inputs:{real:i,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),l}else return Ts({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Hwe={kernelName:qp,backendName:"webgpu",kernelFunc:By};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(t){const{inputs:e,backend:n}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=xm({inputs:{input:s},backend:n}),i=cP({inputs:{x:r},backend:n}),a=y0({inputs:{input:s},backend:n}),o=By({inputs:{x:a},backend:n}),l=fu({inputs:{real:i,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),l}else return Ts({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const jwe={kernelName:Ep,backendName:"webgpu",kernelFunc:cP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qwe(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(e.length===1)return Vv({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(c=>{_s(i,c.shape,"All tensors passed to stack must have matching shapes"),R(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=Vv({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),u=JL({inputs:l,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),u}const Xwe={kernelName:Ap,backendName:"webgpu",kernelFunc:qwe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(t,e=!1){const n=t.length,s=hn(n),r=t.map((h,d)=>`uniforms.pad${d}[0]`).join(","),i=t.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${n>1?`[${d}]`:""}`).join(","),a=n>1?`${s}(${r})`:`${r}`,o=n>1?`${s}(${i})`:`${i}`,l=n>1?"any(paddedCoords < start)":"paddedCoords < start",u=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return`
        let start = ${a};
        let end = ${o};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}class Kwe{constructor(e,n){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),n.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${hP(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ywe=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;if(i.every(u=>Ke(u,[0,0])))return Xs({inputs:{x:r},backend:n});if(Y(r.shape)===0){const u=i.map((c,h)=>c[0]+r.shape[h]+c[1]);return Ts({backend:n,attrs:{shape:u,value:a,dtype:r.dtype}})}const o=[{type:"float32",data:[a]}];i.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));const l=new Kwe(r.shape,i);return n.runWebGPUProgram(l,[r],r.dtype,o)},Qwe={kernelName:Dp,backendName:"webgpu",kernelFunc:Ywe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zwe=Un({opType:Me.POW}),Jwe={kernelName:mh,backendName:"webgpu",kernelFunc:Zwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eve(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,i=new Py(Me.PRELU,s.shape,r.shape);return n.runWebGPUProgram(i,[s,r],"float32")}const tve={kernelName:_p,backendName:"webgpu",kernelFunc:eve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nve(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:i,keepDims:a}=s;return pu(r,i,a,"prod",n)}const sve={kernelName:Op,backendName:"webgpu",kernelFunc:nve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rve=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:i,dtype:a}=n,o=qye(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},ive={kernelName:Bx,backendName:"webgpu",kernelFunc:rve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ave=Un({opType:Me.DIV}),ove={kernelName:Qc,backendName:"webgpu",kernelFunc:ave};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lve=ft({opType:fe.RECIPROCAL}),uve={kernelName:gh,backendName:"webgpu",kernelFunc:lve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cve=ft({opType:fe.RELU}),hve={kernelName:yh,backendName:"webgpu",kernelFunc:cve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dve=ft({opType:fe.RELU6}),fve={kernelName:xh,backendName:"webgpu",kernelFunc:dve};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pve{constructor(e,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mve(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,size:a,halfPixelCenters:o}=s,[l,u]=a,c=i&&l>1?1:0,h=i&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],p=new pve(r.shape,l,u);return n.runWebGPUProgram(p,[r],"float32",f)}const gve={kernelName:Lp,backendName:"webgpu",kernelFunc:mve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yve{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeBilinearBackprop_${n}`}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xve(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,[,o,l]=r.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],f=h[0]/d[0],p=h[1]/d[1],m=1/f,g=1/p,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,w=new yve(r.shape,a),v=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[f]},{type:"float32",data:[p]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return n.runWebGPUProgram(w,[i],i.dtype,v)}const bve={kernelName:Wx,backendName:"webgpu",kernelFunc:xve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wve{constructor(e,n,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,s,e[3]],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vve(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=i&&l>1?1:0,h=i&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[i?.5:0]}],p=new wve(r.shape,l,u,a);return n.runWebGPUProgram(p,[r],r.dtype,f)}const Sve={kernelName:zp,backendName:"webgpu",kernelFunc:vve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cve{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeNearestNeigborBackprop_${n}`}getUserCode(){return`
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kve(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:i}=e,{alignCorners:a}=s,[,o,l]=r.shape,[,u,c]=i.shape,h=[a&&u>1?o-1:o,a&&c>1?l-1:l],d=[a&&u>1?u-1:u,a&&c>1?c-1:c],f=h[0]/d[0],p=h[1]/d[1],m=1/f,g=1/p,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,w=new Cve(r.shape,a),v=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return n.runWebGPUProgram(w,[i],i.dtype,v)}const $ve={kernelName:Ux,backendName:"webgpu",kernelFunc:kve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nve{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ive(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:i}=s,a=r.shape.length;if(a===0)return Xs({inputs:{x:r},backend:n});const o=r.shape,l=[1,1,1,1];o.forEach((g,y)=>{const x=y+4-a;l[x]=g});const u=qe(i,r.shape),c=[0,0,0,0];u.forEach(g=>{const y=g+4-a;c[y]=1});const h=[{type:"int32",data:c}],d=Ne({inputs:{x:r},backend:n,attrs:{shape:l}}),f=new Nve(l),p=n.runWebGPUProgram(f,[d],d.dtype,h);n.disposeData(d.dataId);const m=Ne({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),m}const Tve={kernelName:Pp,backendName:"webgpu",kernelFunc:Ive};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eve{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof n=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${me("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rve={kernelName:nb,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new Eve(s.shape,i),[u,c]=Fb(a,s.shape[1],s.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof i=="number"?h.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):h.push({type:"float32",data:i}),o.runWebGPUProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ave=ft({opType:fe.ROUND}),Dve={kernelName:bh,backendName:"webgpu",kernelFunc:Ave};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ve=ft({opType:fe.RSQRT,cpuKernelImpl:Xye}),Ove={kernelName:wh,backendName:"webgpu",kernelFunc:_ve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qd{constructor(e,n,s,r,i,a,o,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=l,this.dispatchLayout=Se(e),this.dispatch=ge(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=n>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${o}_${l}_${i.length}`;const u=hn(i.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const n=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",i="";this.dispatchLayout.x.length===1?(r="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${i}
      ${me("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${n}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${rl(this.type)}(${o});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?Vo("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fve(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ta(i,r,a),d=[h/u,u];if(h===0)return n.makeTensorInfo(a,r.dtype);const f=Ne({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=Ne({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=p.dtype,g=Ts({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=Y(p.shape),x=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[y]}],w=new Qd(p.shape,o,f.shape.length,p.shape.length,c,d,m),v=n.runWebGPUProgram(w,[p,f],m,x,g),S=Ne({inputs:{x:v},backend:n,attrs:{shape:a}});return n.disposeData(f.dataId),n.disposeData(p.dataId),n.disposeData(v.dataId),S}const zve={kernelName:Gx,backendName:"webgpu",kernelFunc:Fve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lve{constructor(e,n){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=n,this.shaderKey=`search_sorted_${n}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${me("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pve(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:i}=e,{side:a}=s,o=new Lve([i.shape[0],i.shape[1]],a),l=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(o,[r,i],"int32",l)}const Mve={kernelName:jx,backendName:"webgpu",kernelFunc:Pve};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bve{constructor(e,n,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,n;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)n="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${r[o]}`),o<this.cRank&&i.push(`${r[o]}`);e=i.join(),n=a.join()}return`
      ${me("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vve(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:i}=e,a=new Bve(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(a,[s,r,i],Vn(r.dtype,i.dtype))}const Uve={kernelName:Mp,backendName:"webgpu",kernelFunc:Vve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wve=ft({opType:fe.SELU}),Gve={kernelName:vh,backendName:"webgpu",kernelFunc:Wve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hve=ft({opType:fe.SIGMOID}),jve={kernelName:$h,backendName:"webgpu",kernelFunc:Hve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qve=ft({opType:fe.SIGN}),Xve={kernelName:kh,backendName:"webgpu",kernelFunc:qve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kve=ft({opType:fe.SIN}),Yve={kernelName:Sh,backendName:"webgpu",kernelFunc:Kve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qve=ft({opType:fe.SINH}),Zve={kernelName:Ch,backendName:"webgpu",kernelFunc:Qve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jve=ft({opType:fe.SOFTPLUS}),e2e={kernelName:Nh,backendName:"webgpu",kernelFunc:Jve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t2e{constructor(e,n,s,r,i,a){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const o=new Array(r.length);for(let l=0;l<o.length;l++)o[l]=r[i[l]];this.outputShape=o,this.newDim=i,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=n,this.uniforms+=`reshapedPaddedXShape : ${hn(r.length)}, paddedXShapeStrides : ${hn(a)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){const e=hn(this.outputShape.length),n=jL(this.newDim);return`
      ${Eg(this.paddedXShape,"PaddedX")}
      ${me("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${n}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${hP(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n2e=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;R(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce((x,w)=>x*w),l=[[0,0]];l.push(...a);for(let x=1+i.length;x<r.shape.length;++x)l.push([0,0]);const u=l.map((x,w)=>x[0]+r.shape[w]+x[1]),c=su(u,i,o,!1),h=ru(c.length,i.length,!1),d=iu(u,i,o,!1),f=Re(u),p=new t2e(r.shape,u,l,c,h,f.length),m=[{type:"int32",data:c},{type:"int32",data:f}];l.map(x=>m.push({type:"int32",data:[x[0],x[1]]}));const g=n.runWebGPUProgram(p,[r],r.dtype,m),y=Ne({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeData(g.dataId),y},s2e={kernelName:Up,backendName:"webgpu",kernelFunc:n2e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r2e{constructor(e,n,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=Se([n]),this.dispatch=ge(this.dispatchLayout,[n],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Vo("&result[outIndex]","value",this.type)}
      }
    }
  `}}class i2e{constructor(e,n){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Se(n),this.dispatch=ge(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Vo("&result[segmentId]","1","int32")}
      }
    }
  `}}class a2e{constructor(e,n){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=n,this.dispatchLayout=Se(e),this.dispatch=ge(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(t,e,n,s=!1,r){const a=Y(t.shape)/t.shape[0],o=t.dtype,l=Y(e.shape),u=r.readSync(n.dataId),h=l>0?u[l-1]+1:0;let d;const f=t.shape.slice();f[0]=h;const p=l*a,m=Ts({backend:r,attrs:{shape:f,value:0,dtype:o}});d=new r2e(f,p,o);let g=[{type:"int32",data:[a]},{type:"int32",data:[p]}];const y=r.runWebGPUProgram(d,[t,e,n],o,g,m);if(s)return y;const x=Ts({backend:r,attrs:{shape:[h],value:0,dtype:"int32"}});d=new i2e(h,n.shape);const w=r.runWebGPUProgram(d,[n],"int32",null,x),v=Ts({backend:r,attrs:{shape:f,value:0,dtype:o}});d=new a2e(f,o),g=[{type:"int32",data:[a]}];const S=r.runWebGPUProgram(d,[y,w],o,g,v);return r.disposeData(y.dataId),r.disposeData(w.dataId),S}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2e(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;return dP(s,r,i,!1,n)}const l2e={kernelName:qx,backendName:"webgpu",kernelFunc:o2e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2e(t){const{inputs:e,backend:n}=t,{data:s,indices:r,segmentIds:i}=e;return dP(s,r,i,!0,n)}const c2e={kernelName:Xx,backendName:"webgpu",kernelFunc:u2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h2e{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*n[r];this.outputShape=s,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=d2e(this.rank,"uniforms.");return`
      ${me("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function d2e(t,e=""){if(t>=5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`(resRC % ${e}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<t;r++)s.push(`(${n[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:i}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>ci(d)):l,c=Ge(r.shape,r.dtype,u),h=txe(c,i);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new h2e(r.shape,i);return n.runWebGPUProgram(a,[r],r.dtype)}const f2e={kernelName:Dh,backendName:"webgpu",kernelFunc:ZC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2e(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ta(i,r,o),f=!1;if(i.dtype==="string"){const T=n.bufferSync(r),A=n.bufferSync(i),D=ci(n.readSync(a.dataId)[0]),O=Kye(T,A,o,d,c,u,l,h,D,f);return n.makeTensorInfo(o,O.dtype,O.values)}const p=[d/c,c],m=Ne({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),g=i.shape.length?Ne({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}):Xs({inputs:{x:i},backend:n}),y=g.dtype,x=n.makeTensorInfo([],y,Kn(1,y)),w=Ne({inputs:{x:a},backend:n,attrs:{shape:Array(p.length).fill(1)}}),v=ZC({inputs:{x:w},backend:n,attrs:{reps:p}}),S=Y([u,c]),N=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[S]}];switch(u){case 0:break;case 1:{const T=new Qd([u,c],l,m.shape.length,g.shape.length,h,p,y,f);n.runWebGPUProgram(T,[g,m],y,N,v)}break;default:{const T=new Qd([u,c],l,m.shape.length,x.shape.length,h,p,y,f);n.runWebGPUProgram(T,[x,m],y,N,v)}{const T=new Qd([u,c],l,m.shape.length,g.shape.length,h,p,y);n.runWebGPUProgram(T,[g,m],y,N,v)}}const I=Ne({inputs:{x:v},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(w.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),I}const m2e={kernelName:Kx,backendName:"webgpu",kernelFunc:p2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=qe(a,r.shape)[0],l=Kb(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const f=[...h];f[o]=d;const p=Yh({inputs:{x:r},backend:n,attrs:{begin:c,size:f}});return c[o]+=d,p})}const y2e={kernelName:Wp,backendName:"webgpu",kernelFunc:g2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x2e=ft({opType:fe.SQRT}),b2e={kernelName:Ih,backendName:"webgpu",kernelFunc:x2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w2e={kernelName:Yx,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e,r=new Kh(n.shape,fe.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v2e=Un({opType:Me.SQUARED_DIFFERENCE}),S2e={kernelName:Th,backendName:"webgpu",kernelFunc:v2e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2e({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=new Kh(s.shape,fe.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[e.alpha]}];return n.runWebGPUProgram(r,[s],s.dtype,i)}const k2e={kernelName:_h,backendName:"webgpu",kernelFunc:C2e};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $2e{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const n=hn(this.outputShape.length);this.uniforms=`begin : ${n},  strides : ${n}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let n="";if(e===1)n="coords * uniforms.strides + uniforms.begin";else{let r=0;n=this.outputShape.map((i,a)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${r-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${me("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${n}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:v}=Db(r.shape,i,a,o,l,u,c,h,d);let S;if(m)S=Ne({inputs:{x:r},backend:n,attrs:{shape:p}});else if(g||y){R(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=Ab(x,w,v),I=Yh({inputs:{x:r},backend:n,attrs:{begin:x,size:N}});S=Ne({inputs:{x:I},backend:n,attrs:{shape:p}}),n.disposeData(I.dataId)}else if(n.shouldExecuteOnCPU([r])){const I=n.readSync(r.dataId),T=Ge(r.shape,r.dtype,I),A=Zye(f,T,v,x);S=n.makeTensorInfo(p,r.dtype,A.values)}else{const I=new $2e(f),T=[{type:"int32",data:x},{type:"int32",data:v}],A=n.runWebGPUProgram(I,[r],r.dtype,T);S=Ne({inputs:{x:A},backend:n,attrs:{shape:p}}),n.disposeData(A.dataId)}return S}const I2e={kernelName:Zx,backendName:"webgpu",kernelFunc:N2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2e(t){const{inputs:e,backend:n,attrs:s}=t,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),f=n.readSync(h.dataId),[p,m]=Jye(d,f,r,i,a,o,l,u);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}const E2e={kernelName:Jx,backendName:"webgpu",kernelFunc:T2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R2e=Un({opType:Me.SUB,cpuKernelImpl:exe,supportsComplex:!0}),A2e={kernelName:Eh,backendName:"webgpu",kernelFunc:R2e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D2e=ft({opType:fe.TAN}),_2e={kernelName:Rh,backendName:"webgpu",kernelFunc:D2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2e=ft({opType:fe.TANH}),F2e={kernelName:Ah,backendName:"webgpu",kernelFunc:O2e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2e(t){const{inputs:e,backend:n,attrs:s}=t,{tensor:r,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ta(a,i,r.shape),d=[h/u,u];if(h===0)return n.makeTensorInfo(r.shape,i.dtype);const f=[],p=Ne({inputs:{x:i},backend:n,attrs:{shape:[l,o]}});f.push(p);const m=Ne({inputs:{x:a},backend:n,attrs:{shape:[l,u]}});f.push(m);const g=Ne({inputs:{x:r},backend:n,attrs:{shape:d}});f.push(g);const y=ZC({inputs:{x:g},backend:n,attrs:{reps:Array(d.length).fill(1)}}),x=new Qd([l,u],o,p.shape.length,m.shape.length,c,d,r.dtype,!1),w=Y([l,u]),v=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[w]}],S=n.runWebGPUProgram(x,[m,p],g.dtype,v,y);f.push(S);const N=Ne({inputs:{x:S},backend:n,attrs:{shape:r.shape}});return f.forEach(I=>n.disposeData(I.dataId)),N}const L2e={kernelName:Hx,backendName:"webgpu",kernelFunc:z2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P2e{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${me("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class M2e{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${me("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(t,e){e!==null&&t.disposeData(e.dataId)}function cT(t){let e=1;for(;e<t;)e*=2;return e}function B2e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:i,sorted:a}=s,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){const S=n.readSync(r.dataId),[N,I]=nxe(S,o,r.dtype,i,a);return[n.makeTensorInfo(N.shape,N.dtype,N.values),n.makeTensorInfo(I.shape,I.dtype,I.values)]}if(i===0)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(l===1)return[r,Ts({attrs:{shape:o,dtype:"int32",value:0},backend:n})];const c=Y(o)/l,h=Ne({inputs:{x:r},attrs:{shape:[c,l]},backend:n}),d=cT(i),f=cT(l);let p=null;const m=()=>p===null?[h,h]:[h,p],g=(S,N,I)=>{const T=m(),A=new P2e(I),O=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[S]},{type:"int32",data:[N]}],U=p;p=n.runWebGPUProgram(A,T,"int32",O),ku(n,U)};for(let S=1;S<d;S*=2){const N=S*2;for(let I=S;I>=1;I/=2)g(N,I,[c,f])}for(let S=f;S>d;S/=2){const N=m(),I=new M2e([c,S/2]),A=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"int32",data:[d]}],D=p;p=n.runWebGPUProgram(I,N,"int32",A),ku(n,D);const O=d/2,U=O*2;for(let B=O;B>=1;B/=2)g(U,B,p.shape)}let y=p;p=Yh({inputs:{x:p},backend:n,attrs:{begin:0,size:[c,i]}}),ku(n,y);let x=oP({inputs:{x:h,indices:p},backend:n,attrs:{axis:1,batchDims:1}});ku(n,h);const w=o.slice(0,-1);w.push(i),y=p,p=Ne({inputs:{x:p},attrs:{shape:w},backend:n}),ku(n,y);const v=x;return x=Ne({inputs:{x},attrs:{shape:w},backend:n}),ku(n,v),[x,p]}const V2e={kernelName:eb,backendName:"webgpu",kernelFunc:B2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U2e{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${me("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2e(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,f]=r.shape,[p,m]=u??[h,d],g=[c,p,m,f],y=new U2e(g),x=a==="nearest"?1:2;let w;switch(o){case"constant":w=1;break;case"reflect":w=2;break;case"wrap":w=3;break;case"nearest":w=4;break;default:w=1;break}const v=[{type:"int32",data:[x]},{type:"int32",data:[w]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,i],"float32",v)}const G2e={kernelName:tb,backendName:"webgpu",kernelFunc:W2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2e(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==i&&(u[c++]=a.shape[m]);const h=[],d=new Array(o).fill(0),f=a.shape.slice();f[i]=1;const p=new Array(l);for(let m=0;m<p.length;m++){d[i]=m;const g=Yh({inputs:{x:a},backend:n,attrs:{begin:d,size:f}}),y=Ne({inputs:{x:g},backend:n,attrs:{shape:u}});p[m]=y,h.push(g)}return h.forEach(m=>n.disposeData(m.dataId)),p}const j2e={kernelName:Hp,backendName:"webgpu",kernelFunc:H2e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q2e{constructor(e,n,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=n,this.dispatchLayout=Se(e),this.dispatch=ge(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${me("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Vo("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2e(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=It([u],o);let h=r;c!=null&&(h=Ki({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Pt(1,o)[0]);const d=oC(h.shape,u,a),f=Y([h.shape[u]]),p=Ne({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(p);const m=r.dtype,g=[p.shape[0],a],y=Ts({backend:n,attrs:{shape:g,value:0,dtype:m}}),x=new q2e(p.shape,g,m),w=[{type:"int32",data:[a]},{type:"int32",data:[Y(p.shape)]}],v=n.runWebGPUProgram(x,[p,i],m,w,y),S=Ne({inputs:{x:v},backend:n,attrs:{shape:d}});l.push(v);let N=S;if(c!=null){l.push(S);const I=Ji(c);N=Ki({inputs:{x:N},backend:n,attrs:{perm:I}})}return l.forEach(I=>n.disposeData(I.dataId)),N}const K2e={kernelName:jp,backendName:"webgpu",kernelFunc:X2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y2e=[vye,ixe,oxe,uxe,hxe,pxe,vxe,Cxe,$xe,Ixe,Exe,Axe,_xe,Fxe,Lxe,Uxe,Gxe,Xxe,Yxe,Zxe,sbe,obe,cbe,pbe,gbe,wbe,Cye,Cbe,Ibe,Fbe,Vbe,Hbe,Xbe,Ybe,Zbe,e0e,n0e,i0e,o0e,u0e,h0e,p0e,v0e,C0e,y0e,N0e,E0e,_0e,F0e,P0e,U0e,G0e,j0e,X0e,Y0e,Z0e,J0e,t1e,s1e,xye,i1e,h1e,o1e,u1e,p1e,g1e,x1e,v1e,k1e,N1e,T1e,Sye,R1e,$be,D1e,O1e,z1e,P1e,B1e,U1e,H1e,K1e,q1e,Q1e,J1e,twe,iwe,lwe,Mxe,cwe,dwe,wwe,pwe,xwe,Swe,Bxe,kwe,Nwe,Twe,Rwe,Fwe,M0e,Lwe,Mwe,Vwe,hbe,Gwe,jwe,Xwe,Qwe,Jwe,tve,sve,ive,dbe,ove,uve,hve,fve,bye,gve,bve,Sve,$ve,Tve,Rve,Dve,Ove,zve,Mve,Uve,Gve,jve,Xve,Yve,Zve,tbe,k2e,I2e,E2e,_we,e2e,s2e,l2e,c2e,m2e,y2e,b2e,w2e,S2e,A2e,B0e,_2e,F2e,L2e,f2e,V2e,G2e,yxe,j2e,K2e,Hwe];for(const t of Y2e)aS(t);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var fP=function(t,e){return(fP=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,s){n.__proto__=s}||function(n,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(n[r]=s[r])})(t,e)};function pP(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}fP(t,e),t.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}var Dt=function(){return(Dt=Object.assign||function(t){for(var e,n=1,s=arguments.length;n<s;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function ot(t,e,n,s){return new(n||(n=Promise))(function(r,i){function a(u){try{l(s.next(u))}catch(c){i(c)}}function o(u){try{l(s.throw(u))}catch(c){i(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof n?c:new n(function(h){h(c)})).then(a,o)}l((s=s.apply(t,[])).next())})}function lt(t,e){var n,s,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function o(l){return function(u){return function(c){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,s=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(r=a.trys,!((r=r.length>0&&r[r.length-1])||c[0]!==6&&c[0]!==2)){a=0;continue}if(c[0]===3&&(!r||c[1]>r[0]&&c[1]<r[3])){a.label=c[1];break}if(c[0]===6&&a.label<r[1]){a.label=r[1],r=c;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(c);break}r[2]&&a.ops.pop(),a.trys.pop();continue}c=e.call(t,a)}catch(h){c=[6,h],s=0}finally{n=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function cl(t,e,n){if(n||arguments.length===2)for(var s,r=0,i=e.length;r<i;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return t.concat(s||Array.prototype.slice.call(e))}var Yi=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Of=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function Vy(t){return t instanceof SVGAnimatedLength?t.baseVal.value:t}function mP(t){return ot(this,void 0,void 0,function(){var e,n;return lt(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),t instanceof vt?[4,nC(t,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=Vy(t.width),e.height=Vy(t.height),n=e.getContext("2d"),t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0),s.label=3;case 3:return[2,e]}})})}function gP(t){return ot(this,void 0,void 0,function(){var e,n,s,r,i,a;return lt(this,function(o){switch(o.label){case 0:return t instanceof vt?(e=t.shape.slice(0,2),n=e[0],s=e[1],r=ImageData.bind,[4,nC(t)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,o.sent(),s,n]))];case 2:return i=document.createElement("canvas"),a=i.getContext("2d"),i.width=Vy(t.width),i.height=Vy(t.height),a.drawImage(t,0,0),[2,a.getImageData(0,0,i.width,i.height)]}})})}function Q2e(t){return ot(this,void 0,void 0,function(){var e,n;return lt(this,function(s){switch(s.label){case 0:return t instanceof SVGImageElement||t instanceof OffscreenCanvas?[4,mP(t)]:[3,2];case 1:return n=s.sent(),[3,3];case 2:n=t,s.label=3;case 3:return e=n,[2,MD(e,4)]}})})}function yP(t){if(t<0||t>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(t));if(!Number.isInteger(t))throw new Error("Mask value must be an integer but got ".concat(t))}var xd={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},Z2e=function(){function t(e){this.mask=e}return t.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,this.mask]})})},t.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,gP(this.mask)]})})},t.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,Q2e(this.mask)]})})},t.prototype.getUnderlyingType=function(){return"canvasimagesource"},t}();function J2e(t){return yP(t),"person"}var eSe=function(){function t(e){var n,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new bme.Pose({locateFile:function(r,i){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(r)}return"".concat(i,"/").concat(r)}}),e.modelType){case"lite":n=0;break;case"heavy":n=2;break;case"full":default:n=1}this.poseSolution.setOptions({modelComplexity:n,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var i=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(i.segmentation={maskValueToLabel:J2e,mask:new Z2e(r.segmentationMask)}),s.poses=[i]}})}return t.prototype.translateOutput=function(e,n){var s=this,r={keypoints:e.map(function(i,a){return{x:i.x*s.width,y:i.y*s.height,z:i.z,score:i.visibility,name:Of[a]}})};return n!=null&&(r.keypoints3D=n.map(function(i,a){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:Of[a]}})),r},t.prototype.estimatePoses=function(e,n,s){return ot(this,void 0,void 0,function(){var r,i;return lt(this,function(a){switch(a.label){case 0:return n&&n.flipHorizontal&&n.flipHorizontal!==this.selfieMode&&(this.selfieMode=n.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof vt?(i=ImageData.bind,[4,nC(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,a.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return a.sent(),[2,this.poses]}})})},t.prototype.dispose=function(){this.poseSolution.close()},t.prototype.reset=function(){this.poseSolution.reset()},t.prototype.initialize=function(){return this.poseSolution.initialize()},t}();function tSe(t){return ot(this,void 0,void 0,function(){var e,n;return lt(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Dt({},xd);var i=Dt({},r);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=xd.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=xd.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=xd.smoothSegmentation),i.modelType==null&&(i.modelType=xd.modelType),i}(t),[4,(n=new eSe(e)).initialize()];case 1:return s.sent(),[2,n]}})})}function Tc(t){return t instanceof vt?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function xP(t){return t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))}function JC(t){return t instanceof vt?t:MD(t)}function bP(t,e,n){return Uv(n,"inputResolution"),[1/n.width*t[0][0]*e.width,1/n.height*t[0][1]*e.width,t[0][3]*e.width,1/n.width*t[1][0]*e.height,1/n.height*t[1][1]*e.height,t[1][3]*e.height,0,0]}function Uv(t,e){R(t.width!==0,function(){return"".concat(e," width cannot be 0.")}),R(t.height!==0,function(){return"".concat(e," height cannot be 0.")})}function M1(t,e,n){var s=n.rotationVectorStartKeypointIndex,r=n.rotationVectorEndKeypointIndex,i=t.locationData,a=i.relativeKeypoints[s].x*e.width,o=i.relativeKeypoints[s].y*e.height,l=i.relativeKeypoints[r].x*e.width,u=i.relativeKeypoints[r].y*e.height,c=2*Math.sqrt((l-a)*(l-a)+(u-o)*(u-o)),h=function(d,f,p){var m,g=d.locationData,y=p.rotationVectorStartKeypointIndex,x=p.rotationVectorEndKeypointIndex;m=p.rotationVectorTargetAngle?p.rotationVectorTargetAngle:Math.PI*p.rotationVectorTargetAngleDegree/180;var w=g.relativeKeypoints[y].x*f.width,v=g.relativeKeypoints[y].y*f.height,S=g.relativeKeypoints[x].x*f.width,N=g.relativeKeypoints[x].y*f.height;return xP(m-Math.atan2(-(N-v),S-w))}(t,e,n);return{xCenter:a/e.width,yCenter:o/e.height,width:c/e.width,height:c/e.height,rotation:h}}function wP(t){if(t.length!==16)throw new Error("Array length must be 16 but got ".concat(t.length));return[[t[0],t[1],t[2],t[3]],[t[4],t[5],t[6],t[7]],[t[8],t[9],t[10],t[11]],[t[12],t[13],t[14],t[15]]]}function B1(t,e,n,s,r,i,a){return t[e][r]*(t[n][i]*t[s][a]-t[n][a]*t[s][i])}function us(t,e,n){var s=(e+1)%4,r=(e+2)%4,i=(e+3)%4,a=(n+1)%4,o=(n+2)%4,l=(n+3)%4;return B1(t,s,r,i,a,o,l)+B1(t,r,i,s,a,o,l)+B1(t,i,s,r,a,o,l)}function hT(t,e,n){n===void 0&&(n={ignoreRotation:!1});for(var s=[],r=0,i=t;r<i.length;r++){var a=i[r],o=a.x-.5,l=a.y-.5,u=n.ignoreRotation?0:e.rotation,c=Math.cos(u)*o-Math.sin(u)*l,h=Math.sin(u)*o+Math.cos(u)*l;c=c*e.width+e.xCenter,h=h*e.height+e.yCenter;var d=a.z*e.width,f=Dt({},a);f.x=c,f.y=h,f.z=d,s.push(f)}return s}function vP(t,e){var n=function(s,r,i,a){var o=r-s,l=a-i,u=l/o;return{scale:u,offset:i-s*u}}(0,255,e[0],e[1]);return Q(function(){return re(M(t,n.scale),n.offset)})}function Wv(t,e,n){var s,r,i,a,o,l,u,c,h,d,f,p,m,g,y=e.outputTensorSize,x=e.keepAspectRatio,w=e.borderMode,v=e.outputTensorFloatRange,S=Tc(t),N=function(A,D){return D?{xCenter:D.xCenter*A.width,yCenter:D.yCenter*A.height,width:D.width*A.width,height:D.height*A.height,rotation:D.rotation}:{xCenter:.5*A.width,yCenter:.5*A.height,width:A.width,height:A.height,rotation:0}}(S,n),I=function(A,D,O){if(O===void 0&&(O=!1),!O)return{top:0,left:0,right:0,bottom:0};var U=D.height,B=D.width;Uv(D,"targetSize"),Uv(A,"roi");var q,H,L=U/B,Z=A.height/A.width,K=0,ee=0;return L>Z?(q=A.width,H=A.width*L,ee=(1-Z/L)/2):(q=A.height/L,H=A.height,K=(1-L/Z)/2),A.width=q,A.height=H,{top:ee,left:K,right:K,bottom:ee}}(N,y,x),T=(s=N,r=S.width,i=S.height,a=!1,o=s.width,l=s.height,u=a?-1:1,c=Math.cos(s.rotation),h=Math.sin(s.rotation),d=s.xCenter,f=s.yCenter,p=1/r,m=1/i,(g=new Array(16))[0]=o*c*u*p,g[1]=-l*h*p,g[2]=0,g[3]=(-.5*o*c*u+.5*l*h+d)*p,g[4]=o*h*u*m,g[5]=l*c*m,g[6]=0,g[7]=(-.5*l*c-.5*o*h*u+f)*m,g[8]=0,g[9]=0,g[10]=o*p,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,wP(g));return{imageTensor:Q(function(){var A=JC(t),D=Gr(bP(T,S,y),[1,8]),O=w==="zero"?"constant":"nearest",U=gs.transform(xn(pe(A,"float32")),D,"bilinear",O,0,[y.height,y.width]);return v!=null?vP(U,v):U}),padding:I,transformationMatrix:T}}function dT(t,e,n,s){return s===1?.5*(t+e):t+(e-t)*n/(s-1)}function nSe(t){return Q(function(){var e=function(r){return Q(function(){return[Be(r,[0,0,0],[1,-1,1]),Be(r,[0,0,1],[1,-1,-1])]})}(t),n=e[0],s=e[1];return{boxes:gt(s),logits:gt(n)}})}function SP(t){return t!=null&&t.currentTime!=null}function fT(t){for(var e={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,a=0;a<t.length;++a){var o=t[a];n=Math.min(n,o.x),s=Math.max(s,o.x),r=Math.min(r,o.y),i=Math.max(i,o.y),e.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return e.locationData.relativeBoundingBox={xMin:n,yMin:r,xMax:s,yMax:i,width:s-n,height:i-r},e}function sSe(t,e,n,s){return ot(this,void 0,void 0,function(){var r,i,a,o,l;return lt(this,function(u){switch(u.label){case 0:return t.sort(function(c,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,c.score)}),r=Gr(t.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),i=bn(t.map(function(c){return c.score[0]})),[4,gs.nonMaxSuppressionAsync(r,i,e,n)];case 1:return[4,(a=u.sent()).array()];case 2:return o=u.sent(),l=t.filter(function(c,h){return o.indexOf(h)>-1}),ze([r,i,a]),[2,l]}})})}function CP(t,e){return t.map(function(n){var s=Dt(Dt({},n),{x:n.x*e.width,y:n.y*e.height});return n.z!=null&&(s.z=n.z*e.width),s})}function rSe(t,e,n){return ot(this,void 0,void 0,function(){var s,r,i,a,o,l,u,c,h,d,f,p,m,g,y,x,w,v,S,N,I,T,A,D;return lt(this,function(O){switch(O.label){case 0:if(s=gt(e,[0]),r=s.shape,i=r[0],a=r[1],o=r[2],t.length!==o)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(t.length,", heatmap length: ").concat(o));return l=[],[4,s.buffer()];case 1:for(u=O.sent(),c=0;c<t.length;c++)if(h=t[c],d=Dt({},h),l.push(d),f=Math.trunc(d.x*a),p=Math.trunc(d.y*i),!(f<0||f>=a||p<0||f>=i)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,f-m),y=Math.min(a,f+m+1),x=Math.max(0,p-m),w=Math.min(i,p+m+1),v=0,S=0,N=0,I=0,T=x;T<w;++T)for(A=g;A<y;++A)D=u.get(T,A,c),v+=D,I=Math.max(I,D),S+=A*D,N+=T*D;I>=n.minConfidenceToRefine&&v>0&&(d.x=S/a/v,d.y=N/i/v)}return s.dispose(),[2,l]}})})}function pT(t,e){var n=e.left,s=e.top,r=e.left+e.right,i=e.top+e.bottom;return t.map(function(a){return Dt(Dt({},a),{x:(a.x-n)/(1-r),y:(a.y-s)/(1-i),z:a.z/(1-r)})})}function iSe(t,e,n){return xo()==="webgl"?function(s,r,i){var a=i.combineWithPreviousRatio.toFixed(2),o={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(a,`);

      setOutput(outputValue);
    }
`)},l=Dl();return Q(function(){var u=l.compileAndRun(o,[s,r]);return cs().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(t,e,n):Q(function(){var s=ve(e,.5),r=$t(s),i=ve(1,Co(1,M(r,re(5.68842,M(r,re(-.748699,M(r,re(-57.8051,M(r,re(291.309,M(r,-624.717)))))))))));return re(e,M(ve(t,e),M(i,n.combineWithPreviousRatio)))})}function aSe(t,e,n){return ot(this,void 0,void 0,function(){var s,r,i,a,o;return lt(this,function(l){switch(l.label){case 0:return s=t[0],r=t[1],i=function(u,c,h){return Q(function(){var d,f,p,m;h.reverseOutputOrder?(f=gt(Be(u,[0,h.boxCoordOffset+0],[-1,1])),d=gt(Be(u,[0,h.boxCoordOffset+1],[-1,1])),m=gt(Be(u,[0,h.boxCoordOffset+2],[-1,1])),p=gt(Be(u,[0,h.boxCoordOffset+3],[-1,1]))):(d=gt(Be(u,[0,h.boxCoordOffset+0],[-1,1])),f=gt(Be(u,[0,h.boxCoordOffset+1],[-1,1])),p=gt(Be(u,[0,h.boxCoordOffset+2],[-1,1])),m=gt(Be(u,[0,h.boxCoordOffset+3],[-1,1]))),f=re(M(we(f,h.xScale),c.w),c.x),d=re(M(we(d,h.yScale),c.h),c.y),h.applyExponentialOnBoxSize?(p=M(ys(we(p,h.hScale)),c.h),m=M(ys(we(m,h.wScale)),c.w)):(p=M(we(p,h.hScale),c.h),m=M(we(m,h.wScale),c.h));var g=ve(d,we(p,2)),y=ve(f,we(m,2)),x=re(d,we(p,2)),w=re(f,we(m,2)),v=Jt([G(g,[h.numBoxes,1]),G(y,[h.numBoxes,1]),G(x,[h.numBoxes,1]),G(w,[h.numBoxes,1])],1);if(h.numKeypoints)for(var S=0;S<h.numKeypoints;++S){var N=h.keypointCoordOffset+S*h.numValuesPerKeypoint,I=void 0,T=void 0;h.reverseOutputOrder?(I=gt(Be(u,[0,N],[-1,1])),T=gt(Be(u,[0,N+1],[-1,1]))):(T=gt(Be(u,[0,N],[-1,1])),I=gt(Be(u,[0,N+1],[-1,1])));var A=re(M(we(I,h.xScale),c.w),c.x),D=re(M(we(T,h.yScale),c.h),c.y);v=Jt([v,G(A,[h.numBoxes,1]),G(D,[h.numBoxes,1])],1)}return v})}(r,e,n),a=Q(function(){var u=s;return n.sigmoidScore?(n.scoreClippingThresh!=null&&(u=Rs(s,-n.scoreClippingThresh,n.scoreClippingThresh)),u=ur(u)):u}),[4,oSe(i,a,n)];case 1:return o=l.sent(),ze([i,a]),[2,o]}})})}function oSe(t,e,n){return ot(this,void 0,void 0,function(){var s,r,i,a,o,l,u,c,h,d,f,p;return lt(this,function(m){switch(m.label){case 0:return s=[],[4,t.data()];case 1:return r=m.sent(),[4,e.data()];case 2:for(i=m.sent(),a=0;a<n.numBoxes;++a)if(!(n.minScoreThresh!=null&&i[a]<n.minScoreThresh||(o=a*n.numCoords,l=lSe(r[o+0],r[o+1],r[o+2],r[o+3],i[a],n.flipVertically,a),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(n.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<h;d+=n.numValuesPerKeypoint)f=o+n.keypointCoordOffset+d,p={x:r[f+0],y:n.flipVertically?1-r[f+1]:r[f+1]},c.relativeKeypoints.push(p);s.push(l)}return[2,s]}})})}function lSe(t,e,n,s,r,i,a){return{score:[r],ind:a,locationData:{relativeBoundingBox:{xMin:e,yMin:i?1-n:t,xMax:s,yMax:i?1-t:n,width:s-e,height:n-t}}}}function uSe(t,e){return t==="none"?e:function(n){return 1/(1+Math.exp(-n))}(e)}function mT(t,e,n,s){return ot(this,void 0,void 0,function(){var r,i,a,o,l,u,c,h;return lt(this,function(d){switch(d.label){case 0:return n=n||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=t.size,i=r/e.numLandmarks,[4,t.data()];case 1:for(a=d.sent(),o=[],l=0;l<e.numLandmarks;++l)u=l*i,(h={x:0,y:0}).x=n?e.inputImageWidth-a[u]:a[u],i>1&&(h.y=s?e.inputImageHeight-a[u+1]:a[u+1]),i>2&&(h.z=a[u+2]),i>3&&(h.score=uSe(e.visibilityActivation,a[u+3])),o.push(h);for(c=0;c<o.length;++c)(h=o[c]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,o]}})})}function gT(t,e,n){var s=t.width,r=t.height,i=t.rotation;if(n.rotation==null&&n.rotationDegree==null||(i=function(u,c){return c.rotation!=null?u+=c.rotation:c.rotationDegree!=null&&(u+=Math.PI*c.rotationDegree/180),xP(u)}(i,n)),i===0)t.xCenter=t.xCenter+s*n.shiftX,t.yCenter=t.yCenter+r*n.shiftY;else{var a=(e.width*s*n.shiftX*Math.cos(i)-e.height*r*n.shiftY*Math.sin(i))/e.width,o=(e.width*s*n.shiftX*Math.sin(i)+e.height*r*n.shiftY*Math.cos(i))/e.height;t.xCenter=t.xCenter+a,t.yCenter=t.yCenter+o}{var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}return t.width=s*n.scaleX,t.height=r*n.scaleY,t}function cSe(t,e){return t.map(function(n){var s=Dt(Dt({},n),{x:n.x/e.width,y:n.y/e.height});return n.z!=null&&(n.z=n.z/e.width),s})}var eo=function(){function t(e){this.alpha=e,this.initialized=!1}return t.prototype.apply=function(e,n){var s;return this.initialized?s=n==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*n*Math.asinh((e-this.storedValue)/n):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},t.prototype.applyWithAlpha=function(e,n,s){return this.alpha=n,this.apply(e,s)},t.prototype.hasLastRawValue=function(){return this.initialized},t.prototype.lastRawValue=function(){return this.rawValue},t.prototype.reset=function(){this.initialized=!1},t}(),V1=function(){function t(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new eo(this.getAlpha(this.minCutOff)),this.dx=new eo(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return t.prototype.apply=function(e,n,s){if(e==null)return e;var r=Math.trunc(n);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var i=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,a=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),o=this.minCutOff+this.beta*Math.abs(a),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(a):null;return this.x.applyWithAlpha(e,this.getAlpha(o),l)},t.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},t}(),Gv=function(){function t(e){this.config=e}return t.prototype.apply=function(e,n,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return cl([],e,!0);i=1/s}return e.map(function(a,o){var l=Dt(Dt({},a),{x:r.xFilters[o].apply(a.x,n,i),y:r.yFilters[o].apply(a.y,n,i)});return a.z!=null&&(l.z=r.zFilters[o].apply(a.z,n,i)),l})},t.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},t.prototype.initializeFiltersIfEmpty=function(e){var n=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new V1(n.config)}),this.yFilters=e.map(function(s){return new V1(n.config)}),this.zFilters=e.map(function(s){return new V1(n.config)}))},t}(),U1=function(){function t(e){this.config=e,this.window=[],this.lowPassFilter=new eo(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return t.prototype.apply=function(e,n,s){if(e==null)return e;var r,i=Math.trunc(n);if(this.lastTimestamp>=i)return e;if(this.lastTimestamp===-1)r=1;else{for(var a=e*s-this.lastValue*this.lastValueScale,o=i-this.lastTimestamp,l=a,u=o,c=(1+this.window.length)*(1e6/30),h=0,d=this.window;h<d.length;h++){var f=d[h];if(u+f.duration>c)break;l+=f.distance,u+=f.duration}var p=l/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:a,duration:o}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(e,r)},t}(),hSe=function(){function t(e){this.config=e}return t.prototype.apply=function(e,n,s){var r=this;if(e==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return cl([],e,!0);i=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(a,o){var l=Dt(Dt({},a),{x:r.xFilters[o].apply(a.x,n,i),y:r.yFilters[o].apply(a.y,n,i)});return a.z!=null&&(l.z=r.zFilters[o].apply(a.z,n,i)),l})},t.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},t.prototype.initializeFiltersIfEmpty=function(e){var n=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new U1(n.config)}),this.yFilters=e.map(function(s){return new U1(n.config)}),this.zFilters=e.map(function(s){return new U1(n.config)}))},t}(),W1=function(){function t(e){if(e.velocityFilter!=null)this.keypointsFilter=new hSe(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new Gv(e.oneEuroFilter)}}return t.prototype.apply=function(e,n,s,r,i){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var a=i!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(i,s):1,o=r?CP(e,s):e,l=this.keypointsFilter.apply(o,n,a);return r?cSe(l,s):l},t}(),yT=function(){function t(e){this.alpha=e.alpha}return t.prototype.apply=function(e){var n=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(o){return new eo(n.alpha)}));for(var s=[],r=0;r<e.length;++r){var i=e[r],a=Dt({},i);a.score=this.visibilityFilters[r].apply(i.score),s.push(a)}return s},t}(),dSe={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},$u={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},fSe={maxPoses:1,flipHorizontal:!1},pSe={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},mSe=.3,xT={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},gSe={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},ySe={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},xSe={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},bSe={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},wSe={kernelSize:7,minConfidenceToRefine:.5},bT={alpha:.1},vSe={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},SSe={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},CSe={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},kSe={activation:"none"},$Se={combineWithPreviousRatio:.7},NSe=function(){function t(e){this.mask=e}return t.prototype.toCanvasImageSource=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,mP(this.mask)]})})},t.prototype.toImageData=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,gP(this.mask)]})})},t.prototype.toTensor=function(){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,this.mask]})})},t.prototype.getUnderlyingType=function(){return"tensor"},t}();function ISe(t){return yP(t),"person"}var TSe=function(){function t(e,n,s,r,i,a){this.detectorModel=e,this.landmarkModel=n,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=i,this.modelType=a,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(h){h.reduceBoxesInLowestLayer==null&&(h.reduceBoxesInLowestLayer=!1),h.interpolatedScaleAspectRatio==null&&(h.interpolatedScaleAspectRatio=1),h.fixedAnchorSize==null&&(h.fixedAnchorSize=!1);for(var d=[],f=0;f<h.numLayers;){for(var p=[],m=[],g=[],y=[],x=f;x<h.strides.length&&h.strides[x]===h.strides[f];){var w=dT(h.minScale,h.maxScale,x,h.strides.length);if(x===0&&h.reduceBoxesInLowestLayer)g.push(1),g.push(2),g.push(.5),y.push(.1),y.push(w),y.push(w);else{for(var v=0;v<h.aspectRatios.length;++v)g.push(h.aspectRatios[v]),y.push(w);if(h.interpolatedScaleAspectRatio>0){var S=x===h.strides.length-1?1:dT(h.minScale,h.maxScale,x+1,h.strides.length);y.push(Math.sqrt(w*S)),g.push(h.interpolatedScaleAspectRatio)}}x++}for(var N=0;N<g.length;++N){var I=Math.sqrt(g[N]);p.push(y[N]/I),m.push(y[N]*I)}var T=0,A=0;if(h.featureMapHeight.length>0)T=h.featureMapHeight[f],A=h.featureMapWidth[f];else{var D=h.strides[f];T=Math.ceil(h.inputSizeHeight/D),A=Math.ceil(h.inputSizeWidth/D)}for(var O=0;O<T;++O)for(var U=0;U<A;++U)for(var B=0;B<p.length;++B){var q={xCenter:(U+h.anchorOffsetX)/A,yCenter:(O+h.anchorOffsetY)/T,width:0,height:0};h.fixedAnchorSize?(q.width=1,q.height=1):(q.width=m[B],q.height=p[B]),d.push(q)}f=x}return d}(dSe);var o=bn(this.anchors.map(function(h){return h.width})),l=bn(this.anchors.map(function(h){return h.height})),u=bn(this.anchors.map(function(h){return h.xCenter})),c=bn(this.anchors.map(function(h){return h.yCenter}));this.anchorTensor={x:u,y:c,w:o,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?Gr([],[0,0]):null}return t.prototype.estimatePoses=function(e,n,s){return ot(this,void 0,void 0,function(){var r,i,a,o,l,u,c,h,d,f,p,m,g,y,x,w,v,S,N,I,T,A,D;return lt(this,function(O){switch(O.label){case 0:return r=function(U){var B;if((B=U==null?fSe:Dt({},U)).maxPoses==null&&(B.maxPoses=1),B.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(B.maxPoses,". Should be > 0."));if(B.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return B}(n),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:SP(e)?1e6*e.currentTime:null,i=Tc(e),a=Q(function(){return pe(JC(e),"float32")}),(o=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(a)]);case 1:if((l=O.sent()).length===0)return this.reset(),a.dispose(),[2,[]];u=l[0],o=this.poseDetectionToRoi(u,i),O.label=2;case 2:return[4,this.poseLandmarksByRoi(o,a)];case 3:return c=O.sent(),a.dispose(),c==null?(this.reset(),[2,[]]):(h=c.landmarks,d=c.auxiliaryLandmarks,f=c.poseScore,p=c.worldLandmarks,m=c.segmentationMask,g=this.poseLandmarkFiltering(h,d,p,i),y=g.actualLandmarksFiltered,x=g.auxiliaryLandmarksFiltered,w=g.actualWorldLandmarksFiltered,v=this.poseLandmarksToRoi(x,i),this.regionOfInterest=v,S=this.smoothSegmentation&&m!=null?this.poseSegmentationFiltering(m):m,(N=y!=null?CP(y,i):null)!=null&&N.forEach(function(U,B){U.name=Of[B]}),(I=w)!=null&&I.forEach(function(U,B){U.name=Of[B]}),T={score:f,keypoints:N,keypoints3D:I},S!==null&&(A=Q(function(){var U=xn(S,2),B=di(U,[[0,0],[0,0],[0,1]]);return $S(B,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||ze(S),D={maskValueToLabel:ISe,mask:new NSe(A)},T.segmentation=D),[2,[T]])}})})},t.prototype.poseSegmentationFiltering=function(e){var n=this.prevFilteredSegmentationMask;return n.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=iSe(n,e,$Se),ze(e)),ze(n),this.prevFilteredSegmentationMask},t.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),ze([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},t.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(ze(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Gr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},t.prototype.detectPose=function(e){return ot(this,void 0,void 0,function(){var n,s,r,i,a,o,l,u,c,h;return lt(this,function(d){switch(d.label){case 0:return n=Wv(e,gSe),s=n.imageTensor,r=n.padding,i=this.detectorModel.predict(s),a=nSe(i),o=a.boxes,[4,aSe([l=a.logits,o],this.anchorTensor,pSe)];case 1:return(u=d.sent()).length===0?(ze([s,i,l,o]),[2,u]):[4,sSe(u,this.maxPoses,mSe)];case 2:return c=d.sent(),h=function(f,p){f===void 0&&(f=[]);for(var m=p.left,g=p.top,y=p.left+p.right,x=p.top+p.bottom,w=0;w<f.length;w++){var v=f[w],S=v.locationData.relativeBoundingBox,N=(S.xMin-m)/(1-y),I=(S.yMin-g)/(1-x),T=S.width/(1-y),A=S.height/(1-x);S.xMin=N,S.yMin=I,S.width=T,S.height=A,S.xMax=N+T,S.yMax=I+A;var D=v.locationData.relativeKeypoints;D&&D.forEach(function(O){var U=(O.x-m)/(1-y),B=(O.y-g)/(1-x);O.x=U,O.y=B})}return f}(c,r),ze([s,i,l,o]),[2,h]}})})},t.prototype.poseDetectionToRoi=function(e,n){return gT(M1(e,n,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),n,xT)},t.prototype.poseLandmarksByRoi=function(e,n){return ot(this,void 0,void 0,function(){var s,r,i,a,o,l,u,c,h,d,f,p,m,g;return lt(this,function(y){switch(y.label){case 0:if(s=Tc(n),r=Wv(n,ySe,e),i=r.imageTensor,a=r.padding,o=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(ze(u),ze(i),[2,null]):(h=c.landmarks,d=c.auxiliaryLandmarks,f=c.poseScore,p=c.worldLandmarks,m=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,a,o,h,d,p,m)]);case 2:return g=y.sent(),ze(u),ze(i),[2,Dt({poseScore:f},g)]}})})},t.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,n,s,r,i,a,o,l){return ot(this,void 0,void 0,function(){var u,c,h,d,f,p;return lt(this,function(m){return u=pT(i,s),c=pT(a,s),h=hT(u,n),d=hT(c,n),f=function(g,y){for(var x=[],w=0,v=g;w<v.length;w++){var S=v[w],N=S.x,I=S.y,T=y.rotation,A=Math.cos(T)*N-Math.sin(T)*I,D=Math.sin(T)*N+Math.cos(T)*I,O=Dt({},S);O.x=A,O.y=D,x.push(O)}return x}(o,n),p=null,this.enableSegmentation&&(p=Q(function(){var g=l.shape,y=g[0],x=g[1],w=function(N){var I=wP(new Array(16).fill(0));I[0][0]=us(N,0,0),I[1][0]=-us(N,0,1),I[2][0]=us(N,0,2),I[3][0]=-us(N,0,3),I[0][2]=us(N,2,0),I[1][2]=-us(N,2,1),I[2][2]=us(N,2,2),I[3][2]=-us(N,2,3),I[0][1]=-us(N,1,0),I[1][1]=us(N,1,1),I[2][1]=-us(N,1,2),I[3][1]=us(N,1,3),I[0][3]=-us(N,3,0),I[1][3]=us(N,3,1),I[2][3]=-us(N,3,2),I[3][3]=us(N,3,3);for(var T=N[0][0]*I[0][0]+N[1][0]*I[0][1]+N[2][0]*I[0][2]+N[3][0]*I[0][3],A=0;A<I.length;A++)for(var D=0;D<I.length;D++)I[A][D]/=T;return I}(r),v=Gr(bP(w,{width:x,height:y},e),[1,8]),S=[1,y,x,1];return gt(gs.transform(G(l,S),v,"bilinear","constant",0,[e.height,e.width]),[0,3])}),ze(l)),[2,{landmarks:h,auxiliaryLandmarks:d,worldLandmarks:f,segmentationMask:p}]})})},t.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return ot(this,void 0,void 0,function(){var n,s,r,i,a,o,l,u,c,h,d,f,p;return lt(this,function(m){switch(m.label){case 0:return n=e[0],s=e[1],r=e[2],i=e[3],a=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(o=m.sent()[0])<.5?[2,null]:[4,mT(n,xSe)];case 2:return[4,rSe(m.sent(),r,wSe)];case 3:return l=m.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,mT(i,bSe)];case 4:return h=m.sent(),d=h.slice(0,33),f=function(g,y,x){for(var w=[],v=0;v<g.length;v++){var S=Dt({},y[v]);S.score=g[v].score,w.push(S)}return w}(u,d),p=this.enableSegmentation?function(g,y,x){return Q(function(){var w=gt(g,[0]),v=w.shape[2];if(v===1){var S=w;switch(y.activation){case"none":break;case"sigmoid":S=ur(S);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var N=S;return gt(N,[2])}throw new Error("Unsupported number of tensor channels ".concat(v))})}(a,kSe):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:o,worldLandmarks:f,segmentationMask:p}]}})})},t.prototype.poseLandmarksToRoi=function(e,n){return gT(M1(fT(e),n,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),n,xT)},t.prototype.poseLandmarkFiltering=function(e,n,s,r){var i,a,o;if(this.timestamp!=null&&this.enableSmoothing){var l=M1(fT(n),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new yT(bT)),i=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new yT(bT)),a=this.visibilitySmoothingFilterAuxiliary.apply(n),o=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new W1(vSe)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new W1(SSe)),a=this.landmarksSmoothingFilterAuxiliary.apply(a,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new W1(CSe)),o=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else i=e,a=n,o=s;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:a,actualWorldLandmarksFiltered:o}},t}();function ESe(t){return ot(this,void 0,void 0,function(){var e,n,s,r,i,a;return lt(this,function(o){switch(o.label){case 0:return e=function(l){var u=Dt({},l??$u);if(u.enableSmoothing==null&&(u.enableSmoothing=$u.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=$u.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=$u.smoothSegmentation),u.modelType==null&&(u.modelType=$u.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=$u.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(t),n=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([vc(e.detectorModelUrl,{fromTFHub:n}),vc(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=o.sent(),i=r[0],a=r[1],[2,new TSe(i,a,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var Sl,Gi,kP=function(){function t(e){(function(n){if(n.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(n.maxTracks));if(n.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(n.maxAge));if(n.keypointTrackerParams!==void 0){if(n.keypointTrackerParams.keypointConfidenceThreshold<0||n.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(n.keypointTrackerParams.keypointConfidenceThreshold));if(n.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(n.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=n.keypointTrackerParams.keypointFalloff;s<r.length;s++){var i=r[s];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return t.prototype.apply=function(e,n){this.filterOldTracks(n);var s=this.computeSimilarity(e);return this.assignTracks(e,s,n),this.updateTracks(n),e},t.prototype.getTracks=function(){return this.tracks.slice()},t.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},t.prototype.filterOldTracks=function(e){var n=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=n.maxAge})},t.prototype.assignTracks=function(e,n,s){for(var r=Array.from(Array(n[0].length).keys()),i=[],a=0,o=Array.from(Array(e.length).keys());a<o.length;a++){var l=o[a];if(r.length!==0){for(var u=-1,c=-1,h=0,d=r;h<d.length;h++){var f=d[h],p=n[l][f];p>=this.minSimilarity&&p>c&&(u=f,c=p)}if(u>=0){var m=this.tracks[u];m=Object.assign(m,this.createTrack(e[l],s,m.id)),e[l].id=m.id;var g=r.indexOf(u);r.splice(g,1)}else i.push(l)}else i.push(l)}for(var y=0,x=i;y<x.length;y++){l=x[y];var w=this.createTrack(e[l],s);this.tracks.push(w),e[l].id=w.id}},t.prototype.updateTracks=function(e){this.tracks.sort(function(n,s){return s.lastTimestamp-n.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},t.prototype.createTrack=function(e,n,s){var r={id:s||this.nextTrackID(),lastTimestamp:n,keypoints:cl([],e.keypoints,!0).map(function(i){return Dt({},i)})};return e.box!==void 0&&(r.box=Dt({},e.box)),r},t.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},t.prototype.remove=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},t.prototype.reset=function(){this.tracks=[]},t}(),RSe=function(t){function e(n){return t.call(this,n)||this}return pP(e,t),e.prototype.computeSimilarity=function(n){var s=this;return n.length===0||this.tracks.length===0?[[]]:n.map(function(r){return s.tracks.map(function(i){return s.iou(r,i)})})},e.prototype.iou=function(n,s){var r=Math.max(n.box.xMin,s.box.xMin),i=Math.max(n.box.yMin,s.box.yMin),a=Math.min(n.box.xMax,s.box.xMax),o=Math.min(n.box.yMax,s.box.yMax);if(r>=a||i>=o)return 0;var l=(a-r)*(o-i);return l/(n.box.width*n.box.height+s.box.width*s.box.height-l)},e}(kP),ASe=function(t){function e(n){var s=t.call(this,n)||this;return s.keypointThreshold=n.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=n.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=n.keypointTrackerParams.minNumberOfKeypoints,s}return pP(e,t),e.prototype.computeSimilarity=function(n){if(n.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,i=n;r<i.length;r++){for(var a=i[r],o=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];o.push(this.oks(a,c))}s.push(o)}return s},e.prototype.oks=function(n,s){for(var r=this.area(s.keypoints)+1e-6,i=0,a=0,o=0;o<n.keypoints.length;++o){var l=n.keypoints[o],u=s.keypoints[o];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){a+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),h=2*this.keypointFalloff[o];i+=Math.exp(-1*c/(2*r*Math.pow(h,2)))}}return a<this.minNumKeyoints?0:i/a},e.prototype.area=function(n){var s=this,r=n.filter(function(l){return l.score>s.keypointThreshold}),i=Math.min.apply(Math,cl([1],r.map(function(l){return l.x}),!1)),a=Math.max.apply(Math,cl([0],r.map(function(l){return l.x}),!1)),o=Math.min.apply(Math,cl([1],r.map(function(l){return l.y}),!1));return(a-i)*(Math.max.apply(Math,cl([0],r.map(function(l){return l.y}),!1))-o)},e}(kP);function DSe(t){switch(t){case Gi.BlazePose:return Of.reduce(function(e,n,s){return e[n]=s,e},{});case Gi.PoseNet:case Gi.MoveNet:return Yi.reduce(function(e,n,s){return e[n]=s,e},{});default:throw new Error("Model ".concat(t," is not supported."))}}(function(t){t.Keypoint="keypoint",t.BoundingBox="boundingBox"})(Sl||(Sl={})),function(t){t.MoveNet="MoveNet",t.BlazePose="BlazePose",t.PoseNet="PoseNet"}(Gi||(Gi={}));var wT=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],$P={modelType:"SinglePose.Lightning",enableSmoothing:!0},vT={},ST={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},G1={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},CT={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function _Se(t,e,n,s){for(var r={},i=0,a=Yi;i<a.length;i++){var o=a[i];r[o]=[e[n[o]].y*s.height,e[n[o]].x*s.width]}if(function(x,w){return(x[w.left_hip].score>.2||x[w.right_hip].score>.2)&&(x[w.left_shoulder].score>.2||x[w.right_shoulder].score>.2)}(e,n)){var l=(r.left_hip[0]+r.right_hip[0])/2,u=(r.left_hip[1]+r.right_hip[1])/2,c=function(x,w,v,S,N){for(var I=["left_shoulder","right_shoulder","left_hip","right_hip"],T=0,A=0,D=0;D<I.length;D++)(H=Math.abs(S-v[I[D]][0]))>T&&(T=H),(L=Math.abs(N-v[I[D]][1]))>A&&(A=L);for(var O=0,U=0,B=0,q=Object.keys(v);B<q.length;B++){var H,L,Z=q[B];x[w[Z]].score<.2||((H=Math.abs(S-v[Z][0]))>O&&(O=H),(L=Math.abs(N-v[Z][1]))>U&&(U=L))}return[T,A,O,U]}(e,n,r,l,u),h=c[0],d=c[1],f=c[2],p=c[3],m=Math.max(1.9*d,1.9*h,1.2*f,1.2*p),g=[l-(m=Math.min(m,Math.max(u,s.width-u,l,s.height-l))),u-m];if(m>Math.max(s.width,s.height)/2)return Hv(t==null,s);var y=2*m;return{yMin:g[0]/s.height,xMin:g[1]/s.width,yMax:(g[0]+y)/s.height,xMax:(g[1]+y)/s.width,height:(g[0]+y)/s.height-g[0]/s.height,width:(g[1]+y)/s.width-g[1]/s.width}}return Hv(t==null,s)}function Hv(t,e){var n,s,r,i;return t?e.width>e.height?(n=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width):(n=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):e.width>e.height?(n=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):(n=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:i,yMax:r+n,xMax:i+s,height:n,width:s}}function OSe(t){var e,n=t==null?$P:Dt({},t);if(n.modelType==null)n.modelType="SinglePose.Lightning";else if(wT.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(wT));if(n.enableSmoothing==null&&(n.enableSmoothing=!0),n.minPoseScore!=null&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(n.multiPoseMaxDimension!=null&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(n.modelType==="MultiPose.Lightning"&&n.enableTracking==null&&(n.enableTracking=!0),n.modelType==="MultiPose.Lightning"&&n.enableTracking===!0)if(n.trackerType==null&&(n.trackerType=Sl.BoundingBox),n.trackerType===Sl.Keypoint)n.trackerConfig!=null?n.trackerConfig=function(s){var r=kT(G1,s);return r.keypointTrackerParams=Dt({},G1.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(n.trackerConfig):n.trackerConfig=G1;else{if(n.trackerType!==Sl.BoundingBox)throw new Error("Tracker type not supported by MoveNet");n.trackerConfig!=null?n.trackerConfig=(e=n.trackerConfig,kT(CT,e)):n.trackerConfig=CT}return n}function kT(t,e){var n={maxTracks:t.maxTracks,maxAge:t.maxAge,minSimilarity:t.minSimilarity};return e.maxTracks!=null&&(n.maxTracks=e.maxTracks),e.maxAge!=null&&(n.maxAge=e.maxAge),e.minSimilarity!=null&&(n.minSimilarity=e.minSimilarity),n}var FSe=function(){function t(e,n){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=DSe(Gi.MoveNet),n.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):n.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=n.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new Gv(ST),this.cropRegionFilterYMin=new eo(.9),this.cropRegionFilterXMin=new eo(.9),this.cropRegionFilterYMax=new eo(.9),this.cropRegionFilterXMax=new eo(.9)),this.enableSmoothing=n.enableSmoothing,n.minPoseScore?this.minPoseScore=n.minPoseScore:this.minPoseScore=.25,n.multiPoseMaxDimension?this.multiPoseMaxDimension=n.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=n.enableTracking,this.multiPoseModel&&this.enableTracking&&(n.trackerType===Sl.Keypoint?this.tracker=new ASe(n.trackerConfig):n.trackerType===Sl.BoundingBox&&(this.tracker=new RSe(n.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return t.prototype.runSinglePersonPoseModel=function(e){return ot(this,void 0,void 0,function(){var n,s,r,i,a;return lt(this,function(o){switch(o.label){case 0:if((n=this.moveNetModel.execute(e)).shape.length!==4||n.shape[0]!==1||n.shape[1]!==1||n.shape[2]!==17||n.shape[3]!==3)throw n.dispose(),new Error("Unexpected output shape from model: [".concat(n.shape,"]"));return xo()==="webgpu"?[3,1]:(s=n.dataSync(),[3,3]);case 1:return[4,n.data()];case 2:s=o.sent(),o.label=3;case 3:for(n.dispose(),r={keypoints:[],score:0},i=0,a=0;a<17;++a)r.keypoints[a]={y:s[3*a],x:s[3*a+1],score:s[3*a+2]},r.keypoints[a].score>.2&&(++i,r.score+=r.keypoints[a].score);return i>0&&(r.score/=i),[2,r]}})})},t.prototype.runMultiPersonPoseModel=function(e){return ot(this,void 0,void 0,function(){var n,s,r,i,a,o,l,u;return lt(this,function(c){switch(c.label){case 0:if((n=this.moveNetModel.execute(e)).shape.length!==3||n.shape[0]!==1||n.shape[2]!==56)throw n.dispose(),new Error("Unexpected output shape from model: [".concat(n.shape,"]"));return xo()==="webgpu"?[3,1]:(s=n.dataSync(),[3,3]);case 1:return[4,n.data()];case 2:s=c.sent(),c.label=3;case 3:for(n.dispose(),r=[],i=s.length/56,a=0;a<i;++a)for(r[a]={keypoints:[]},o=56*a+51,r[a].box={yMin:s[o],xMin:s[o+1],yMax:s[o+2],xMax:s[o+3],width:s[o+3]-s[o+1],height:s[o+2]-s[o]},l=56*a+55,r[a].score=s[l],r[a].keypoints=[],u=0;u<17;++u)r[a].keypoints[u]={y:s[56*a+3*u],x:s[56*a+3*u+1],score:s[56*a+3*u+2]};return[2,r]}})})},t.prototype.estimatePoses=function(e,n,s){return n===void 0&&(n=vT),ot(this,void 0,void 0,function(){var r,i,a,o,l,u;return lt(this,function(c){switch(c.label){case 0:return n=function(h){return h==null?vT:Dt({},h)}(n),e==null?(this.reset(),[2,[]]):(s==null?SP(e)&&(s=1e6*e.currentTime):s*=1e3,r=JC(e),i=Tc(r),a=xn(r,0),e instanceof vt||r.dispose(),o=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(a,i,s)]);case 1:return o=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(a,i,s)];case 3:o=c.sent(),c.label=4;case 4:for(l=0;l<o.length;++l)for(u=0;u<o[l].keypoints.length;++u)o[l].keypoints[u].name=Yi[u],o[l].keypoints[u].y*=i.height,o[l].keypoints[u].x*=i.width;return[2,o]}})})},t.prototype.estimateSinglePose=function(e,n,s){return ot(this,void 0,void 0,function(){var r,i,a,o,l=this;return lt(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Hv(this.cropRegion==null,n)),r=Q(function(){var c=Gr([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),h=cn([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return pe(gs.cropAndResize(e,c,h,d,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(i=u.sent(),r.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(a=0;a<i.keypoints.length;++a)i.keypoints[a].y=this.cropRegion.yMin+i.keypoints[a].y*this.cropRegion.height,i.keypoints[a].x=this.cropRegion.xMin+i.keypoints[a].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,s,1)),o=_Se(this.cropRegion,i.keypoints,this.keypointIndexByName,n),this.cropRegion=this.filterCropRegion(o),[2,[i]]}})})},t.prototype.estimateMultiplePoses=function(e,n,s){return ot(this,void 0,void 0,function(){var r,i,a,o,l,u,c,h,d,f,p,m=this;return lt(this,function(g){switch(g.label){case 0:return n.width>n.height?(i=this.multiPoseMaxDimension,a=Math.round(this.multiPoseMaxDimension*n.height/n.width),r=gs.resizeBilinear(e,[a,i]),l=i,u=32*Math.ceil(a/32),o=di(r,[[0,0],[0,u-a],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*n.width/n.height),a=this.multiPoseMaxDimension,r=gs.resizeBilinear(e,[a,i]),l=32*Math.ceil(i/32),u=a,o=di(r,[[0,0],[0,0],[0,l-i],[0,0]])),r.dispose(),e.dispose(),c=pe(o,"int32"),o.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(h=g.sent(),c.dispose(),h=h.filter(function(y){return y.score>=m.minPoseScore}),f=0;f<h.length;++f)for(d=0;d<h[f].keypoints.length;++d)h[f].keypoints[d].y*=u/a,h[f].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(h,s),this.enableSmoothing)){for(f=0;f<h.length;++f)this.keypointFilterMap.has(h[f].id)||this.keypointFilterMap.set(h[f].id,new Gv(ST)),h[f].keypoints=this.keypointFilterMap.get(h[f].id).apply(h[f].keypoints,s,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,x){p.has(x)||m.keypointFilterMap.delete(x)})}return[2,h]}})})},t.prototype.filterCropRegion=function(e){if(e){var n=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),i=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:n,xMin:s,yMax:r,xMax:i,height:r-n,width:i-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},t.prototype.dispose=function(){this.moveNetModel.dispose()},t.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},t.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},t}();function zSe(t){return t===void 0&&(t=$P),ot(this,void 0,void 0,function(){var e,n,s,r;return lt(this,function(i){switch(i.label){case 0:return e=OSe(t),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,vc(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return n=i.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,vc(r,{fromTFHub:s})];case 3:n=i.sent(),i.label=4;case 4:return xo()==="webgl"&&J().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new FSe(n,e)]}})})}var $T={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},NT=["MobileNetV1","ResNet50"],IT={MobileNetV1:[8,16],ResNet50:[16]},LSe=[8,16,32],TT={MobileNetV1:[.5,.75,1],ResNet50:[1]},ET=[1,2,4],RT={maxPoses:1,flipHorizontal:!1},PSe={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},MSe=[-123.15,-115.9,-103.06];function H1(t){return Math.floor(t/2)}var BSe=function(){function t(e,n){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=n}return t.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},t.prototype.empty=function(){return this.numberOfElements===-1},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(e){for(;e>0&&this.less(H1(e),e);)this.exchange(e,H1(e)),e=H1(e)},t.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var n=2*e;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(e,n))break;this.exchange(e,n),e=n}},t.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},t.prototype.less=function(e,n){return this.getValueAt(e)<this.getValueAt(n)},t.prototype.exchange=function(e,n){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[n],this.priorityQueue[n]=s},t}();function VSe(t,e,n,s,r,i){for(var a=i.shape,o=a[0],l=a[1],u=!0,c=Math.max(n-r,0),h=Math.min(n+r+1,o),d=c;d<h;++d){for(var f=Math.max(s-r,0),p=Math.min(s+r+1,l),m=f;m<p;++m)if(i.get(d,m,t)>e){u=!1;break}if(!u)break}return u}function USe(t){return ot(this,void 0,void 0,function(){return lt(this,function(e){return[2,Promise.all(t.map(function(n){return n.buffer()}))]})})}function NP(t,e,n,s){return{y:s.get(t,e,n),x:s.get(t,e,n+17)}}function IP(t,e,n){var s=NP(t.heatmapY,t.heatmapX,t.id,n),r=s.y,i=s.x;return{x:t.heatmapX*e+i,y:t.heatmapY*e+r}}function TP(t,e,n,s){var r=n.x,i=n.y;return t.some(function(a){var o,l,u,c,h,d,f=a.keypoints;return o=i,l=r,u=f[s].y,c=f[s].x,(h=u-o)*h+(d=c-l)*d<=e})}var AT=Yi.reduce(function(t,e,n){return t[e]=n,t},{}),EP=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(t){var e=t[0],n=t[1];return[AT[e],AT[n]]}),j1=EP.map(function(t){return t[1]}),DT=EP.map(function(t){return t[0]});function _T(t,e,n){return t<e?e:t>n?n:t}function q1(t,e,n,s){return{y:_T(Math.round(t.y/e),0,n-1),x:_T(Math.round(t.x/e),0,s-1)}}function OT(t,e){return{x:t.x+e.x,y:t.y+e.y}}function FT(t,e,n,s,r,i,a,o){o===void 0&&(o=2);for(var l=s.shape,u=l[0],c=l[1],h={y:e.y,x:e.x},d=OT(h,function(x,w,v){var S=v.shape[2]/2;return{y:v.get(w.y,w.x,x),x:v.get(w.y,w.x,S+x)}}(t,q1(h,i,u,c),a)),f=0;f<o;f++){var p=q1(d,i,u,c),m=NP(p.y,p.x,n,r);d=OT({x:p.x*i,y:p.y*i},{x:m.x,y:m.y})}var g=q1(d,i,u,c),y=s.get(g.y,g.x,n);return{y:d.y,x:d.x,name:Yi[n],score:y}}function WSe(t,e,n,s,r,i){var a=e.shape[2],o=j1.length,l=new Array(a),u=t.part,c=t.score,h=IP(u,s,n);l[u.id]={score:c,name:Yi[u.id],y:h.y,x:h.x};for(var d=o-1;d>=0;--d){var f=j1[d],p=DT[d];l[f]&&!l[p]&&(l[p]=FT(d,l[f],p,e,n,s,i))}for(d=0;d<o;++d)f=DT[d],p=j1[d],l[f]&&!l[p]&&(l[p]=FT(d,l[f],p,e,n,s,r));return l}function GSe(t,e,n){return n.reduce(function(s,r,i){var a=r.y,o=r.x,l=r.score;return TP(t,e,{y:a,x:o},i)||(s+=l),s},0)/n.length}function HSe(t,e,n,s,r,i,a,o){return a===void 0&&(a=.5),o===void 0&&(o=20),ot(this,void 0,void 0,function(){var l,u,c,h,d,f,p,m,g,y,x,w;return lt(this,function(v){switch(v.label){case 0:return[4,USe([t,e,n,s])];case 1:for(l=v.sent(),u=l[0],c=l[1],h=l[2],d=l[3],f=[],p=function(S,N,I){for(var T=I.shape,A=T[0],D=T[1],O=T[2],U=new BSe(A*D*O,function(Z){return Z.score}),B=0;B<A;++B)for(var q=0;q<D;++q)for(var H=0;H<O;++H){var L=I.get(B,q,H);L<S||VSe(H,L,B,q,N,I)&&U.enqueue({score:L,part:{heatmapY:B,heatmapX:q,id:H}})}return U}(a,1,u),m=o*o;f.length<i&&!p.empty();)g=p.dequeue(),y=IP(g.part,r,c),TP(f,m,y,g.part.id)||(x=WSe(g,u,c,r,h,d),w=GSe(f,m,x),f.push({keypoints:x,score:w}));return[2,f]}})})}function RP(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];switch(e.length){case 0:t="fn main() ";break;case 1:t="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return t}var jSe=function(){function t(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Se(this.outputShape),this.dispatch=ge(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return t.prototype.getUserCode=function(){return`
        `.concat(RP("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},t}();function qSe(t,e){if(Dl()instanceof Xh)return function(n,s){var r=Dl(),i=new jSe(s.shape),a=r.runWebGPUProgram(i,[n,s],"float32");return cs().makeTensorFromTensorInfo(a)}(t,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var XSe=function(){function t(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var n=[e[0],1];this.dispatchLayout=Se(n),this.dispatch=ge(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return t.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(RP("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},t}();function KSe(t,e){if(Dl()instanceof Xh)return function(n,s){var r=Dl(),i=new XSe(n.shape),a=r.runWebGPUProgram(i,[n,s],"float32");return cs().makeTensorFromTensorInfo(a)}(t,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function AP(t){var e=t.shape,n=e[0],s=e[1],r=e[2];return Q(function(){var i,a,o=G(t,[n*s,r]),l=Fl(o,0),u=xn(we(l,Ae(s,"int32")),1),c=xn((i=l,a=s,Q(function(){var h=we(i,Ae(a,"int32"));return ve(i,M(h,Ae(a,"int32")))})),1);return Jt([u,c],1)})}function YSe(t,e,n){return Q(function(){var s=function(r,i){for(var a=[],o=0;o<Yi.length;o++){var l=r.get(o,0).valueOf(),u=r.get(o,1).valueOf(),c=QSe(l,u,o,i),h=c.x,d=c.y;a.push(d),a.push(h)}return Gr(a,[Yi.length,2])}(t,n);return re(pe(M(t.toTensor(),Ae(e,"int32")),"float32"),s)})}function QSe(t,e,n,s){return{y:s.get(t,e,n),x:s.get(t,e,n+Yi.length)}}function ZSe(t,e,n){return ot(this,void 0,void 0,function(){var s,r,i,a,o,l,u,c,h,d;return lt(this,function(f){switch(f.label){case 0:return s=0,r=AP(t),[4,Promise.all([t.buffer(),e.buffer(),r.buffer()])];case 1:return i=f.sent(),a=i[0],o=i[1],l=i[2],[4,(u=YSe(l,n,o)).buffer()];case 2:return c=f.sent(),h=Array.from(function(p,m){for(var g=m.shape[0],y=new Float32Array(g),x=0;x<g;x++){var w=m.get(x,0),v=m.get(x,1);y[x]=p.get(w,v,x)}return y}(a,l)),d=h.map(function(p,m){return s+=p,{y:c.get(m,0),x:c.get(m,1),score:p,name:Yi[m]}}),r.dispose(),u.dispose(),[2,{keypoints:d,score:s/d.length}]}})})}function JSe(t,e,n){return ot(this,void 0,void 0,function(){var s,r,i;return lt(this,function(a){return s=AP(t),r=function(o,l,u){return Q(function(){var c=KSe(o,u);return re(pe(M(o,Ae(l,"int32")),"float32"),c)})}(s,n,e),i=qSe(t,s),[2,[r,i]]})})}function zT(t,e){return(t-1)%e==0}var LT="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",PT="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function MT(t,e){return function(n,s){return(n-1)%s==0}(t,e)?t:Math.floor(t/e)*e+1}var BT=function(){function t(e,n){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;R(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,i,a=(r=n.inputResolution,i=n.outputStride,{height:MT(r.height,i),width:MT(r.width,i)});(function(o){R(LSe.indexOf(o)>=0,function(){return"outputStride of ".concat(o," is invalid. ")+"It must be either 8 or 16."})})(n.outputStride),function(o,l){R(zT(o.height,l),function(){return"height of ".concat(o.height," is invalid for output stride ")+"".concat(l,".")}),R(zT(o.width,l),function(){return"width of ".concat(o.width," is invalid for output stride ")+"".concat(l,".")})}(a,n.outputStride),this.inputResolution=a,this.outputStride=n.outputStride,this.architecture=n.architecture}return t.prototype.estimatePoses=function(e,n){return n===void 0&&(n=RT),ot(this,void 0,void 0,function(){return lt(this,function(s){return[2,this.estimatePosesGPU(e,n,!1)]})})},t.prototype.estimatePosesGPU=function(e,n,s){return n===void 0&&(n=RT),s===void 0&&(s=!1),ot(this,void 0,void 0,function(){var r,i,a,o,l,u,c,h,d,f,p,m,g,y,x,w,v,S;return lt(this,function(N){switch(N.label){case 0:return r=function(I){var T=I;if(T.maxPoses==null&&(T.maxPoses=1),T.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(T.maxPoses,". Should be > 0."));if(T.maxPoses>1){if((T=Dt(Dt({},PSe),T)).scoreThreshold<0||T.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(T.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(T.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(T.nmsRadius,"."))}return T}(n),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,i=Wv(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),a=i.imageTensor,o=i.padding,l=this.architecture==="ResNet50"?re(a,MSe):vP(a,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=gt(u[2],[0]),h=gt(u[3],[0]),d=gt(u[0],[0]),f=gt(u[1],[0])):(c=gt(u[0],[0]),h=gt(u[1],[0]),d=gt(u[2],[0]),f=gt(u[3],[0])),p=ur(h),this.maxPoses!==1?[3,5]:s?[4,JSe(p,c,this.outputStride)]:[3,2]);case 1:return g=N.sent(),x=g[0],y=g[1],m=[x,y],[3,4];case 2:return[4,ZSe(p,c,this.outputStride)];case 3:x=N.sent(),m=[x],N.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,HSe(p,c,d,f,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:m=N.sent(),N.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");w=this.getCanvasInfo(Tc(e),this.inputResolution,o)}else S=Tc(e),v=function(I,T,A,D){var O=T.height,U=T.width,B=O/(A.height*(1-D.top-D.bottom)),q=U/(A.width*(1-D.left-D.right)),H=-D.top*A.height,L=-D.left*A.width;if(q===1&&B===1&&H===0&&L===0)return I;for(var Z=0,K=I;Z<K.length;Z++)for(var ee=0,se=K[Z].keypoints;ee<se.length;ee++){var ie=se[ee];ie.x=(ie.x+L)*q,ie.y=(ie.y+H)*B}return I}(m,S,this.inputResolution,o),r.flipHorizontal&&(v=function(I,T){for(var A=0,D=I;A<D.length;A++)for(var O=0,U=D[A].keypoints;O<U.length;O++){var B=U[O];B.x=T.width-1-B.x}return I}(v,S));return a.dispose(),l.dispose(),ze(u),c.dispose(),h.dispose(),d.dispose(),f.dispose(),p.dispose(),[2,s?[m,w]:v]}})})},t.prototype.getCanvasInfo=function(e,n,s){var r=e.height,i=e.width,a=r/(n.height*(1-s.top-s.bottom)),o=i/(n.width*(1-s.left-s.right)),l=-s.top*n.height;return[-s.left*n.width,l,o,a,e.width,e.height]},t.prototype.dispose=function(){this.posenetModel.dispose()},t.prototype.reset=function(){},t}();function eCe(t){return t===void 0&&(t=$T),ot(this,void 0,void 0,function(){var e,n,s,r,i;return lt(this,function(a){switch(a.label){case 0:return(e=function(c){var h=c||$T;if(h.architecture==null&&(h.architecture="MobileNetV1"),NT.indexOf(h.architecture)<0)throw new Error("Invalid architecture ".concat(h.architecture,". ")+"Should be one of ".concat(NT));if(h.inputResolution==null&&(h.inputResolution={height:257,width:257}),h.outputStride==null&&(h.outputStride=16),IT[h.architecture].indexOf(h.outputStride)<0)throw new Error("Invalid outputStride ".concat(h.outputStride,". ")+"Should be one of ".concat(IT[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.multiplier==null&&(h.multiplier=1),TT[h.architecture].indexOf(h.multiplier)<0)throw new Error("Invalid multiplier ".concat(h.multiplier,". ")+"Should be one of ".concat(TT[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.quantBytes==null&&(h.quantBytes=4),ET.indexOf(h.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(h.quantBytes,". ")+"Should be one of ".concat(ET," ")+"for architecture ".concat(h.architecture,"."));if(h.architecture==="MobileNetV1"&&h.outputStride===32&&h.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return h}(t)).architecture!=="ResNet50"?[3,2]:(o=e.outputStride,l=e.quantBytes,u="model-stride".concat(o,".json"),n=l===4?PT+"float/"+u:PT+"quant".concat(l,"/")+u,[4,vc(e.modelUrl||n)]);case 1:return s=a.sent(),[2,new BT(s,e)];case 2:return r=function(c,h,d){var f={1:"100",.75:"075",.5:"050"},p="model-stride".concat(c,".json");return d===4?LT+"float/".concat(f[h],"/")+p:LT+"quant".concat(d,"/").concat(f[h],"/")+p}(e.outputStride,e.multiplier,e.quantBytes),[4,vc(e.modelUrl||r)];case 3:return i=a.sent(),[2,new BT(i,e)]}var o,l,u})})}function tCe(t,e){return ot(this,void 0,void 0,function(){var n,s;return lt(this,function(r){switch(t){case Gi.PoseNet:return[2,eCe(e)];case Gi.BlazePose:if(s=void 0,(n=e)!=null){if(n.runtime==="tfjs")return[2,ESe(e)];if(n.runtime==="mediapipe")return[2,tSe(e)];s=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case Gi.MoveNet:return[2,zSe(e)];default:throw new Error("".concat(t," is not a supported model name."))}})})}var nCe={modelType:{SINGLEPOSE_THUNDER:"SinglePose.Thunder"}};let Cl=null,bd=null,Rg=!1;const sCe=()=>{try{const t=document.createElement("canvas");return!!(t.getContext("webgl")||t.getContext("experimental-webgl"))}catch{return!1}},rCe=async()=>{try{if(console.log("Attempting to set backend to WebGL..."),!sCe())return console.warn("WebGL is not available in this browser"),!1;const t=HU("webgl"),e=new Promise((r,i)=>{setTimeout(()=>i(new Error("WebGL backend initialization timed out")),1e4)});await Promise.race([t,e]);const n=xo(),s=n==="webgl";return s?console.log("Successfully set backend to WebGL"):console.warn(`Failed to set WebGL backend, current backend is: ${n}`),s}catch(t){return console.warn("Error setting WebGL backend:",t),!1}},iCe=()=>bd||(Rg&&Cl?Promise.resolve(!0):(bd=(async()=>{try{console.log("Initializing TensorFlow.js..."),await rCe(),await jU(),console.log("TensorFlow.js backend ready");const t={name:xo(),memory:ev()};console.log("Backend details:",t);const e=nCe.modelType.SINGLEPOSE_THUNDER,n=tCe(Gi.MoveNet,{modelType:e,enableSmoothing:!0}),s=new Promise((r,i)=>{setTimeout(()=>i(new Error("Model loading timed out after 30 seconds")),3e4)});return Cl=await Promise.race([n,s]),console.log("MoveNet model loaded successfully"),Rg=!0,!0}catch(t){throw console.error("TensorFlow initialization error:",t),Rg=!1,Cl=null,t}finally{bd=null}})(),bd)),aCe=()=>Cl,oCe=()=>{if(Cl){try{Cl.dispose(),console.log("TensorFlow detector disposed")}catch(t){console.error("Error disposing detector:",t)}Cl=null,Rg=!1}},lCe=()=>{const[t,e]=Je.useState("initializing"),[n,s]=Je.useState(null),[r,i]=Je.useState(null),a=async()=>{try{e("initializing"),s(null),await iCe(),i(xo()||null),e("ready")}catch(l){console.error("TensorFlow initialization error in hook:",l),s("Failed to initialize TensorFlow: "+(l instanceof Error?l.message:"Unknown error")),e("error")}},o=()=>{oCe()};return Je.useEffect(()=>(a(),()=>{o()}),[]),{detector:aCe(),status:t,error:n,initializeTensorFlow:a,disposeDetector:o}},uCe="/snap-flex/assets/screenshot-CaT4UDId.png";function cCe(t,e){if(e==="initializing")return"Initializing...";switch(t){case"initializing":return"Initializing...";case"start":return"Start";case"loading":return"Loading...";case"error":return"Error";default:return"Start"}}function hCe({onStart:t,status:e,tensorFlowStatus:n}){const s=e==="start"&&n==="ready";return Oe.jsxs("div",{className:"start-screen",children:[Oe.jsx("h1",{children:"Snap Flex"}),Oe.jsx("img",{src:uCe,alt:"App screenshot",className:"start-screen-image"}),Oe.jsxs("div",{className:"app-description",children:[Oe.jsx("h2",{children:"Snap-Flex"}),Oe.jsxs("p",{children:["Measure your knee flexion angle using automatic pose detection. 100% private: No videos, images, or data are uploaded. Everything stays on your device. Uses TensorFlow.js and MoveNet.",Oe.jsx("br",{}),Oe.jsx("a",{href:"https://github.com/amacinho/snap-flex/",children:"Source code on GitHub"}),"."]})]}),Oe.jsx("button",{onClick:t,className:"start-button",disabled:!s,children:cCe(e,n)})]})}const dCe=()=>{const[t,e]=Je.useState("off"),[n,s]=Je.useState(!1),[r,i]=Je.useState(null),[a,o]=Je.useState("user"),[l,u]=Je.useState(null),[c,h]=Je.useState(nr.LEFT),[d,f]=Je.useState(!1),[p,m]=Je.useState(!1),g=Je.useRef(null),{detector:y,status:x}=lCe(),w=Je.useMemo(()=>n?"capturing":x==="initializing"?"initializing":x==="error"?"error":t==="off"&&x==="ready"?"start":t==="on"&&x==="ready"?"ready":"initializing",[x,t,n]),v=Je.useCallback(U=>{h(B=>(console.log("State update:",B,"->",U),U))},[c]),S=DV(g,y,w,c,d,v);Je.useEffect(()=>{if(!l){console.log("No stream");return}if(!g.current){console.log("No video ref");return}g.current.srcObject=l;const U=()=>{g.current&&g.current.play().catch(B=>{console.error("Error playing video:",B),i("Error playing video")})};return g.current.addEventListener("loadedmetadata",U),()=>{g.current&&g.current.removeEventListener("loadedmetadata",U)}},[l]);const N=async U=>{console.log("Starting camera wıth facing mode:",U);const B=await navigator.mediaDevices.getUserMedia({video:{facingMode:U},audio:!1});u(B)},I=async U=>{try{await N(U),T()}catch{i("Failed to access camera. Please check permissions.")}},T=()=>{console.log("Setting camera from",t,"to on"),e("on")},A=async()=>(await navigator.mediaDevices.enumerateDevices()).some(B=>B.kind==="videoinput"&&B.label.toLowerCase().includes("back")),D=Je.useCallback(async()=>{var B,q;const U=a==="user"?"environment":"user";console.log("Attempting to flip camera from",a,"to",U);try{if(U==="environment"&&!await A()){console.log("Back camera not available, staying in user mode");return}if((B=g.current)!=null&&B.srcObject){const H=g.current.srcObject.getTracks();console.log("Stopping current camera tracks"),H.forEach(L=>L.stop())}await N(U),console.log("Camera flip successful, updating state"),o(U)}catch(H){console.error("Camera flip failed:",H),(q=g.current)!=null&&q.srcObject&&(g.current.srcObject.getTracks().forEach(Z=>Z.stop()),g.current.srcObject=null),o(a)}},[a]);Je.useCallback(()=>{console.log("History button clicked"),m(!0)},[]),Je.useCallback(()=>{console.log("Capture button clicked"),setTimeout(()=>{s(!0)},0)},[]),Je.useCallback(()=>{console.log("Save best clicked"),s(!1)},[]),Je.useCallback(()=>{console.log("Cancel clicked"),s(!1)},[]);const O=Je.useCallback(U=>{const B=U.target.checked;console.log("Auto knee selection changed to:",B),f(B)},[]);return Oe.jsxs("div",{id:"app",children:[(w==="start"||w==="initializing")&&Oe.jsx(hCe,{onStart:()=>I(a),status:w,tensorFlowStatus:x}),r&&Oe.jsx("p",{style:{color:"red"},children:r}),p&&Oe.jsx(eU,{onClose:()=>m(!1)}),Oe.jsxs("div",{className:`camera-view ${w==="ready"||w==="capturing"?"visible":"hidden"} ${a==="user"?"front-facing":""}`,children:[Oe.jsx("video",{ref:g,autoPlay:!0,playsInline:!0,muted:!0,className:"video-source",style:{transform:a==="user"?"scaleX(-1)":"none"}}),(w==="ready"||w==="capturing")&&Oe.jsxs(Oe.Fragment,{children:[Oe.jsx(qV,{videoRef:g,kneeMetrics:S,isFrontFacing:a==="user"}),Oe.jsxs("div",{className:"top-right-corner",children:[Oe.jsx(JV,{currentAngle:S.averageAngle}),Oe.jsx(YV,{autoKneeSelection:d,currentKnee:c,handleAutoKneeSelectionChange:O,handleKneeChange:v})]}),Oe.jsx("div",{className:"camera-flip-button",children:Oe.jsx(HV,{cameraFacingMode:a,handleFlip:D,status:w})})]})]})]})};wV.createRoot(document.getElementById("root")).render(Oe.jsx(dCe,{}));
